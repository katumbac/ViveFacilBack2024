[
    {
        "label": "warnings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "warnings",
        "description": "warnings",
        "detail": "warnings",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "pathlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pathlib",
        "description": "pathlib",
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PlanProveedor",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "ArrayField",
        "importPath": "django.contrib.postgres.fields",
        "description": "django.contrib.postgres.fields",
        "isExtraImport": true,
        "detail": "django.contrib.postgres.fields",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Permission",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Permission",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "FCMDevice",
        "importPath": "fcm_django.models",
        "description": "fcm_django.models",
        "isExtraImport": true,
        "detail": "fcm_django.models",
        "documentation": {}
    },
    {
        "label": "FCMDevice",
        "importPath": "fcm_django.models",
        "description": "fcm_django.models",
        "isExtraImport": true,
        "detail": "fcm_django.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.views",
        "description": "api.views",
        "isExtraImport": true,
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "rest_framework.authtoken",
        "description": "rest_framework.authtoken",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "chain",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "namedtuple",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PlanProveedorSerializer",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "TokenAuthentication",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "FacebookOAuth2Adapter",
        "importPath": "allauth.socialaccount.providers.facebook.views",
        "description": "allauth.socialaccount.providers.facebook.views",
        "isExtraImport": true,
        "detail": "allauth.socialaccount.providers.facebook.views",
        "documentation": {}
    },
    {
        "label": "GoogleOAuth2Adapter",
        "importPath": "allauth.socialaccount.providers.google.views",
        "description": "allauth.socialaccount.providers.google.views",
        "isExtraImport": true,
        "detail": "allauth.socialaccount.providers.google.views",
        "documentation": {}
    },
    {
        "label": "SocialLoginView",
        "importPath": "rest_auth.registration.views",
        "description": "rest_auth.registration.views",
        "isExtraImport": true,
        "detail": "rest_auth.registration.views",
        "documentation": {}
    },
    {
        "label": "id_token",
        "importPath": "google.oauth2",
        "description": "google.oauth2",
        "isExtraImport": true,
        "detail": "google.oauth2",
        "documentation": {}
    },
    {
        "label": "service_account",
        "importPath": "google.oauth2",
        "description": "google.oauth2",
        "isExtraImport": true,
        "detail": "google.oauth2",
        "documentation": {}
    },
    {
        "label": "requests",
        "importPath": "google.auth.transport",
        "description": "google.auth.transport",
        "isExtraImport": true,
        "detail": "google.auth.transport",
        "documentation": {}
    },
    {
        "label": "AuthenticationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "HTTPAdapter",
        "importPath": "requests.adapters",
        "description": "requests.adapters",
        "isExtraImport": true,
        "detail": "requests.adapters",
        "documentation": {}
    },
    {
        "label": "Retry",
        "importPath": "urllib3.util.retry",
        "description": "urllib3.util.retry",
        "isExtraImport": true,
        "detail": "urllib3.util.retry",
        "documentation": {}
    },
    {
        "label": "get_template",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "FCMNotification",
        "importPath": "pyfcm",
        "description": "pyfcm",
        "isExtraImport": true,
        "detail": "pyfcm",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "firebase_admin.messaging",
        "description": "firebase_admin.messaging",
        "isExtraImport": true,
        "detail": "firebase_admin.messaging",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "firebase_admin.messaging",
        "description": "firebase_admin.messaging",
        "isExtraImport": true,
        "detail": "firebase_admin.messaging",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "b64encode",
        "importPath": "base64",
        "description": "base64",
        "isExtraImport": true,
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "get_random_string",
        "importPath": "django.utils.crypto",
        "description": "django.utils.crypto",
        "isExtraImport": true,
        "detail": "django.utils.crypto",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "http",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "http",
        "description": "http",
        "detail": "http",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "api_settings",
        "importPath": "rest_framework.settings",
        "description": "rest_framework.settings",
        "isExtraImport": true,
        "detail": "rest_framework.settings",
        "documentation": {}
    },
    {
        "label": "MyPaginationMixin",
        "importPath": "api.pagination",
        "description": "api.pagination",
        "isExtraImport": true,
        "detail": "api.pagination",
        "documentation": {}
    },
    {
        "label": "MyCustomPagination",
        "importPath": "api.pagination",
        "description": "api.pagination",
        "isExtraImport": true,
        "detail": "api.pagination",
        "documentation": {}
    },
    {
        "label": "MultiPartParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "FormParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "django.core.files",
        "description": "django.core.files",
        "isExtraImport": true,
        "detail": "django.core.files",
        "documentation": {}
    },
    {
        "label": "codecs",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "codecs",
        "description": "codecs",
        "detail": "codecs",
        "documentation": {}
    },
    {
        "label": "pytz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytz",
        "description": "pytz",
        "detail": "pytz",
        "documentation": {}
    },
    {
        "label": "firebase_admin",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "firebase_admin",
        "description": "firebase_admin",
        "detail": "firebase_admin",
        "documentation": {}
    },
    {
        "label": "messaging",
        "importPath": "firebase_admin",
        "description": "firebase_admin",
        "isExtraImport": true,
        "detail": "firebase_admin",
        "documentation": {}
    },
    {
        "label": "credentials",
        "importPath": "firebase_admin",
        "description": "firebase_admin",
        "isExtraImport": true,
        "detail": "firebase_admin",
        "documentation": {}
    },
    {
        "label": "FirebaseError",
        "importPath": "firebase_admin.exceptions",
        "description": "firebase_admin.exceptions",
        "isExtraImport": true,
        "detail": "firebase_admin.exceptions",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "ACCESS_URL",
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "isExtraImport": true,
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "google.auth.transport.requests",
        "description": "google.auth.transport.requests",
        "isExtraImport": true,
        "detail": "google.auth.transport.requests",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "firestore_adminCallTransformer",
        "kind": 6,
        "importPath": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "description": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "peekOfCode": "class firestore_adminCallTransformer(cst.CSTTransformer):\n    CTRL_PARAMS: Tuple[str] = ('retry', 'timeout', 'metadata')\n    METHOD_TO_PARAMS: Dict[str, Tuple[str]] = {\n        'bulk_delete_documents': ('name', 'collection_ids', 'namespace_ids', ),\n        'create_backup_schedule': ('parent', 'backup_schedule', ),\n        'create_database': ('parent', 'database', 'database_id', ),\n        'create_index': ('parent', 'index', ),\n        'delete_backup': ('name', ),\n        'delete_backup_schedule': ('name', ),\n        'delete_database': ('name', 'etag', ),",
        "detail": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "documentation": {}
    },
    {
        "label": "partition",
        "kind": 2,
        "importPath": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "description": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "peekOfCode": "def partition(\n    predicate: Callable[[Any], bool],\n    iterator: Sequence[Any]\n) -> Tuple[List[Any], List[Any]]:\n    \"\"\"A stable, out-of-place partition.\"\"\"\n    results = ([], [])\n    for i in iterator:\n        results[int(predicate(i))].append(i)\n    # Returns trueList, falseList\n    return results[1], results[0]",
        "detail": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "documentation": {}
    },
    {
        "label": "fix_files",
        "kind": 2,
        "importPath": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "description": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "peekOfCode": "def fix_files(\n    in_dir: pathlib.Path,\n    out_dir: pathlib.Path,\n    *,\n    transformer=firestore_adminCallTransformer(),\n):\n    \"\"\"Duplicate the input dir to the output dir, fixing file method calls.\n    Preconditions:\n    * in_dir is a real directory\n    * out_dir is a real, empty directory",
        "detail": ".venv.Scripts.fixup_firestore_admin_v1_keywords",
        "documentation": {}
    },
    {
        "label": "firestoreCallTransformer",
        "kind": 6,
        "importPath": ".venv.Scripts.fixup_firestore_v1_keywords",
        "description": ".venv.Scripts.fixup_firestore_v1_keywords",
        "peekOfCode": "class firestoreCallTransformer(cst.CSTTransformer):\n    CTRL_PARAMS: Tuple[str] = ('retry', 'timeout', 'metadata')\n    METHOD_TO_PARAMS: Dict[str, Tuple[str]] = {\n        'batch_get_documents': ('database', 'documents', 'mask', 'transaction', 'new_transaction', 'read_time', ),\n        'batch_write': ('database', 'writes', 'labels', ),\n        'begin_transaction': ('database', 'options', ),\n        'commit': ('database', 'writes', 'transaction', ),\n        'create_document': ('parent', 'collection_id', 'document', 'document_id', 'mask', ),\n        'delete_document': ('name', 'current_document', ),\n        'get_document': ('name', 'mask', 'transaction', 'read_time', ),",
        "detail": ".venv.Scripts.fixup_firestore_v1_keywords",
        "documentation": {}
    },
    {
        "label": "partition",
        "kind": 2,
        "importPath": ".venv.Scripts.fixup_firestore_v1_keywords",
        "description": ".venv.Scripts.fixup_firestore_v1_keywords",
        "peekOfCode": "def partition(\n    predicate: Callable[[Any], bool],\n    iterator: Sequence[Any]\n) -> Tuple[List[Any], List[Any]]:\n    \"\"\"A stable, out-of-place partition.\"\"\"\n    results = ([], [])\n    for i in iterator:\n        results[int(predicate(i))].append(i)\n    # Returns trueList, falseList\n    return results[1], results[0]",
        "detail": ".venv.Scripts.fixup_firestore_v1_keywords",
        "documentation": {}
    },
    {
        "label": "fix_files",
        "kind": 2,
        "importPath": ".venv.Scripts.fixup_firestore_v1_keywords",
        "description": ".venv.Scripts.fixup_firestore_v1_keywords",
        "peekOfCode": "def fix_files(\n    in_dir: pathlib.Path,\n    out_dir: pathlib.Path,\n    *,\n    transformer=firestoreCallTransformer(),\n):\n    \"\"\"Duplicate the input dir to the output dir, fixing file method calls.\n    Preconditions:\n    * in_dir is a real directory\n    * out_dir is a real, empty directory",
        "detail": ".venv.Scripts.fixup_firestore_v1_keywords",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0001_initial",
        "description": "api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Categoria',\n            fields=[",
        "detail": "api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0002_auto_20201003_0107",
        "description": "api.migrations.0002_auto_20201003_0107",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='ciudad',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0002_auto_20201003_0107",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0003_auto_20201003_1026",
        "description": "api.migrations.0003_auto_20201003_1026",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0002_auto_20201003_0107'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='ciudad',\n            field=models.CharField(default='No especificado', max_length=255),\n        ),",
        "detail": "api.migrations.0003_auto_20201003_1026",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0004_remove_datos_ciudad",
        "description": "api.migrations.0004_remove_datos_ciudad",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0003_auto_20201003_1026'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='datos',\n            name='ciudad',\n        ),\n    ]",
        "detail": "api.migrations.0004_remove_datos_ciudad",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0005_auto_20201006_1608",
        "description": "api.migrations.0005_auto_20201006_1608",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0004_remove_datos_ciudad'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='profesion',\n            name='servicio',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0005_auto_20201006_1608",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0006_auto_20201009_1207",
        "description": "api.migrations.0006_auto_20201009_1207",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('api', '0005_auto_20201006_1608'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='tipo',\n            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='auth.group'),",
        "detail": "api.migrations.0006_auto_20201009_1207",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0007_auto_20201010_1219",
        "description": "api.migrations.0007_auto_20201010_1219",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('api', '0006_auto_20201009_1207'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='tipo',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='auth.group'),",
        "detail": "api.migrations.0007_auto_20201010_1219",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0008_auto_20201012_1027",
        "description": "api.migrations.0008_auto_20201012_1027",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0007_auto_20201010_1219'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='servicio',\n            name='foto',\n            field=models.ImageField(null=True, upload_to='servicio'),\n        ),",
        "detail": "api.migrations.0008_auto_20201012_1027",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0009_auto_20201012_1039",
        "description": "api.migrations.0009_auto_20201012_1039",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0008_auto_20201012_1027'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='servicio',\n            name='foto',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0009_auto_20201012_1039",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0010_profesion_descripcion",
        "description": "api.migrations.0010_profesion_descripcion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0009_auto_20201012_1039'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='profesion',\n            name='descripcion',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0010_profesion_descripcion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0011_auto_20201012_1755",
        "description": "api.migrations.0011_auto_20201012_1755",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0010_profesion_descripcion'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='fecha_expiracion',\n            field=models.DateField(),\n        ),",
        "detail": "api.migrations.0011_auto_20201012_1755",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0012_auto_20201013_1039",
        "description": "api.migrations.0012_auto_20201013_1039",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0011_auto_20201012_1755'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='ubicacion',\n            name='altitud',\n            field=models.DecimalField(decimal_places=30, max_digits=30),\n        ),",
        "detail": "api.migrations.0012_auto_20201013_1039",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0013_auto_20201013_1047",
        "description": "api.migrations.0013_auto_20201013_1047",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0012_auto_20201013_1039'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='ubicacion',\n            name='altitud',\n            field=models.DecimalField(decimal_places=15, max_digits=30),\n        ),",
        "detail": "api.migrations.0013_auto_20201013_1047",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0014_datos_ciudad",
        "description": "api.migrations.0014_datos_ciudad",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0013_auto_20201013_1047'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='datos',\n            name='ciudad',\n            field=models.CharField(max_length=20, null=True),\n        ),",
        "detail": "api.migrations.0014_datos_ciudad",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0015_auto_20201025_2320",
        "description": "api.migrations.0015_auto_20201025_2320",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0014_datos_ciudad'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='solicitud',\n            name='proveedores',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0015_auto_20201025_2320",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0016_auto_20201025_2333",
        "description": "api.migrations.0016_auto_20201025_2333",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0015_auto_20201025_2320'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='proveedor',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.proveedor'),\n        ),",
        "detail": "api.migrations.0016_auto_20201025_2333",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0017_envio_interesados_oferta",
        "description": "api.migrations.0017_envio_interesados_oferta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0016_auto_20201025_2333'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='envio_interesados',\n            name='oferta',\n            field=models.DecimalField(decimal_places=10, max_digits=10, null=True),\n        ),",
        "detail": "api.migrations.0017_envio_interesados_oferta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0018_auto_20201027_1621",
        "description": "api.migrations.0018_auto_20201027_1621",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0017_envio_interesados_oferta'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='envio_interesados',\n            name='oferta',\n            field=models.DecimalField(blank=True, decimal_places=10, max_digits=10, null=True),\n        ),",
        "detail": "api.migrations.0018_auto_20201027_1621",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0019_auto_20201027_1740",
        "description": "api.migrations.0019_auto_20201027_1740",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0018_auto_20201027_1621'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='envio_interesados',\n            name='oferta',\n            field=models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True),\n        ),",
        "detail": "api.migrations.0019_auto_20201027_1740",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0020_auto_20201027_1741",
        "description": "api.migrations.0020_auto_20201027_1741",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0019_auto_20201027_1740'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='envio_interesados',\n            name='oferta',\n            field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True),\n        ),",
        "detail": "api.migrations.0020_auto_20201027_1741",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0021_auto_20201028_2031",
        "description": "api.migrations.0021_auto_20201028_2031",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0020_auto_20201027_1741'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='ubicacion',\n            name='foto_ubicacion',\n            field=models.ImageField(blank=True, null=True, upload_to='foto_solicitud/foto_ubicacion'),\n        ),",
        "detail": "api.migrations.0021_auto_20201028_2031",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0022_datos_cedula",
        "description": "api.migrations.0022_datos_cedula",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0021_auto_20201028_2031'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='datos',\n            name='cedula',\n            field=models.CharField(default='0999999999', max_length=20, null=True),\n        ),",
        "detail": "api.migrations.0022_datos_cedula",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0023_document_proveedor_documents",
        "description": "api.migrations.0023_document_proveedor_documents",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0022_datos_cedula'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Document',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('descripcion', models.CharField(max_length=200, null=True)),",
        "detail": "api.migrations.0023_document_proveedor_documents",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0024_auto_20201103_1443",
        "description": "api.migrations.0024_auto_20201103_1443",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0023_document_proveedor_documents'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor',\n            name='document',\n            field=models.ManyToManyField(null=True, to='api.Document'),\n        ),",
        "detail": "api.migrations.0024_auto_20201103_1443",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0025_banco_cuenta_proveedor_pendiente_tipo_cuenta",
        "description": "api.migrations.0025_banco_cuenta_proveedor_pendiente_tipo_cuenta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0024_auto_20201103_1443'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Banco',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nombre', models.CharField(max_length=255)),",
        "detail": "api.migrations.0025_banco_cuenta_proveedor_pendiente_tipo_cuenta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0026_cuenta_numero_cuenta",
        "description": "api.migrations.0026_cuenta_numero_cuenta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0025_banco_cuenta_proveedor_pendiente_tipo_cuenta'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cuenta',\n            name='numero_cuenta',\n            field=models.CharField(default='0999999999', max_length=25),\n        ),",
        "detail": "api.migrations.0026_cuenta_numero_cuenta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0027_auto_20201103_1613",
        "description": "api.migrations.0027_auto_20201103_1613",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0026_cuenta_numero_cuenta'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='proveedor_pendiente',\n            old_name='descripcion',\n            new_name='email',\n        ),",
        "detail": "api.migrations.0027_auto_20201103_1613",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0028_auto_20201103_2044",
        "description": "api.migrations.0028_auto_20201103_2044",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0027_auto_20201103_1613'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='ano_experiencia',\n            field=models.PositiveIntegerField(default=0),\n        ),",
        "detail": "api.migrations.0028_auto_20201103_2044",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0029_auto_20201105_1959",
        "description": "api.migrations.0029_auto_20201105_1959",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0028_auto_20201103_2044'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='document',\n            name='documento',\n            field=models.FileField(null=True, upload_to='documents'),\n        ),",
        "detail": "api.migrations.0029_auto_20201105_1959",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0030_auto_20201105_2025",
        "description": "api.migrations.0030_auto_20201105_2025",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0029_auto_20201105_1959'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='descripcion',\n            field=models.CharField(blank=True, max_length=200, null=True),\n        ),",
        "detail": "api.migrations.0030_auto_20201105_2025",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0031_auto_20201106_1131",
        "description": "api.migrations.0031_auto_20201106_1131",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0030_auto_20201105_2025'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='foto_descripcion',\n            field=models.ImageField(blank=True, null=True, upload_to='foto_solicitud/foto_descripcion'),\n        ),",
        "detail": "api.migrations.0031_auto_20201106_1131",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0032_administrador",
        "description": "api.migrations.0032_administrador",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0031_auto_20201106_1131'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Administrador',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('estado', models.BooleanField(default=True)),",
        "detail": "api.migrations.0032_administrador",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0033_datos_security_access",
        "description": "api.migrations.0033_datos_security_access",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0032_administrador'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='datos',\n            name='security_access',\n            field=models.UUIDField(blank=True, editable=False, null=True),\n        ),",
        "detail": "api.migrations.0033_datos_security_access",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0034_proveedor_active",
        "description": "api.migrations.0034_proveedor_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0033_datos_security_access'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor',\n            name='active',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "api.migrations.0034_proveedor_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0035_remove_proveedor_active",
        "description": "api.migrations.0035_remove_proveedor_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0034_proveedor_active'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor',\n            name='active',\n        ),\n    ]",
        "detail": "api.migrations.0035_remove_proveedor_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0036_solicitud_adjudicar",
        "description": "api.migrations.0036_solicitud_adjudicar",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0035_remove_proveedor_active'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitud',\n            name='adjudicar',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "api.migrations.0036_solicitud_adjudicar",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0037_auto_20201122_1824",
        "description": "api.migrations.0037_auto_20201122_1824",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0036_solicitud_adjudicar'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='proveedor',\n            field=models.CharField(blank=True, max_length=300, null=True),\n        ),",
        "detail": "api.migrations.0037_auto_20201122_1824",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0038_auto_20201122_1959",
        "description": "api.migrations.0038_auto_20201122_1959",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0037_auto_20201122_1824'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='proveedor',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.proveedor'),\n        ),",
        "detail": "api.migrations.0038_auto_20201122_1959",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0039_auto_20201124_1714",
        "description": "api.migrations.0039_auto_20201124_1714",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('api', '0038_auto_20201122_1959'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='proveedor',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),",
        "detail": "api.migrations.0039_auto_20201124_1714",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0040_auto_20201124_1718",
        "description": "api.migrations.0040_auto_20201124_1718",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0039_auto_20201124_1714'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='proveedor',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.proveedor'),\n        ),",
        "detail": "api.migrations.0040_auto_20201124_1718",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0041_auto_20201124_1724",
        "description": "api.migrations.0041_auto_20201124_1724",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('api', '0040_auto_20201124_1718'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='proveedor',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),",
        "detail": "api.migrations.0041_auto_20201124_1724",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0042_auto_20201124_1730",
        "description": "api.migrations.0042_auto_20201124_1730",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0041_auto_20201124_1724'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='proveedor',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.proveedor'),\n        ),",
        "detail": "api.migrations.0042_auto_20201124_1730",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0043_tarjeta",
        "description": "api.migrations.0043_tarjeta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0042_auto_20201124_1730'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tarjeta',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),",
        "detail": "api.migrations.0043_tarjeta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0044_auto_20201126_1134",
        "description": "api.migrations.0044_auto_20201126_1134",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0043_tarjeta'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='proveedor_pendiente',\n            name='estado',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "api.migrations.0044_auto_20201126_1134",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0045_auto_20201126_1246",
        "description": "api.migrations.0045_auto_20201126_1246",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0044_auto_20201126_1134'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='tarjeta',\n            name='solicitante',\n        ),\n        migrations.CreateModel(",
        "detail": "api.migrations.0045_auto_20201126_1246",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0046_tarjeta_brand",
        "description": "api.migrations.0046_tarjeta_brand",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0045_auto_20201126_1246'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tarjeta',\n            name='brand',\n            field=models.CharField(max_length=200, null=True),\n        ),",
        "detail": "api.migrations.0046_tarjeta_brand",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0047_tarjeta_solicitante_code",
        "description": "api.migrations.0047_tarjeta_solicitante_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0046_tarjeta_brand'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tarjeta_solicitante',\n            name='code',\n            field=models.CharField(max_length=20, null=True),\n        ),",
        "detail": "api.migrations.0047_tarjeta_solicitante_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0048_auto_20201128_2014",
        "description": "api.migrations.0048_auto_20201128_2014",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0047_tarjeta_solicitante_code'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tarjeta',\n            name='code',\n            field=models.CharField(max_length=20, null=True),\n        ),",
        "detail": "api.migrations.0048_auto_20201128_2014",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0049_auto_20201129_0333",
        "description": "api.migrations.0049_auto_20201129_0333",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0048_auto_20201128_2014'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='tarjeta',\n            name='numero',\n            field=models.PositiveIntegerField(),\n        ),",
        "detail": "api.migrations.0049_auto_20201129_0333",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0050_delete_tarjeta",
        "description": "api.migrations.0050_delete_tarjeta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0049_auto_20201129_0333'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Tarjeta',\n        ),\n    ]",
        "detail": "api.migrations.0050_delete_tarjeta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0051_tarjeta",
        "description": "api.migrations.0051_tarjeta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0050_delete_tarjeta'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tarjeta',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),",
        "detail": "api.migrations.0051_tarjeta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0052_auto_20201129_0430",
        "description": "api.migrations.0052_auto_20201129_0430",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0051_tarjeta'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='tarjeta',\n            name='numero',\n            field=models.BigIntegerField(),\n        ),",
        "detail": "api.migrations.0052_auto_20201129_0430",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0053_notificaciones",
        "description": "api.migrations.0053_notificaciones",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0052_auto_20201129_0430'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Notificaciones',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('titulo', models.CharField(max_length=255, null=True)),",
        "detail": "api.migrations.0053_notificaciones",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0054_auto_20201208_2103",
        "description": "api.migrations.0054_auto_20201208_2103",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0053_notificaciones'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Notificaciones',\n            new_name='Notificacion',\n        ),\n    ]",
        "detail": "api.migrations.0054_auto_20201208_2103",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0055_auto_20201208_2126",
        "description": "api.migrations.0055_auto_20201208_2126",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0054_auto_20201208_2103'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='notificacion',\n            name='tipo',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0055_auto_20201208_2126",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0056_auto_20201208_2132",
        "description": "api.migrations.0056_auto_20201208_2132",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('api', '0055_auto_20201208_2126'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='notificacion',\n            name='user_datos',\n        ),",
        "detail": "api.migrations.0056_auto_20201208_2132",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0057_auto_20201208_2138",
        "description": "api.migrations.0057_auto_20201208_2138",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('api', '0056_auto_20201208_2132'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='notificacion',\n            name='user',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "api.migrations.0057_auto_20201208_2138",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0058_auto_20201208_2147",
        "description": "api.migrations.0058_auto_20201208_2147",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0057_auto_20201208_2138'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='categoria',\n            name='nombre',\n            field=models.CharField(max_length=255, unique=True),\n        ),",
        "detail": "api.migrations.0058_auto_20201208_2147",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0059_proveedor_pendiente_documento",
        "description": "api.migrations.0059_proveedor_pendiente_documento",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0058_auto_20201208_2147'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='documento',\n            field=models.FileField(null=True, upload_to='documents'),\n        ),",
        "detail": "api.migrations.0059_proveedor_pendiente_documento",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0060_remove_proveedor_pendiente_documento",
        "description": "api.migrations.0060_remove_proveedor_pendiente_documento",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0059_proveedor_pendiente_documento'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='documento',\n        ),\n    ]",
        "detail": "api.migrations.0060_remove_proveedor_pendiente_documento",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0061_auto_20210122_2252",
        "description": "api.migrations.0061_auto_20210122_2252",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0060_remove_proveedor_pendiente_documento'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='document',\n            name='estado',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "api.migrations.0061_auto_20210122_2252",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0062_solicitud_termino",
        "description": "api.migrations.0062_solicitud_termino",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0061_auto_20210122_2252'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitud',\n            name='termino',\n            field=models.CharField(blank=True, max_length=50, null=True),\n        ),",
        "detail": "api.migrations.0062_solicitud_termino",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0063_promocion",
        "description": "api.migrations.0063_promocion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0062_solicitud_termino'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Promocion',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('titulo', models.CharField(max_length=255, null=True)),",
        "detail": "api.migrations.0063_promocion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0064_promocion_estado",
        "description": "api.migrations.0064_promocion_estado",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0063_promocion'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='promocion',\n            name='estado',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "api.migrations.0064_promocion_estado",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0065_promocion_codigo",
        "description": "api.migrations.0065_promocion_codigo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0064_promocion_estado'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='promocion',\n            name='codigo',\n            field=models.CharField(max_length=25, null=True),\n        ),",
        "detail": "api.migrations.0065_promocion_codigo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0066_auto_20210128_1706",
        "description": "api.migrations.0066_auto_20210128_1706",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0065_promocion_codigo'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='promocion',\n            name='participantes',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0066_auto_20210128_1706",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0067_codigos",
        "description": "api.migrations.0067_codigos",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0066_auto_20210128_1706'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Codigos',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('codigo', models.CharField(max_length=255, null=True)),",
        "detail": "api.migrations.0067_codigos",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0068_auto_20210128_1744",
        "description": "api.migrations.0068_auto_20210128_1744",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0067_codigos'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='promocion',\n            name='codigo',\n            field=models.CharField(max_length=25, null=True, unique=True),\n        ),",
        "detail": "api.migrations.0068_auto_20210128_1744",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0069_pagoefectivo_pagotarjeta",
        "description": "api.migrations.0069_pagoefectivo_pagotarjeta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('api', '0068_auto_20210128_1744'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='PagoTarjeta',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "api.migrations.0069_pagoefectivo_pagotarjeta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0070_solicitud_pagada",
        "description": "api.migrations.0070_solicitud_pagada",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0069_pagoefectivo_pagotarjeta'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitud',\n            name='pagada',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "api.migrations.0070_solicitud_pagada",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0071_auto_20210129_0828",
        "description": "api.migrations.0071_auto_20210129_0828",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0070_solicitud_pagada'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagoefectivo',\n            name='solicitud',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.solicitud'),\n        ),",
        "detail": "api.migrations.0071_auto_20210129_0828",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0072_auto_20210129_0834",
        "description": "api.migrations.0072_auto_20210129_0834",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0071_auto_20210129_0828'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='pagoefectivo',\n            name='solicitud',\n        ),\n        migrations.RemoveField(",
        "detail": "api.migrations.0072_auto_20210129_0834",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0073_remove_pagoefectivo_impuesto",
        "description": "api.migrations.0073_remove_pagoefectivo_impuesto",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0072_auto_20210129_0834'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='pagoefectivo',\n            name='impuesto',\n        ),\n    ]",
        "detail": "api.migrations.0073_remove_pagoefectivo_impuesto",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0074_auto_20210129_1658",
        "description": "api.migrations.0074_auto_20210129_1658",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0073_remove_pagoefectivo_impuesto'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagotarjeta',\n            name='carrier_code',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0074_auto_20210129_1658",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0075_auto_20210129_1952",
        "description": "api.migrations.0075_auto_20210129_1952",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0074_auto_20210129_1658'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='pagosolicitud',\n            name='pago_efectivo',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.pagoefectivo'),\n        ),",
        "detail": "api.migrations.0075_auto_20210129_1952",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0076_auto_20210129_2055",
        "description": "api.migrations.0076_auto_20210129_2055",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0075_auto_20210129_1952'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='codigos',\n            name='user_datos',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.datos'),\n        ),",
        "detail": "api.migrations.0076_auto_20210129_2055",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0077_auto_20210130_1408",
        "description": "api.migrations.0077_auto_20210130_1408",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0076_auto_20210129_2055'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagoefectivo',\n            name='concepto',\n            field=models.CharField(default='Solicitud', max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0077_auto_20210130_1408",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0078_auto_20210130_1427",
        "description": "api.migrations.0078_auto_20210130_1427",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0077_auto_20210130_1408'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='pagoefectivo',\n            name='promocion',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.promocion'),\n        ),",
        "detail": "api.migrations.0078_auto_20210130_1427",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0079_categoria_foto2",
        "description": "api.migrations.0079_categoria_foto2",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0078_auto_20210130_1427'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='categoria',\n            name='foto2',\n            field=models.ImageField(default=True, upload_to='categoria2'),\n        ),",
        "detail": "api.migrations.0079_categoria_foto2",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0080_proveedor_rating",
        "description": "api.migrations.0080_proveedor_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0079_categoria_foto2'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor',\n            name='rating',\n            field=models.SmallIntegerField(default=4),\n        ),",
        "detail": "api.migrations.0080_proveedor_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0081_auto_20210412_1949",
        "description": "api.migrations.0081_auto_20210412_1949",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0080_proveedor_rating'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='proveedor',\n            name='rating',\n            field=models.DecimalField(decimal_places=2, default=4, max_digits=2),\n        ),",
        "detail": "api.migrations.0081_auto_20210412_1949",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0082_auto_20210412_1955",
        "description": "api.migrations.0082_auto_20210412_1955",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0081_auto_20210412_1949'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='proveedor',\n            name='rating',\n            field=models.FloatField(default=4.0),\n        ),",
        "detail": "api.migrations.0082_auto_20210412_1955",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0083_solicitud_rating",
        "description": "api.migrations.0083_solicitud_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0082_auto_20210412_1955'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitud',\n            name='rating',\n            field=models.FloatField(default=4.0),\n        ),",
        "detail": "api.migrations.0083_solicitud_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0084_suggestion",
        "description": "api.migrations.0084_suggestion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0083_solicitud_rating'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Suggestion',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('descripcion', models.TextField()),",
        "detail": "api.migrations.0084_suggestion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0085_proveedor_servicios",
        "description": "api.migrations.0085_proveedor_servicios",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0084_suggestion'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor',\n            name='servicios',\n            field=models.PositiveIntegerField(default=0),\n        ),",
        "detail": "api.migrations.0085_proveedor_servicios",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0086_auto_20210524_1325",
        "description": "api.migrations.0086_auto_20210524_1325",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0085_proveedor_servicios'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='fecha_expiracion',\n            field=models.DateTimeField(),\n        ),",
        "detail": "api.migrations.0086_auto_20210524_1325",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0087_auto_20210524_1327",
        "description": "api.migrations.0087_auto_20210524_1327",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0086_auto_20210524_1325'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='fecha_expiracion',\n            field=models.DateField(),\n        ),",
        "detail": "api.migrations.0087_auto_20210524_1327",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0088_solicitud_descripcion_rating",
        "description": "api.migrations.0088_solicitud_descripcion_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0087_auto_20210524_1327'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitud',\n            name='descripcion_rating',\n            field=models.CharField(default=' ', max_length=100),\n        ),",
        "detail": "api.migrations.0088_solicitud_descripcion_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0089_auto_20210824_1815",
        "description": "api.migrations.0089_auto_20210824_1815",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0088_solicitud_descripcion_rating'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='datos',\n            name='codigo_invitacion',\n            field=models.CharField(default='', max_length=20),\n        ),",
        "detail": "api.migrations.0089_auto_20210824_1815",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0090_auto_20210827_1857",
        "description": "api.migrations.0090_auto_20210827_1857",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0089_auto_20210824_1815'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='codigo_invitacion',\n            field=models.CharField(default=' ', max_length=20),\n        ),",
        "detail": "api.migrations.0090_auto_20210827_1857",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0091_auto_20210827_1921",
        "description": "api.migrations.0091_auto_20210827_1921",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0090_auto_20210827_1857'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='codigo_invitacion',\n            field=models.CharField(default='', max_length=20),\n        ),",
        "detail": "api.migrations.0091_auto_20210827_1921",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0092_auto_20210828_1252",
        "description": "api.migrations.0092_auto_20210828_1252",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0091_auto_20210827_1921'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='codigo_invitacion',\n            field=models.CharField(default='', max_length=12),\n        ),",
        "detail": "api.migrations.0092_auto_20210828_1252",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0093_auto_20211007_2031",
        "description": "api.migrations.0093_auto_20211007_2031",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0092_auto_20210828_1252'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='fecha_expiracion',\n            field=models.CharField(max_length=200),\n        ),",
        "detail": "api.migrations.0093_auto_20211007_2031",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0094_politicas",
        "description": "api.migrations.0094_politicas",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0093_auto_20211007_2031'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Politicas',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('identifier', models.TextField()),",
        "detail": "api.migrations.0094_politicas",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0095_auto_20211031_2148",
        "description": "api.migrations.0095_auto_20211031_2148",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0094_politicas'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='promocion',\n            name='foto',\n            field=models.ImageField(blank=True, null=True, upload_to='promociones'),\n        ),",
        "detail": "api.migrations.0095_auto_20211031_2148",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0096_auto_20211107_2021",
        "description": "api.migrations.0096_auto_20211107_2021",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0095_auto_20211031_2148'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='proveedor',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0096_auto_20211107_2021",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0097_auto_20211109_2314",
        "description": "api.migrations.0097_auto_20211109_2314",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0096_auto_20211107_2021'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='ano_experiencia',\n        ),\n        migrations.RemoveField(",
        "detail": "api.migrations.0097_auto_20211109_2314",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0098_auto_20211109_2327",
        "description": "api.migrations.0098_auto_20211109_2327",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0097_auto_20211109_2314'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='ano_experiencia',\n            field=models.PositiveIntegerField(default=0),\n        ),",
        "detail": "api.migrations.0098_auto_20211109_2327",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0099_auto_20211109_2348",
        "description": "api.migrations.0099_auto_20211109_2348",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0098_auto_20211109_2327'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='ano_experiencia',\n        ),\n        migrations.RemoveField(",
        "detail": "api.migrations.0099_auto_20211109_2348",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0100_remove_proveedor_pendiente_estado",
        "description": "api.migrations.0100_remove_proveedor_pendiente_estado",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0099_auto_20211109_2348'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='estado',\n        ),\n    ]",
        "detail": "api.migrations.0100_remove_proveedor_pendiente_estado",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0101_auto_20211109_2353",
        "description": "api.migrations.0101_auto_20211109_2353",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0100_remove_proveedor_pendiente_estado'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='cedula',\n        ),\n        migrations.RemoveField(",
        "detail": "api.migrations.0101_auto_20211109_2353",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0102_auto_20211109_2354",
        "description": "api.migrations.0102_auto_20211109_2354",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0101_auto_20211109_2353'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='cedula',\n            field=models.CharField(default='', max_length=255),\n        ),",
        "detail": "api.migrations.0102_auto_20211109_2354",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0103_auto_20211109_2356",
        "description": "api.migrations.0103_auto_20211109_2356",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0102_auto_20211109_2354'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='ano_experiencia',\n            field=models.PositiveIntegerField(default=0),\n        ),",
        "detail": "api.migrations.0103_auto_20211109_2356",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0104_auto_20211109_2358",
        "description": "api.migrations.0104_auto_20211109_2358",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0103_auto_20211109_2356'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='ano_experiencia',\n        ),\n        migrations.RemoveField(",
        "detail": "api.migrations.0104_auto_20211109_2358",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0105_auto_20211109_2359",
        "description": "api.migrations.0105_auto_20211109_2359",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0104_auto_20211109_2358'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='proveedor_pendiente',\n            name='banco',\n            field=models.CharField(default='', max_length=255),\n        ),",
        "detail": "api.migrations.0105_auto_20211109_2359",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0106_auto_20211110_0002",
        "description": "api.migrations.0106_auto_20211110_0002",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0105_auto_20211109_2359'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='banco',\n        ),\n        migrations.RemoveField(",
        "detail": "api.migrations.0106_auto_20211110_0002",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0107_auto_20211110_0005",
        "description": "api.migrations.0107_auto_20211110_0005",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0106_auto_20211110_0002'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='profesion',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0107_auto_20211110_0005",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0108_auto_20211110_0013",
        "description": "api.migrations.0108_auto_20211110_0013",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0107_auto_20211110_0005'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='ano_experiencia',\n            field=models.PositiveIntegerField(default=0),\n        ),",
        "detail": "api.migrations.0108_auto_20211110_0013",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0109_proveedor_pendiente_planilla_servicios",
        "description": "api.migrations.0109_proveedor_pendiente_planilla_servicios",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0108_auto_20211110_0013'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='planilla_servicios',\n            field=models.ManyToManyField(to='api.Document'),\n        ),",
        "detail": "api.migrations.0109_proveedor_pendiente_planilla_servicios",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0110_auto_20211110_0021",
        "description": "api.migrations.0110_auto_20211110_0021",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0109_proveedor_pendiente_planilla_servicios'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='planilla_servicios',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0110_auto_20211110_0021",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0111_subcategoria",
        "description": "api.migrations.0111_subcategoria",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0110_auto_20211110_0021'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='SubCategoria',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nombre', models.CharField(max_length=255, unique=True)),",
        "detail": "api.migrations.0111_subcategoria",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0112_auto_20211126_2006",
        "description": "api.migrations.0112_auto_20211126_2006",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0111_subcategoria'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='subcategoria',\n            name='categoria',\n            field=models.CharField(max_length=255, unique=True),\n        ),",
        "detail": "api.migrations.0112_auto_20211126_2006",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0113_delete_subcategoria",
        "description": "api.migrations.0113_delete_subcategoria",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0112_auto_20211126_2006'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='SubCategoria',\n        ),\n    ]",
        "detail": "api.migrations.0113_delete_subcategoria",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0114_ciudad_disponible_cupon_cuponcategoria",
        "description": "api.migrations.0114_ciudad_disponible_cupon_cuponcategoria",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0113_delete_subcategoria'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Ciudad_Disponible',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n            ],",
        "detail": "api.migrations.0114_ciudad_disponible_cupon_cuponcategoria",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0115_datos_cupones",
        "description": "api.migrations.0115_datos_cupones",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0114_ciudad_disponible_cupon_cuponcategoria'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='datos',\n            name='cupones',\n            field=models.ManyToManyField(null=True, to='api.Cupon'),\n        ),",
        "detail": "api.migrations.0115_datos_cupones",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0116_insignia",
        "description": "api.migrations.0116_insignia",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0115_datos_cupones'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Insignia',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nombre', models.CharField(max_length=25, unique=True)),",
        "detail": "api.migrations.0116_insignia",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0117_insignia_descripcion",
        "description": "api.migrations.0117_insignia_descripcion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0116_insignia'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='insignia',\n            name='descripcion',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0117_insignia_descripcion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0118_auto_20211219_0517",
        "description": "api.migrations.0118_auto_20211219_0517",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0117_insignia_descripcion'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='datos',\n            name='cupones',\n        ),\n        migrations.CreateModel(",
        "detail": "api.migrations.0118_auto_20211219_0517",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0119_insignia_tipo",
        "description": "api.migrations.0119_insignia_tipo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0118_auto_20211219_0517'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='insignia',\n            name='tipo',\n            field=models.CharField(max_length=50, null=True),\n        ),",
        "detail": "api.migrations.0119_insignia_tipo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0120_auto_20220104_2313",
        "description": "api.migrations.0120_auto_20220104_2313",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0119_insignia_tipo'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='datos',\n            name='codigo_invitacion',\n            field=models.CharField(default='', max_length=12, null=True),\n        ),",
        "detail": "api.migrations.0120_auto_20220104_2313",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0121_auto_20220224_1226",
        "description": "api.migrations.0121_auto_20220224_1226",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0120_auto_20220104_2313'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Planes',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nombre', models.CharField(max_length=255)),",
        "detail": "api.migrations.0121_auto_20220224_1226",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0122_auto_20220224_1251",
        "description": "api.migrations.0122_auto_20220224_1251",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0121_auto_20220224_1226'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Planes',\n            new_name='Plan',\n        ),\n    ]",
        "detail": "api.migrations.0122_auto_20220224_1251",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0123_auto_20220224_1501",
        "description": "api.migrations.0123_auto_20220224_1501",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0122_auto_20220224_1251'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='plan',\n            name='imagen',\n            field=models.ImageField(upload_to='planes'),\n        ),",
        "detail": "api.migrations.0123_auto_20220224_1501",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0124_auto_20220225_1705",
        "description": "api.migrations.0124_auto_20220225_1705",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0123_auto_20220224_1501'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='plan',\n            name='duracion',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "api.migrations.0124_auto_20220225_1705",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0125_auto_20220225_1749",
        "description": "api.migrations.0125_auto_20220225_1749",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0124_auto_20220225_1705'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='plan',\n            name='imagen',\n            field=models.ImageField(null=True, upload_to='planes'),\n        ),",
        "detail": "api.migrations.0125_auto_20220225_1749",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0126_auto_20220225_2211",
        "description": "api.migrations.0126_auto_20220225_2211",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0125_auto_20220225_1749'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='plan',\n            name='imagen',\n            field=models.ImageField(blank=True, null=True, upload_to='planes'),\n        ),",
        "detail": "api.migrations.0126_auto_20220225_2211",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0127_publicidad",
        "description": "api.migrations.0127_publicidad",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0126_auto_20220225_2211'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Publicidad',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('titulo', models.CharField(max_length=255, null=True)),",
        "detail": "api.migrations.0127_publicidad",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0128_auto_20220228_1959",
        "description": "api.migrations.0128_auto_20220228_1959",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0127_publicidad'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cupon',\n            name='foto',\n            field=models.ImageField(blank=True, null=True, upload_to='cupones'),\n        ),",
        "detail": "api.migrations.0128_auto_20220228_1959",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0129_promocion_fecha_iniciacion",
        "description": "api.migrations.0129_promocion_fecha_iniciacion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0128_auto_20220228_1959'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='promocion',\n            name='fecha_iniciacion',\n            field=models.DateTimeField(null=True),\n        ),",
        "detail": "api.migrations.0129_promocion_fecha_iniciacion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0130_ciudad",
        "description": "api.migrations.0130_ciudad",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0129_promocion_fecha_iniciacion'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Ciudad',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nombre', models.CharField(max_length=200)),",
        "detail": "api.migrations.0130_ciudad",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0131_auto_20220303_1941",
        "description": "api.migrations.0131_auto_20220303_1941",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0130_ciudad'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='suggestion',\n            name='estado',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "api.migrations.0131_auto_20220303_1941",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0132_plan_fecha_creacion",
        "description": "api.migrations.0132_plan_fecha_creacion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0131_auto_20220303_1941'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='plan',\n            name='fecha_creacion',\n            field=models.DateTimeField(auto_now_add=True, null=True),\n        ),",
        "detail": "api.migrations.0132_plan_fecha_creacion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0133_plan_estado",
        "description": "api.migrations.0133_plan_estado",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0132_plan_fecha_creacion'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='plan',\n            name='estado',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "api.migrations.0133_plan_estado",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0134_auto_20220306_2102",
        "description": "api.migrations.0134_auto_20220306_2102",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0133_plan_estado'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor',\n            name='ano_profesion',\n            field=models.PositiveIntegerField(default=0),\n        ),",
        "detail": "api.migrations.0134_auto_20220306_2102",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0135_auto_20220307_1810",
        "description": "api.migrations.0135_auto_20220307_1810",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0134_auto_20220306_2102'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='publicidad',\n            old_name='foto',\n            new_name='imagen',\n        ),",
        "detail": "api.migrations.0135_auto_20220307_1810",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0136_publicidad_fecha_inicio",
        "description": "api.migrations.0136_publicidad_fecha_inicio",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0135_auto_20220307_1810'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='publicidad',\n            name='fecha_inicio',\n            field=models.DateTimeField(default=django.utils.timezone.now),\n            preserve_default=False,",
        "detail": "api.migrations.0136_publicidad_fecha_inicio",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0137_auto_20220309_1653",
        "description": "api.migrations.0137_auto_20220309_1653",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0136_publicidad_fecha_inicio'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor',\n            name='plan',\n        ),\n        migrations.CreateModel(",
        "detail": "api.migrations.0137_auto_20220309_1653",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0138_cupon_fecha_iniciacion",
        "description": "api.migrations.0138_cupon_fecha_iniciacion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0137_auto_20220309_1653'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cupon',\n            name='fecha_iniciacion',\n            field=models.DateTimeField(default=django.utils.timezone.now),\n            preserve_default=False,",
        "detail": "api.migrations.0138_cupon_fecha_iniciacion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0139_auto_20220311_1850",
        "description": "api.migrations.0139_auto_20220311_1850",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0138_cupon_fecha_iniciacion'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='direccion',\n            field=models.CharField(default='', max_length=300),\n        ),",
        "detail": "api.migrations.0139_auto_20220311_1850",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0140_proveedor_pendiente_licencia",
        "description": "api.migrations.0140_proveedor_pendiente_licencia",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0139_auto_20220311_1850'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='licencia',\n            field=models.CharField(default='', max_length=55),\n        ),",
        "detail": "api.migrations.0140_proveedor_pendiente_licencia",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0141_auto_20220312_1641",
        "description": "api.migrations.0141_auto_20220312_1641",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0140_proveedor_pendiente_licencia'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='planproveedor',\n            name='proveedor',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0141_auto_20220312_1641",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0142_auto_20220312_1845",
        "description": "api.migrations.0142_auto_20220312_1845",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0141_auto_20220312_1641'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor',\n            name='id_plan_proveedor',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0142_auto_20220312_1845",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0143_auto_20220313_1012",
        "description": "api.migrations.0143_auto_20220313_1012",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0142_auto_20220312_1845'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='copiaCedula',\n            field=models.FileField(null=True, upload_to='documents'),\n        ),",
        "detail": "api.migrations.0143_auto_20220313_1012",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0144_proveedor_pendiente_copialicencia",
        "description": "api.migrations.0144_proveedor_pendiente_copialicencia",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0143_auto_20220313_1012'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='copiaLicencia',\n            field=models.FileField(null=True, upload_to='documents'),\n        ),",
        "detail": "api.migrations.0144_proveedor_pendiente_copialicencia",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0145_auto_20220313_1113",
        "description": "api.migrations.0145_auto_20220313_1113",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0144_proveedor_pendiente_copialicencia'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='planilla_servicios',\n        ),\n        migrations.CreateModel(",
        "detail": "api.migrations.0145_auto_20220313_1113",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0146_proveedor_pendiente_plantilla_servicios",
        "description": "api.migrations.0146_proveedor_pendiente_plantilla_servicios",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0145_auto_20220313_1113'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='plantilla_servicios',\n            field=models.FileField(null=True, upload_to='documents'),\n        ),",
        "detail": "api.migrations.0146_proveedor_pendiente_plantilla_servicios",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0147_remove_proveedor_pendiente_plantilla_servicios",
        "description": "api.migrations.0147_remove_proveedor_pendiente_plantilla_servicios",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0146_proveedor_pendiente_plantilla_servicios'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor_pendiente',\n            name='plantilla_servicios',\n        ),\n    ]",
        "detail": "api.migrations.0147_remove_proveedor_pendiente_plantilla_servicios",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0148_auto_20220313_1740",
        "description": "api.migrations.0148_auto_20220313_1740",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0147_remove_proveedor_pendiente_plantilla_servicios'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='planproveedor',\n            name='fecha_inicio',\n            field=models.DateTimeField(null=True),\n        ),",
        "detail": "api.migrations.0148_auto_20220313_1740",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0149_delete_planilla_servicios",
        "description": "api.migrations.0149_delete_planilla_servicios",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0148_auto_20220313_1740'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Planilla_Servicios',\n        ),\n    ]",
        "detail": "api.migrations.0149_delete_planilla_servicios",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0150_pendientedocuments",
        "description": "api.migrations.0150_pendientedocuments",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0149_delete_planilla_servicios'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='PendienteDocuments',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('document', models.FileField(blank=True, null=True, upload_to='pendientes-documents')),",
        "detail": "api.migrations.0150_pendientedocuments",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0151_auto_20220314_1842",
        "description": "api.migrations.0151_auto_20220314_1842",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0150_pendientedocuments'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='pendientedocuments',\n            name='pendiente',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0151_auto_20220314_1842",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0152_auto_20220314_1942",
        "description": "api.migrations.0152_auto_20220314_1942",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0151_auto_20220314_1842'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='planproveedor',\n            old_name='plan',\n            new_name='idplan',\n        ),",
        "detail": "api.migrations.0152_auto_20220314_1942",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0153_auto_20220314_1951",
        "description": "api.migrations.0153_auto_20220314_1951",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0152_auto_20220314_1942'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='planproveedor',\n            old_name='idplan',\n            new_name='plan',\n        ),",
        "detail": "api.migrations.0153_auto_20220314_1951",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0154_auto_20220314_2215",
        "description": "api.migrations.0154_auto_20220314_2215",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0153_auto_20220314_1951'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='planproveedor',\n            old_name='plan',\n            new_name='planProveedor',\n        ),",
        "detail": "api.migrations.0154_auto_20220314_2215",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0155_auto_20220315_1140",
        "description": "api.migrations.0155_auto_20220315_1140",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0154_auto_20220314_2215'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='proveedor_pendiente',\n            name='copiaCedula',\n            field=models.FileField(null=True, upload_to='pendientes-copias'),\n        ),",
        "detail": "api.migrations.0155_auto_20220315_1140",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0156_proveedor_pendiente_descripcion",
        "description": "api.migrations.0156_proveedor_pendiente_descripcion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0155_auto_20220315_1140'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='descripcion',\n            field=models.TextField(default=0),\n            preserve_default=False,",
        "detail": "api.migrations.0156_proveedor_pendiente_descripcion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0157_auto_20220317_1151",
        "description": "api.migrations.0157_auto_20220317_1151",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0156_proveedor_pendiente_descripcion'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor',\n            name='copiaCedula',\n            field=models.FileField(null=True, upload_to='documnts'),\n        ),",
        "detail": "api.migrations.0157_auto_20220317_1151",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0158_auto_20220318_1712",
        "description": "api.migrations.0158_auto_20220318_1712",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0157_auto_20220317_1151'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='notificacion',\n            name='imagen',\n            field=models.ImageField(blank=True, null=True, upload_to='notificaciones'),\n        ),",
        "detail": "api.migrations.0158_auto_20220318_1712",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0159_notificacionmasiva",
        "description": "api.migrations.0159_notificacionmasiva",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0158_auto_20220318_1712'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NotificacionMasiva',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('titulo', models.CharField(max_length=255, null=True)),",
        "detail": "api.migrations.0159_notificacionmasiva",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0160_auto_20220406_1109",
        "description": "api.migrations.0160_auto_20220406_1109",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0159_notificacionmasiva'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='profesion_proveedor',\n            name='proveedor',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0160_auto_20220406_1109",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0161_auto_20220406_1223",
        "description": "api.migrations.0161_auto_20220406_1223",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0160_auto_20220406_1109'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor',\n            name='profesiones',\n        ),\n        migrations.AddField(",
        "detail": "api.migrations.0161_auto_20220406_1223",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0162_solicitudprofesion",
        "description": "api.migrations.0162_solicitudprofesion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0161_auto_20220406_1223'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='SolicitudProfesion',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('profesion', models.CharField(max_length=100)),",
        "detail": "api.migrations.0162_solicitudprofesion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0163_solicitudprofesion_documento",
        "description": "api.migrations.0163_solicitudprofesion_documento",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0162_solicitudprofesion'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitudprofesion',\n            name='documento',\n            field=models.FileField(null=True, upload_to='documents'),\n        ),",
        "detail": "api.migrations.0163_solicitudprofesion_documento",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0164_auto_20220408_1606",
        "description": "api.migrations.0164_auto_20220408_1606",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0163_solicitudprofesion_documento'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitudprofesion',\n            name='estado',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "api.migrations.0164_auto_20220408_1606",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0165_auto_20220408_1709",
        "description": "api.migrations.0165_auto_20220408_1709",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0164_auto_20220408_1606'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cargos',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nombre', models.CharField(max_length=200)),",
        "detail": "api.migrations.0165_auto_20220408_1709",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0166_auto_20220409_0913",
        "description": "api.migrations.0166_auto_20220409_0913",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0165_auto_20220408_1709'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Cargos',\n            new_name='Cargo',\n        ),\n    ]",
        "detail": "api.migrations.0166_auto_20220409_0913",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0167_auto_20220409_1126",
        "description": "api.migrations.0167_auto_20220409_1126",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0166_auto_20220409_0913'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitudprofesion',\n            name='documento',\n            field=models.FileField(null=True, upload_to='solicitudes'),\n        ),",
        "detail": "api.migrations.0167_auto_20220409_1126",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0168_auto_20220409_1315",
        "description": "api.migrations.0168_auto_20220409_1315",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0167_auto_20220409_1126'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='cargo',\n            name='porcentaje',\n            field=models.FloatField(default=0.0),\n        ),",
        "detail": "api.migrations.0168_auto_20220409_1315",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0169_auto_20220415_1319",
        "description": "api.migrations.0169_auto_20220415_1319",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0168_auto_20220409_1315'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='solicitud',\n            name='descripcion_rating',\n            field=models.CharField(blank=True, default=' ', max_length=100, null=True),\n        ),",
        "detail": "api.migrations.0169_auto_20220415_1319",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0170_auto_20220416_2032",
        "description": "api.migrations.0170_auto_20220416_2032",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0169_auto_20220415_1319'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='insignia',\n            name='tipo_usuario',\n            field=models.CharField(default=' ', max_length=25),\n        ),",
        "detail": "api.migrations.0170_auto_20220416_2032",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0171_auto_20220419_1900",
        "description": "api.migrations.0171_auto_20220419_1900",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0170_auto_20220416_2032'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagotarjeta',\n            name='cargo_banco',\n            field=models.FloatField(default=0.0),\n        ),",
        "detail": "api.migrations.0171_auto_20220419_1900",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0172_auto_20220422_1543",
        "description": "api.migrations.0172_auto_20220422_1543",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0171_auto_20220419_1900'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagotarjeta',\n            name='proveedor',\n            field=models.CharField(default='', max_length=255),\n        ),",
        "detail": "api.migrations.0172_auto_20220422_1543",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0173_auto_20220422_1657",
        "description": "api.migrations.0173_auto_20220422_1657",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0172_auto_20220422_1543'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagoefectivo',\n            name='proveedor',\n            field=models.CharField(default='', max_length=255),\n        ),",
        "detail": "api.migrations.0173_auto_20220422_1657",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0174_auto_20220425_1215",
        "description": "api.migrations.0174_auto_20220425_1215",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0173_auto_20220422_1657'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='proveedor',\n            name='planilla_servicios',\n        ),\n        migrations.AlterField(",
        "detail": "api.migrations.0174_auto_20220425_1215",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0175_auto_20220425_1248",
        "description": "api.migrations.0175_auto_20220425_1248",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0174_auto_20220425_1215'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='profesion_proveedor',\n            name='proveedor',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.proveedor'),\n        ),",
        "detail": "api.migrations.0175_auto_20220425_1248",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0176_auto_20220425_1618",
        "description": "api.migrations.0176_auto_20220425_1618",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0175_auto_20220425_1248'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='categoria',\n            name='foto2',\n            field=models.ImageField(upload_to='categoria2'),\n        ),",
        "detail": "api.migrations.0176_auto_20220425_1618",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0177_auto_20220501_1112",
        "description": "api.migrations.0177_auto_20220501_1112",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0176_auto_20220425_1618'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cupon',\n            name='cantidad',\n            field=models.IntegerField(default=1),\n        ),",
        "detail": "api.migrations.0177_auto_20220501_1112",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0178_auto_20220502_1541",
        "description": "api.migrations.0178_auto_20220502_1541",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0177_auto_20220501_1112'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagoefectivo',\n            name='prov_correo',\n            field=models.CharField(default='', max_length=255),\n        ),",
        "detail": "api.migrations.0178_auto_20220502_1541",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0179_auto_20220502_1751",
        "description": "api.migrations.0179_auto_20220502_1751",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0178_auto_20220502_1541'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='suggestion',\n            name='correo',\n            field=models.CharField(default='', max_length=255),\n        ),",
        "detail": "api.migrations.0179_auto_20220502_1751",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0180_tarjeta_tipo",
        "description": "api.migrations.0180_tarjeta_tipo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0179_auto_20220502_1751'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tarjeta',\n            name='tipo',\n            field=models.CharField(default='', max_length=200),\n        ),",
        "detail": "api.migrations.0180_tarjeta_tipo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0181_remove_tarjeta_tipo",
        "description": "api.migrations.0181_remove_tarjeta_tipo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0180_tarjeta_tipo'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='tarjeta',\n            name='tipo',\n        ),\n    ]",
        "detail": "api.migrations.0181_remove_tarjeta_tipo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0182_tarjeta_tipo",
        "description": "api.migrations.0182_tarjeta_tipo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0181_remove_tarjeta_tipo'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tarjeta',\n            name='tipo',\n            field=models.CharField(default='', max_length=100),\n        ),",
        "detail": "api.migrations.0182_tarjeta_tipo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0183_cargo_titulo",
        "description": "api.migrations.0183_cargo_titulo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0182_tarjeta_tipo'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cargo',\n            name='titulo',\n            field=models.CharField(default=' ', max_length=200),\n        ),",
        "detail": "api.migrations.0183_cargo_titulo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0184_auto_20230120_2321",
        "description": "api.migrations.0184_auto_20230120_2321",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0183_cargo_titulo'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cardauth',\n            fields=[\n                ('id_cardauth', models.AutoField(primary_key=True, serialize=False)),\n                ('token', models.CharField(max_length=20)),",
        "detail": "api.migrations.0184_auto_20230120_2321",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0185_notificacionmasiva_fecha_creacion",
        "description": "api.migrations.0185_notificacionmasiva_fecha_creacion",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0184_auto_20230120_2321'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='notificacionmasiva',\n            name='fecha_creacion',\n            field=models.DateTimeField(auto_now_add=True, null=True),\n        ),",
        "detail": "api.migrations.0185_notificacionmasiva_fecha_creacion",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0186_proveedor_pendiente_foto",
        "description": "api.migrations.0186_proveedor_pendiente_foto",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0185_notificacionmasiva_fecha_creacion'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='foto',\n            field=models.ImageField(blank=True, null=True, upload_to='foto_perfil'),\n        ),",
        "detail": "api.migrations.0186_proveedor_pendiente_foto",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0187_auto_20230417_0823",
        "description": "api.migrations.0187_auto_20230417_0823",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0186_proveedor_pendiente_foto'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='servicio',\n            name='foto',\n            field=models.ImageField(null=True, upload_to='servicio'),\n        ),",
        "detail": "api.migrations.0187_auto_20230417_0823",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0188_pagoefectivo_oferta",
        "description": "api.migrations.0188_pagoefectivo_oferta",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0187_auto_20230417_0823'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagoefectivo',\n            name='oferta',\n            field=models.FloatField(default=0.0),\n        ),",
        "detail": "api.migrations.0188_pagoefectivo_oferta",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0189_solicitud_descuento",
        "description": "api.migrations.0189_solicitud_descuento",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0188_pagoefectivo_oferta'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='solicitud',\n            name='descuento',\n            field=models.FloatField(default=0.0),\n        ),",
        "detail": "api.migrations.0189_solicitud_descuento",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0190_proveedor_pendiente_rechazo",
        "description": "api.migrations.0190_proveedor_pendiente_rechazo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0189_solicitud_descuento'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='rechazo',\n            field=models.CharField(default='', max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0190_proveedor_pendiente_rechazo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0191_auto_20230714_1557",
        "description": "api.migrations.0191_auto_20230714_1557",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('api', '0190_proveedor_pendiente_rechazo'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Medalla',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "api.migrations.0191_auto_20230714_1557",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0192_proveedor_pendiente_rechazo",
        "description": "api.migrations.0192_proveedor_pendiente_rechazo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0191_auto_20230714_1557'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor_pendiente',\n            name='rechazo',\n            field=models.CharField(default='', max_length=255, null=True),\n        ),",
        "detail": "api.migrations.0192_proveedor_pendiente_rechazo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0193_auto_20230715_1309",
        "description": "api.migrations.0193_auto_20230715_1309",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0192_proveedor_pendiente_rechazo'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='medalla',\n            name='puntos',\n            field=models.PositiveIntegerField(default=10),\n        ),",
        "detail": "api.migrations.0193_auto_20230715_1309",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0194_datos_descuento",
        "description": "api.migrations.0194_datos_descuento",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0193_auto_20230715_1309'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='datos',\n            name='descuento',\n            field=models.PositiveIntegerField(default=0, null=True),\n        ),",
        "detail": "api.migrations.0194_datos_descuento",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0195_proveedor_fecha_caducidad",
        "description": "api.migrations.0195_proveedor_fecha_caducidad",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0194_datos_descuento'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='proveedor',\n            name='fecha_caducidad',\n            field=models.DateTimeField(auto_now_add=True, null=True),\n        ),",
        "detail": "api.migrations.0195_proveedor_fecha_caducidad",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0196_auto_20240618_1658",
        "description": "api.migrations.0196_auto_20240618_1658",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0195_proveedor_fecha_caducidad'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pagoefectivo',\n            name='solicitud',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.solicitud'),\n        ),",
        "detail": "api.migrations.0196_auto_20240618_1658",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0197_auto_20241103_1855",
        "description": "api.migrations.0197_auto_20241103_1855",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0196_auto_20240618_1658'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='notificacionmasiva',\n            old_name='mensaje',\n            new_name='nombre',\n        ),",
        "detail": "api.migrations.0197_auto_20241103_1855",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0198_auto_20241104_1431",
        "description": "api.migrations.0198_auto_20241104_1431",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('api', '0197_auto_20241103_1855'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='notificacion',\n            name='estado',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "api.migrations.0198_auto_20241104_1431",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "api.apps",
        "description": "api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    name = 'api'",
        "detail": "api.apps",
        "documentation": {}
    },
    {
        "label": "Cardauth",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Cardauth(models.Model):\n    id_cardauth = models.AutoField(primary_key=True)\n    token = models.CharField(max_length=20)\n    auth = models.CharField(max_length=3)\n# clase insignia\nclass Insignia(models.Model):\n    nombre = models.CharField(max_length=25)\n    imagen = models.ImageField(upload_to='insignias', blank=True)\n    tipo_usuario = models.CharField(max_length=25, default=\" \")\n    servicio = models.CharField(max_length=25)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Insignia",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Insignia(models.Model):\n    nombre = models.CharField(max_length=25)\n    imagen = models.ImageField(upload_to='insignias', blank=True)\n    tipo_usuario = models.CharField(max_length=25, default=\" \")\n    servicio = models.CharField(max_length=25)\n    tipo = models.CharField(max_length=50, null=True)\n    estado = models.BooleanField(default=True)\n    pedidos = models.PositiveIntegerField(default=0)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    descripcion = models.CharField(max_length=255, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Medalla",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Medalla(models.Model):\n    nombre = models.CharField(max_length=25)\n    descripcion = models.CharField(max_length=255, null=True)\n    imagen = models.ImageField(upload_to='insignias', blank=True)\n    estado = models.BooleanField(default=True)\n    tiempo = models.PositiveIntegerField(default=0)\n    valor = models.PositiveIntegerField(default=0)\n    cantidad = models.PositiveIntegerField(default=0)\n    puntos = models.PositiveIntegerField(default=10)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Categoria",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Categoria(models.Model):\n    nombre = models.CharField(max_length=255, unique=True)\n    descripcion = models.TextField()\n    foto = models.ImageField(upload_to='categoria')\n    foto2 = models.ImageField(upload_to='categoria2')\n    estado = models.BooleanField(default=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    def __str__(self):\n        return self.nombre + \" | \" + self.descripcion\nclass Servicio(models.Model):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Servicio",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Servicio(models.Model):\n    nombre = models.CharField(max_length=255)\n    descripcion = models.CharField(max_length=255)\n    categoria = models.ForeignKey(\n        Categoria, on_delete=models.PROTECT, null=True)\n    estado = models.BooleanField(default=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    foto = models.ImageField(upload_to='servicio', null=True)\n    def __str__(self):\n        return self.nombre + \" | \" + self.descripcion + \" | \" + self.categoria.nombre",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Profesion",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Profesion(models.Model):\n    nombre = models.CharField(max_length=255, unique=True)\n    estado = models.BooleanField(default=True)\n    servicio = models.ManyToManyField(Servicio)\n    foto = models.ImageField(upload_to='profesion', null=True)\n    estado = models.BooleanField(default=True)\n    descripcion = models.CharField(max_length=255, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    def __str__(self):\n        return self.nombre",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Cupon",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Cupon(models.Model):\n    codigo = models.CharField(max_length=25, null=True,  unique=True)\n    titulo = models.CharField(max_length=255, null=True)\n    cantidad = models.IntegerField(default=1)\n    descripcion = models.CharField(max_length=255, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    fecha_iniciacion = models.DateTimeField(null=False)\n    fecha_expiracion = models.DateTimeField(null=False)\n    porcentaje = models.IntegerField(null=False)\n    participantes = models.CharField(max_length=255, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Publicidad",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Publicidad(models.Model):\n    titulo = models.CharField(max_length=255, null=True)\n    descripcion = models.CharField(max_length=255, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    fecha_inicio = models.DateTimeField(null=False)\n    fecha_expiracion = models.DateTimeField(null=False)\n    imagen = models.ImageField(upload_to='publicidad', null=True, blank=True)\n    url = models.CharField(max_length=255, null=True, blank=True)\n    def __str__(self):\n        return self.titulo | self.descripcion",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Document",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Document(models.Model):\n    descripcion = models.CharField(max_length=200, null=True, blank=True)\n    documento = models.FileField(upload_to='documents', null=True)\n    estado = models.BooleanField(default=False)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    def __str__(self):\n        return str(self.descripcion)\n    def delete(self, *args, **kwargs):\n        self.documento.delete()\n        super().delete(*args, **kwargs)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Datos",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Datos(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True)\n    tipo = models.ForeignKey('auth.group', on_delete=models.PROTECT, null=True)\n    nombres = models.CharField(max_length=255, null=True)\n    apellidos = models.CharField(max_length=255, null=True)\n    ciudad = models.CharField(max_length=20, null=True)\n    cedula = models.CharField(max_length=20, null=True, default=\"0999999999\")\n    telefono = models.CharField(max_length=15)\n    genero = models.CharField(max_length=255)\n    foto = models.ImageField(upload_to='foto_perfil', null=True, blank=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Plan",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Plan(models.Model):\n    nombre = models.CharField(max_length=255)\n    descripcion = models.CharField(max_length=255)\n    imagen = models.ImageField(upload_to='planes', null=True, blank=True)\n    duracion = models.IntegerField(default=0)\n    precio = models.FloatField(null=False)\n    fecha_creacion = models.DateTimeField(\n        auto_now_add=True, null=True, blank=True)\n    estado = models.BooleanField(default=True)\n    def __str__(self):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Codigos",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Codigos(models.Model):  # codigos que se envian para reestablecer contrasena\n    user_datos = models.ForeignKey(Datos, on_delete=models.CASCADE, null=True)\n    codigo = models.CharField(max_length=255, null=True)\n    estado = models.BooleanField(default=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\nclass Proveedor(models.Model):\n    user_datos = models.OneToOneField(\n        Datos, on_delete=models.CASCADE, null=True)\n    rating = models.FloatField(default=4.0)\n    servicios = models.PositiveIntegerField(default=0)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Proveedor",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Proveedor(models.Model):\n    user_datos = models.OneToOneField(\n        Datos, on_delete=models.CASCADE, null=True)\n    rating = models.FloatField(default=4.0)\n    servicios = models.PositiveIntegerField(default=0)\n    descripcion = models.CharField(max_length=255)\n    document = models.ManyToManyField(Document)\n    estado = models.BooleanField(default=True)\n    profesion = models.CharField(max_length=400, default='')\n    copiaCedula = models.FileField(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Profesion_Proveedor",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Profesion_Proveedor(models.Model):\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.CASCADE, null=True, blank=True)\n    profesion = models.ForeignKey(\n        Profesion, on_delete=models.CASCADE, null=True)\n    ano_experiencia = models.PositiveIntegerField(default=0)\n    estado = models.BooleanField(default=True)\n    # self.proveedor.user_datos.nombres  +  \" \" +self.proveedor.user_datos.apellidos\n    def __str__(self):\n        return self.profesion.nombre + \" | \" + str(self.ano_experiencia) + \" | \" + self.proveedor.user_datos.nombres + \"  \" + self.proveedor.user_datos.apellidos",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PlanProveedor",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class PlanProveedor(models.Model):\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.CASCADE, null=True)\n    planProveedor = models.ForeignKey(\n        Plan, on_delete=models.CASCADE, null=True)\n    fecha_inicio = models.DateTimeField(null=True)\n    fecha_expiracion = models.DateTimeField(null=False)\n    estado = models.BooleanField(default=True)\nclass PendienteDocuments(models.Model):\n    document = models.FileField(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PendienteDocuments",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class PendienteDocuments(models.Model):\n    document = models.FileField(\n        upload_to='pendientes-documents', null=True, blank=True)\n    def delete(self, *args, **kwargs):\n        self.document.delete()\n        super().delete(*args, **kwargs)\n# tabla que guarda la info de las personas que quieren ser proveedores.\nclass Proveedor_Pendiente(models.Model):\n    # proveedor = models.ForeignKey(Proveedor, on_delete=models.CASCADE, null=True)\n    nombres = models.CharField(max_length=255, default='')",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Proveedor_Pendiente",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Proveedor_Pendiente(models.Model):\n    # proveedor = models.ForeignKey(Proveedor, on_delete=models.CASCADE, null=True)\n    nombres = models.CharField(max_length=255, default='')\n    apellidos = models.CharField(max_length=255, default='')\n    ciudad = models.CharField(max_length=255, default='')\n    direccion = models.CharField(max_length=300, default='')\n    genero = models.CharField(max_length=100)\n    fecha_registro = models.DateTimeField(auto_now_add=True)\n    email = models.CharField(max_length=255, default='')\n    copiaCedula = models.FileField(upload_to='pendientes-copias', null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Tipo_Cuenta",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Tipo_Cuenta(models.Model):  # debito credito\n    nombre = models.CharField(max_length=255)\n    estado = models.BooleanField(default=True)\n    def __str__(self):\n        return self.nombre\nclass Ciudad_Disponible(models.Model):\n    ciudad = models.CharField(max_length=255,null=True)\n    def __str__(self):\n        return self.ciudad\nclass Banco(models.Model):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Ciudad_Disponible",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Ciudad_Disponible(models.Model):\n    ciudad = models.CharField(max_length=255,null=True)\n    def __str__(self):\n        return self.ciudad\nclass Banco(models.Model):\n    nombre = models.CharField(max_length=255)\n    estado = models.BooleanField(default=True)\n    def __str__(self):\n        return self.nombre\nclass Cuenta(models.Model):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Banco",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Banco(models.Model):\n    nombre = models.CharField(max_length=255)\n    estado = models.BooleanField(default=True)\n    def __str__(self):\n        return self.nombre\nclass Cuenta(models.Model):\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.CASCADE, null=True)\n    banco = models.ForeignKey(Banco, on_delete=models.CASCADE, null=True)\n    tipo_cuenta = models.ForeignKey(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Cuenta",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Cuenta(models.Model):\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.CASCADE, null=True)\n    banco = models.ForeignKey(Banco, on_delete=models.CASCADE, null=True)\n    tipo_cuenta = models.ForeignKey(\n        Tipo_Cuenta, on_delete=models.CASCADE, null=True)\n    estado = models.BooleanField(default=True)\n    numero_cuenta = models.CharField(max_length=25, default=\"0999999999\")\n    def __str__(self):\n        return self.proveedor.user_datos.nombres + \" | \" + self.banco.nombre + \" | \" + self.tipo_cuenta.nombre + \" | \" + self.numero_cuenta",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Solicitante",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Solicitante(models.Model):\n    user_datos = models.OneToOneField(\n        Datos, on_delete=models.CASCADE, null=True)\n    bool_registro_completo = models.BooleanField(default=False)\n    estado = models.BooleanField(default=True)\n    def __str__(self):\n        return self.user_datos.nombres + \" | \" + self.user_datos.user.email\nclass Administrador(models.Model):\n    user_datos = models.OneToOneField(\n        Datos, on_delete=models.CASCADE, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Administrador",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Administrador(models.Model):\n    user_datos = models.OneToOneField(\n        Datos, on_delete=models.CASCADE, null=True)\n    estado = models.BooleanField(default=True)\n    def __str__(self):\n        return self.user_datos.nombres + \" | \" + self.user_datos.user.email\nclass Tipo_Pago(models.Model):\n    nombre = models.CharField(max_length=100, null=True)\n    estado = models.BooleanField(default=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Tipo_Pago",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Tipo_Pago(models.Model):\n    nombre = models.CharField(max_length=100, null=True)\n    estado = models.BooleanField(default=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    def __str__(self):\n        return str(self.nombre)\nclass Ubicacion(models.Model):\n    latitud = models.DecimalField(null=False, max_digits=30, decimal_places=15)\n    altitud = models.DecimalField(null=False, max_digits=30, decimal_places=15)\n    direccion = models.CharField(max_length=300, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Ubicacion",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Ubicacion(models.Model):\n    latitud = models.DecimalField(null=False, max_digits=30, decimal_places=15)\n    altitud = models.DecimalField(null=False, max_digits=30, decimal_places=15)\n    direccion = models.CharField(max_length=300, null=True)\n    referencia = models.CharField(max_length=300, null=True, blank=True)\n    foto_ubicacion = models.ImageField(\n        upload_to='foto_solicitud/foto_ubicacion', null=True, blank=True)\n    def __str__(self):\n        return str(self.latitud) + \" | \" + str(self.altitud)\nclass Solicitud(models.Model):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Solicitud",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Solicitud(models.Model):\n    solicitante = models.ForeignKey(Solicitante, on_delete=models.CASCADE)\n    ubicacion = models.OneToOneField(Ubicacion, on_delete=models.CASCADE)\n    tipo_pago = models.ForeignKey(Tipo_Pago, on_delete=models.CASCADE)\n    servicio = models.ForeignKey(Servicio, on_delete=models.CASCADE)\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.PROTECT, null=True, blank=True)\n    descripcion = models.CharField(max_length=500)\n    foto_descripcion = models.ImageField(\n        upload_to='foto_solicitud/foto_descripcion', null=True, blank=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Envio_Interesados",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Envio_Interesados(models.Model):\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.CASCADE, null=True)\n    solicitud = models.ForeignKey(\n        Solicitud, on_delete=models.PROTECT, null=True)\n    interesado = models.BooleanField(default=False)\n    oferta = models.DecimalField(\n        null=True, blank=True, max_digits=30, decimal_places=15)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    def __str__(self):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Tarjeta",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Tarjeta(models.Model):\n    solicitante = models.ForeignKey(\n        Solicitante, on_delete=models.CASCADE, null=False)\n    tipo = models.CharField(max_length=400, default=\"\")\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    cvv = models.CharField(max_length=100, null=False)\n    estado = models.BooleanField(default=True)\n    titular = models.CharField(max_length=400, null=False)\n    fecha_vencimiento = models.DateTimeField(auto_now_add=False, null=False)\n    numero = models.BigIntegerField(null=False)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Cupon_Aplicado",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Cupon_Aplicado(models.Model):\n    cupon = models.ForeignKey(Cupon, on_delete=models.CASCADE)\n    user = models.CharField(max_length=300, null=False)\n    estado = models.BooleanField(default=True)\n    def __str__(self):\n        return self.cupon.codigo + \" | \" + str(self.user)\nclass Notificacion(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True)\n    nombre = models.CharField(max_length=255, null=True)\n    titulo = models.CharField(max_length=255, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Notificacion",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Notificacion(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True)\n    nombre = models.CharField(max_length=255, null=True)\n    titulo = models.CharField(max_length=255, null=True)\n    descripcion = models.TextField()\n    tipo_proveedores = models.CharField(max_length=100, null=True)\n    frecuencia = models.CharField(max_length=100, null=True)\n    ruta = models.CharField(max_length=100, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    fecha_iniciacion = models.DateTimeField(null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "NotificacionMasiva",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class NotificacionMasiva(models.Model):\n    nombre = models.CharField(max_length=255, null=True)\n    titulo = models.CharField(max_length=255, null=True)\n    descripcion = models.TextField()\n    tipo_proveedores = models.CharField(max_length=100, null=True)\n    frecuencia = models.CharField(max_length=100, null=True)\n    ruta = models.CharField(max_length=100, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    fecha_iniciacion = models.DateTimeField(null=True)\n    fecha_expiracion = models.DateTimeField(null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Promocion",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Promocion(models.Model):\n    codigo = models.CharField(max_length=25, null=True,  unique=True)\n    cantidad = models.IntegerField(default=1)\n    titulo = models.CharField(max_length=255, null=True)\n    descripcion = models.CharField(max_length=255, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    fecha_iniciacion = models.DateTimeField(null=True)\n    fecha_expiracion = models.DateTimeField(null=False)\n    porcentaje = models.IntegerField(null=False)\n    participantes = models.CharField(max_length=255, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PromocionCategoria",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class PromocionCategoria(models.Model):\n    promocion = models.ForeignKey(\n        Promocion, on_delete=models.CASCADE, null=False)\n    categoria = models.ForeignKey(\n        Categoria, on_delete=models.CASCADE, null=False)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    estado = models.BooleanField(default=True)\nclass CuponCategoria(models.Model):\n    cupon = models.ForeignKey(Cupon, on_delete=models.CASCADE, null=False)\n    categoria = models.ForeignKey(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "CuponCategoria",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class CuponCategoria(models.Model):\n    cupon = models.ForeignKey(Cupon, on_delete=models.CASCADE, null=False)\n    categoria = models.ForeignKey(\n        Categoria, on_delete=models.CASCADE, null=False)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    estado = models.BooleanField(default=True)\nclass PagoTarjeta(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True)\n    tarjeta = models.ForeignKey(Tarjeta, on_delete=models.CASCADE, null=True)\n    promocion = models.ForeignKey(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PagoTarjeta",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class PagoTarjeta(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True)\n    tarjeta = models.ForeignKey(Tarjeta, on_delete=models.CASCADE, null=True)\n    promocion = models.ForeignKey(\n        Promocion, on_delete=models.CASCADE, null=True, blank=True)\n    valor = models.FloatField(default=0.0)\n    descripcion = models.CharField(max_length=255, null=True)\n    impuesto = models.IntegerField(null=False)\n    referencia = models.CharField(max_length=255, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PagoEfectivo",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class PagoEfectivo(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True)\n    promocion = models.ForeignKey(\n        Promocion, on_delete=models.CASCADE, null=True,  blank=True)\n    valor = models.FloatField(default=0.0)\n    oferta = models.FloatField(default=0.0)\n    descripcion = models.CharField(max_length=255, null=True)\n    concepto = models.CharField(max_length=255, null=True, default=\"Solicitud\")\n    referencia = models.CharField(max_length=255, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "PagoSolicitud",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class PagoSolicitud(models.Model):\n    pago_tarjeta = models.ForeignKey(\n        PagoTarjeta, on_delete=models.CASCADE, null=True, blank=True)\n    pago_efectivo = models.ForeignKey(\n        PagoEfectivo, on_delete=models.CASCADE, null=True, blank=True)\n    solicitud = models.ForeignKey(\n        Solicitud, on_delete=models.CASCADE, null=True)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    estado = models.BooleanField(default=True)\nclass Suggestion(models.Model):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Suggestion",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Suggestion(models.Model):\n    descripcion = models.TextField()\n    foto = models.ImageField(upload_to='suggestion')\n    usuario = models.CharField(max_length=255, default=\"\")\n    correo = models.CharField(max_length=255, default=\"\")\n    estado = models.BooleanField(default=False)\n    fecha_creacion = models.DateTimeField(auto_now_add=True, null=True)\n    def __str__(self):\n        return self.descripcion\nclass Politicas(models.Model):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Politicas",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Politicas(models.Model):\n    identifier = models.TextField()\n    terminos = models.TextField()\n    def __str__(self):\n        return self.terminos\n@receiver(post_save, sender='auth.User')\ndef create_auth_token(sender, instance=None, created=False, **kwargs):\n    if created:\n        Token.objects.create(user=instance)\nclass Ciudad(models.Model):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Ciudad",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Ciudad(models.Model):\n    nombre = models.CharField(max_length=200)\nclass Cargo(models.Model):\n    nombre = models.CharField(max_length=200)\n    porcentaje = models.FloatField(default=0.0)\n    titulo = models.CharField(max_length=200, default=\" \")\n    def __str__(self):\n        return self.nombre + \"|\" + self.porcentaje\nclass SolicitudProfesion(models.Model):\n    proveedor = models.ForeignKey(",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Cargo",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Cargo(models.Model):\n    nombre = models.CharField(max_length=200)\n    porcentaje = models.FloatField(default=0.0)\n    titulo = models.CharField(max_length=200, default=\" \")\n    def __str__(self):\n        return self.nombre + \"|\" + self.porcentaje\nclass SolicitudProfesion(models.Model):\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.CASCADE, null=True)\n    profesion = models.CharField(max_length=150)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "SolicitudProfesion",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class SolicitudProfesion(models.Model):\n    proveedor = models.ForeignKey(\n        Proveedor, on_delete=models.CASCADE, null=True)\n    profesion = models.CharField(max_length=150)\n    anio_experiencia = models.PositiveIntegerField(default=0)\n    fecha_solicitud = models.DateTimeField(auto_now_add=True, null=True)\n    estado = models.BooleanField(default=False)\n    fecha = models.DateTimeField(null=True)\n    documento = models.FileField(upload_to='solicitudes', null=True)\n    def __str__(self):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "clientexmedalla",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class clientexmedalla(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True)\n    medalla = models.ForeignKey('api.Medalla', on_delete=models.CASCADE, null=True)\n    tipoUsuario = models.BooleanField(default=True)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "create_auth_token",
        "kind": 2,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "def create_auth_token(sender, instance=None, created=False, **kwargs):\n    if created:\n        Token.objects.create(user=instance)\nclass Ciudad(models.Model):\n    nombre = models.CharField(max_length=200)\nclass Cargo(models.Model):\n    nombre = models.CharField(max_length=200)\n    porcentaje = models.FloatField(default=0.0)\n    titulo = models.CharField(max_length=200, default=\" \")\n    def __str__(self):",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "MyPaginationMixin",
        "kind": 6,
        "importPath": "api.pagination",
        "description": "api.pagination",
        "peekOfCode": "class MyPaginationMixin(object):\n    @property\n    def paginator(self):\n        if not hasattr(self, '_paginator'):\n            if self.pagination_class is None:\n                self._paginator = None\n            else:\n                self._paginator = self.pagination_class()\n        return self._paginator\n    def paginate_queryset(self, queryset):",
        "detail": "api.pagination",
        "documentation": {}
    },
    {
        "label": "MyCustomPagination",
        "kind": 6,
        "importPath": "api.pagination",
        "description": "api.pagination",
        "peekOfCode": "class MyCustomPagination(PageNumberPagination):\n    page_size = 10\n    page_size_query_param = 'page_size'\n    def get_paginated_response(self, data):\n        return Response({\n            'page_size': self.page_size,\n            'total_objects': self.page.paginator.count,\n            'total_pages': self.page.paginator.num_pages,\n            'current_page_number': self.page.number,\n            'next': self.get_next_link(),",
        "detail": "api.pagination",
        "documentation": {}
    },
    {
        "label": "FCMDeviceSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class FCMDeviceSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FCMDevice\n        fields = ('registration_id', 'active', 'user', 'date_created')\nclass InsigniaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Insignia\n        fields = ['id', 'nombre', 'imagen', 'servicio', 'tipo_usuario',\n                  'estado', 'pedidos', 'fecha_creacion', 'descripcion', 'tipo']\nclass MedallaSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "InsigniaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class InsigniaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Insignia\n        fields = ['id', 'nombre', 'imagen', 'servicio', 'tipo_usuario',\n                  'estado', 'pedidos', 'fecha_creacion', 'descripcion', 'tipo']\nclass MedallaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Medalla\n        fields = ['id', 'nombre', 'descripcion', 'imagen',\n                  'estado', 'tiempo', 'valor', 'cantidad', 'fecha_creacion']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "MedallaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class MedallaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Medalla\n        fields = ['id', 'nombre', 'descripcion', 'imagen',\n                  'estado', 'tiempo', 'valor', 'cantidad', 'fecha_creacion']\nclass CategoriaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Categoria\n        fields = ['id', 'nombre', 'descripcion', 'foto', 'foto2', 'estado']\nclass CuponSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "CategoriaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class CategoriaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Categoria\n        fields = ['id', 'nombre', 'descripcion', 'foto', 'foto2', 'estado']\nclass CuponSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cupon\n        fields = ['id', 'codigo', 'titulo', 'descripcion', 'porcentaje', 'participantes','fecha_creacion',\n                  'fecha_iniciacion', 'fecha_expiracion', 'estado', 'puntos', 'foto','tipo_categoria', 'cantidad']\nclass PublicidadSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "CuponSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class CuponSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cupon\n        fields = ['id', 'codigo', 'titulo', 'descripcion', 'porcentaje', 'participantes','fecha_creacion',\n                  'fecha_iniciacion', 'fecha_expiracion', 'estado', 'puntos', 'foto','tipo_categoria', 'cantidad']\nclass PublicidadSerializer(serializers.ModelSerializer):\n    fecha_creacion = serializers.DateTimeField(\n        read_only=True, format=\"%d-%m-%Y %H:%M:%S\")\n    fecha_expiracion = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")\n    fecha_inicio = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PublicidadSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PublicidadSerializer(serializers.ModelSerializer):\n    fecha_creacion = serializers.DateTimeField(\n        read_only=True, format=\"%d-%m-%Y %H:%M:%S\")\n    fecha_expiracion = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")\n    fecha_inicio = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")\n    class Meta:\n        model = Publicidad\n        fields = ['id', 'titulo', 'descripcion', 'fecha_creacion',\n                  'fecha_inicio', 'fecha_expiracion', 'imagen', 'url']\nclass CuponCategoriaSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "CuponCategoriaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class CuponCategoriaSerializer(serializers.ModelSerializer):\n    cupon = CuponSerializer()\n    categoria = CategoriaSerializer()\n    class Meta:\n        model = CuponCategoria\n        fields = ['id', 'cupon', 'categoria', 'fecha_creacion', 'estado']\n# Subcategorias\nclass ServicioSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Servicio",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "ServicioSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class ServicioSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Servicio\n        fields = ['id', 'nombre', 'descripcion', 'categoria', 'estado', 'foto']\nclass ProfesionSerializer(serializers.ModelSerializer):\n    servicio = ServicioSerializer(many=True)\n    class Meta:\n        model = Profesion\n        fields = ['id', 'nombre', 'descripcion', 'foto', 'servicio', 'estado']\nclass PermissionSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "ProfesionSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class ProfesionSerializer(serializers.ModelSerializer):\n    servicio = ServicioSerializer(many=True)\n    class Meta:\n        model = Profesion\n        fields = ['id', 'nombre', 'descripcion', 'foto', 'servicio', 'estado']\nclass PermissionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Permission\n        fields = ['name']\nclass GroupSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PermissionSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PermissionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Permission\n        fields = ['name']\nclass GroupSerializer(serializers.ModelSerializer):\n    permissions = PermissionSerializer(read_only=True, many=True)\n    class Meta:\n        model = Group\n        fields = ['id', 'name', 'permissions']\nclass UserSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "GroupSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class GroupSerializer(serializers.ModelSerializer):\n    permissions = PermissionSerializer(read_only=True, many=True)\n    class Meta:\n        model = Group\n        fields = ['id', 'name', 'permissions']\nclass UserSerializer(serializers.ModelSerializer):\n    groups = GroupSerializer(read_only=True, many=True)\n    class Meta:\n        model = User\n        fields = ['id', 'username', 'email', 'first_name',",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    groups = GroupSerializer(read_only=True, many=True)\n    class Meta:\n        model = User\n        fields = ['id', 'username', 'email', 'first_name',\n                  'last_name', 'password', 'groups', 'is_superuser']\nclass DatosSerializer(serializers.ModelSerializer):\n    user = UserSerializer(read_only=True)\n    class Meta:\n        model = Datos",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "DatosSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class DatosSerializer(serializers.ModelSerializer):\n    user = UserSerializer(read_only=True)\n    class Meta:\n        model = Datos\n        fields = ['id', 'user', 'tipo', 'nombres', 'apellidos', 'ciudad', 'cedula',\n                  'codigo_invitacion', 'telefono', 'genero', 'foto', 'estado', 'fecha_creacion', 'puntos']\nclass CodigosSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer()\n    class Meta:\n        model = Codigos",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "CodigosSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class CodigosSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer()\n    class Meta:\n        model = Codigos\n        fields = ['id', 'user_datos', 'codigo', 'estado', 'fecha_creacion']\nclass Cupon_AplicadoSerializer(serializers.ModelSerializer):\n    cupon = CuponSerializer()\n    class Meta:\n        model = Cupon_Aplicado\n        fields = ['id', 'cupon', 'user', 'estado']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Cupon_AplicadoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Cupon_AplicadoSerializer(serializers.ModelSerializer):\n    cupon = CuponSerializer()\n    class Meta:\n        model = Cupon_Aplicado\n        fields = ['id', 'cupon', 'user', 'estado']\nclass DocumentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Document\n        fields = ['id', 'descripcion', 'documento', 'estado']\nclass PlanSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "DocumentSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class DocumentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Document\n        fields = ['id', 'descripcion', 'documento', 'estado']\nclass PlanSerializer(serializers.ModelSerializer):\n    fecha_creacion = serializers.DateTimeField(\n        read_only=True, format=\"%d-%m-%Y %H:%M:%S\")\n    class Meta:\n        model = Plan\n        fields = ['id', 'nombre', 'descripcion', 'imagen',",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PlanSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PlanSerializer(serializers.ModelSerializer):\n    fecha_creacion = serializers.DateTimeField(\n        read_only=True, format=\"%d-%m-%Y %H:%M:%S\")\n    class Meta:\n        model = Plan\n        fields = ['id', 'nombre', 'descripcion', 'imagen',\n                  'precio', 'duracion', 'fecha_creacion', 'estado']\nclass PlanProveedorSerializer(serializers.ModelSerializer):\n    fecha_inicio = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")\n    fecha_expiracion = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PlanProveedorSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PlanProveedorSerializer(serializers.ModelSerializer):\n    fecha_inicio = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")\n    fecha_expiracion = serializers.DateTimeField(format=\"%d-%m-%Y %H:%M:%S\")\n    plan = PlanSerializer(source='planProveedor', read_only=True)\n    class Meta:\n        model = PlanProveedor\n        fields = ['id', 'planProveedor', 'plan', 'proveedor',\n                  'fecha_inicio', 'fecha_expiracion', 'estado']\nclass ProveedorSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer()",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "ProveedorSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class ProveedorSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer()\n    document = DocumentSerializer(many=True)\n    plan_proveedor = PlanProveedorSerializer(\n        source='planproveedor_set', many=True, read_only=True)\n    class Meta:\n        model = Proveedor\n        fields = ['id', 'user_datos', 'direccion', 'copiaCedula', 'licencia', 'copiaLicencia', 'rating', 'servicios', 'descripcion',\n                  'profesion', 'ano_profesion', 'document', 'plan_proveedor', 'estado', 'banco', 'numero_cuenta', 'tipo_cuenta', 'fecha_caducidad']\nclass Profesion_ProveedorSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Profesion_ProveedorSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Profesion_ProveedorSerializer(serializers.ModelSerializer):\n    profesion = ProfesionSerializer()\n    print(\"PROFESION\")\n    print(profesion)\n    proveedor = ProveedorSerializer()\n    print(\"PROVEEDOR\")\n    print(proveedor)\n    class Meta:\n        model = Profesion_Proveedor\n        fields = ['id', 'profesion', 'proveedor', 'ano_experiencia', 'estado']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PendientesDocumentsSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PendientesDocumentsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = PendienteDocuments\n        fields = ['id', 'document']\nclass Proveedor_PendienteSerializer(serializers.ModelSerializer):\n    documentsPendientes = PendientesDocumentsSerializer(many=True)\n    class Meta:\n        model = Proveedor_Pendiente\n        fields = ['id', 'nombres', 'apellidos', 'ciudad', 'direccion', 'genero', 'fecha_registro', 'licencia', 'copiaLicencia', 'email', 'telefono', 'cedula',\n                  'copiaCedula', 'descripcion', 'estado', 'profesion', 'ano_experiencia', 'banco', 'numero_cuenta', 'tipo_cuenta', 'documentsPendientes', 'foto', 'rechazo']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Proveedor_PendienteSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Proveedor_PendienteSerializer(serializers.ModelSerializer):\n    documentsPendientes = PendientesDocumentsSerializer(many=True)\n    class Meta:\n        model = Proveedor_Pendiente\n        fields = ['id', 'nombres', 'apellidos', 'ciudad', 'direccion', 'genero', 'fecha_registro', 'licencia', 'copiaLicencia', 'email', 'telefono', 'cedula',\n                  'copiaCedula', 'descripcion', 'estado', 'profesion', 'ano_experiencia', 'banco', 'numero_cuenta', 'tipo_cuenta', 'documentsPendientes', 'foto', 'rechazo']\nclass Proveedor_PendienteSerializer2(serializers.ModelSerializer):\n    documentsPendientes = PendientesDocumentsSerializer(many=True)\n    class Meta:\n        model = Proveedor_Pendiente",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Proveedor_PendienteSerializer2",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Proveedor_PendienteSerializer2(serializers.ModelSerializer):\n    documentsPendientes = PendientesDocumentsSerializer(many=True)\n    class Meta:\n        model = Proveedor_Pendiente\n        fields = ['id', 'nombres', 'apellidos', 'ciudad', 'direccion', 'genero', 'fecha_registro', 'licencia', 'copiaLicencia', 'email', 'telefono', 'cedula',\n                  'copiaCedula', 'descripcion', 'estado', 'profesion', 'ano_experiencia', 'banco', 'numero_cuenta', 'tipo_cuenta', 'documentsPendientes', 'foto', 'rechazo']\nclass BancoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Banco\n        fields = ['id', 'nombre']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "BancoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class BancoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Banco\n        fields = ['id', 'nombre']\nclass Tipo_CuentaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tipo_Cuenta\n        fields = ['id', 'nombre']\nclass CuentaSerializer(serializers.ModelSerializer):\n    proveedor = ProveedorSerializer()",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Tipo_CuentaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Tipo_CuentaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tipo_Cuenta\n        fields = ['id', 'nombre']\nclass CuentaSerializer(serializers.ModelSerializer):\n    proveedor = ProveedorSerializer()\n    tipo_cuenta = Tipo_CuentaSerializer()\n    banco = BancoSerializer()\n    class Meta:\n        model = Cuenta",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "CuentaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class CuentaSerializer(serializers.ModelSerializer):\n    proveedor = ProveedorSerializer()\n    tipo_cuenta = Tipo_CuentaSerializer()\n    banco = BancoSerializer()\n    class Meta:\n        model = Cuenta\n        fields = ['id', 'numero_cuenta', 'proveedor',\n                  'banco', 'tipo_cuenta', 'estado']\nclass UbicacionSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "UbicacionSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class UbicacionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Ubicacion\n        fields = ['id', 'latitud', 'altitud',\n                  'direccion', 'referencia', 'foto_ubicacion']\nclass Tipo_PagoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tipo_Pago\n        fields = ['id', 'nombre', 'estado']\nclass SolicitanteSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Tipo_PagoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Tipo_PagoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tipo_Pago\n        fields = ['id', 'nombre', 'estado']\nclass SolicitanteSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer()\n    class Meta:\n        model = Solicitante\n        fields = ['id', 'user_datos', 'bool_registro_completo', 'estado']\nclass AdministradorSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "SolicitanteSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class SolicitanteSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer()\n    class Meta:\n        model = Solicitante\n        fields = ['id', 'user_datos', 'bool_registro_completo', 'estado']\nclass AdministradorSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer(read_only=True)\n    class Meta:\n        model = Administrador\n        fields = ['id', 'user_datos', 'estado']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "AdministradorSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class AdministradorSerializer(serializers.ModelSerializer):\n    user_datos = DatosSerializer(read_only=True)\n    class Meta:\n        model = Administrador\n        fields = ['id', 'user_datos', 'estado']\nclass SolicitudSerializer(serializers.ModelSerializer):\n    solicitante = SolicitanteSerializer()\n    ubicacion = UbicacionSerializer()\n    tipo_pago = Tipo_PagoSerializer()\n    servicio = ServicioSerializer()",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "SolicitudSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class SolicitudSerializer(serializers.ModelSerializer):\n    solicitante = SolicitanteSerializer()\n    ubicacion = UbicacionSerializer()\n    tipo_pago = Tipo_PagoSerializer()\n    servicio = ServicioSerializer()\n   # proveedor=UserSerializer()\n    proveedor = ProveedorSerializer(read_only=True)\n    class Meta:\n        model = Solicitud\n        fields = ['id', 'descripcion', 'foto_descripcion', 'fecha_creacion', 'fecha_expiracion', 'solicitante', 'ubicacion',",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "Envio_InteresadosSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class Envio_InteresadosSerializer(serializers.ModelSerializer):\n    solicitud = SolicitudSerializer(read_only=True)\n    proveedor = ProveedorSerializer(read_only=True)\n    class Meta:\n        model = Envio_Interesados\n        fields = ['interesado', 'oferta', 'solicitud', 'proveedor']\n    def update(self, instance, validated_data):\n        instance.interesado = validated_data.get(\n            'interesado', instance.interesado)\n        instance.oferta = validated_data.get('oferta', instance.oferta)",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "TarjetaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class TarjetaSerializer(serializers.ModelSerializer):\n    solicitante = SolicitanteSerializer()\n    class Meta:\n        model = Tarjeta\n        fields = ['id', 'fecha_creacion', 'cvv', 'estado', 'titular',\n                  'fecha_vencimiento', 'numero', 'brand', 'code', 'solicitante', 'token', 'tipo']\nclass NotificacionSerializer(serializers.ModelSerializer):\n    user = UserSerializer()\n    class Meta:\n        model = Notificacion",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "NotificacionSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class NotificacionSerializer(serializers.ModelSerializer):\n    user = UserSerializer()\n    class Meta:\n        model = Notificacion\n        fields = [\n            'id','user', 'nombre', 'titulo', 'descripcion', 'tipo_proveedores', \n            'frecuencia', 'ruta', 'fecha_creacion', 'fecha_iniciacion', \n            'fecha_expiracion', 'hora', 'estado','imagen'\n        ]\nclass PromocionSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PromocionSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PromocionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Promocion\n        fields = ['id', 'codigo', 'titulo', 'descripcion', 'porcentaje', 'fecha_creacion', 'fecha_iniciacion',\n                  'fecha_expiracion', 'estado', 'participantes', 'foto', 'tipo_categoria', 'cantidad']\nclass PromocionCategoriaSerializer(serializers.ModelSerializer):\n    promocion = PromocionSerializer()\n    categoria = CategoriaSerializer()\n    class Meta:\n        model = PromocionCategoria",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PromocionCategoriaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PromocionCategoriaSerializer(serializers.ModelSerializer):\n    promocion = PromocionSerializer()\n    categoria = CategoriaSerializer()\n    class Meta:\n        model = PromocionCategoria\n        fields = ['id', 'promocion', 'categoria', 'fecha_creacion', 'estado']\nclass PagoTarjetaSerializer(serializers.ModelSerializer):\n    user = UserSerializer()\n    tarjeta = TarjetaSerializer()\n    promocion = PromocionSerializer()",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PagoTarjetaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PagoTarjetaSerializer(serializers.ModelSerializer):\n    user = UserSerializer()\n    tarjeta = TarjetaSerializer()\n    promocion = PromocionSerializer()\n    solicitud = SolicitudSerializer()\n    class Meta:\n        model = PagoTarjeta\n        fields = ['id', 'user', 'concepto', 'promocion', 'tarjeta', 'valor', 'descripcion', 'carrier_id', 'carrier_code', 'impuesto', 'referencia', 'fecha_creacion',\n                  'estado', 'pago_proveedor', 'cargo_paymentez', 'cargo_banco', 'cargo_sistema', 'proveedor', 'servicio', 'usuario', 'prov_correo', 'prov_telefono', 'solicitud']\nclass PagoEfectivoSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PagoEfectivoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PagoEfectivoSerializer(serializers.ModelSerializer):\n    user = UserSerializer()\n    promocion = PromocionSerializer()\n    solicitud = SolicitudSerializer()\n    class Meta:\n        model = PagoEfectivo\n        fields = ['id', 'user', 'concepto', 'promocion', 'valor', 'descripcion', 'referencia', 'fecha_creacion',\n                  'estado', 'proveedor', 'servicio', 'usuario', 'prov_correo', 'prov_telefono', 'user_telefono', 'solicitud']\nclass PagoSolicitudSerializer(serializers.ModelSerializer):\n    pago_tarjeta = PagoTarjetaSerializer(required=False, allow_null=True)",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PagoSolicitudSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PagoSolicitudSerializer(serializers.ModelSerializer):\n    pago_tarjeta = PagoTarjetaSerializer(required=False, allow_null=True)\n    pago_efectivo = PagoEfectivoSerializer(required=False, allow_null=True)\n    solicitud = SolicitudSerializer()\n    class Meta:\n        model = PagoSolicitud\n        fields = ['id', 'pago_tarjeta', 'pago_efectivo',\n                  'solicitud', 'estado', 'fecha_creacion']\nclass SuggestionSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class SuggestionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Suggestion\n        fields = ['id', 'usuario', 'correo', 'descripcion',\n                  'foto', 'estado', 'fecha_creacion']\nclass PoliticasSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Politicas\n        fields = ['identifier', 'terminos']\nclass CiudadSerializer(serializers.ModelSerializer):",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "PoliticasSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class PoliticasSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Politicas\n        fields = ['identifier', 'terminos']\nclass CiudadSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Ciudad\n        fields = ['id', 'nombre']\nclass NotificacionMasivaSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "CiudadSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class CiudadSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Ciudad\n        fields = ['id', 'nombre']\nclass NotificacionMasivaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NotificacionMasiva\n        fields = [\n            'id', 'nombre', 'titulo', 'descripcion', 'tipo_proveedores', \n            'frecuencia', 'ruta', 'fecha_creacion', 'fecha_iniciacion', ",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "NotificacionMasivaSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class NotificacionMasivaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NotificacionMasiva\n        fields = [\n            'id', 'nombre', 'titulo', 'descripcion', 'tipo_proveedores', \n            'frecuencia', 'ruta', 'fecha_creacion', 'fecha_iniciacion', \n            'fecha_expiracion', 'hora', 'estado','imagen'\n        ]\n# class PagosSerializer(serializers.Serializer):\n#     pagosTarjetas = PagoTarjetaSerializer(many=True)",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "SolicitudProfesionSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class SolicitudProfesionSerializer(serializers.ModelSerializer):\n    proveedor = ProveedorSerializer(read_only=True)\n    class Meta:\n        model = SolicitudProfesion\n        fields = ['id', 'proveedor', 'profesion', 'anio_experiencia',\n                  'fecha_solicitud', 'documento', 'estado', 'fecha']\nclass CargoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cargo\n        fields = ['id', 'nombre', 'porcentaje', 'titulo']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "CargoSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class CargoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cargo\n        fields = ['id', 'nombre', 'porcentaje', 'titulo']",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'registro',Registro)\nurlpatterns = router.urls\nurlpatterns += [\n    path('tarjetaPaymentez/', CardsAuth.as_view()), #añade cvc de tarjeta #busca el cvc de la tarjeta segun el token #borra el cvc de la tarjeta segun el token\n    path('cardAuth_delete/<str:token>', CardsAuth.as_view()),\n    path('categorias/', Categorias.as_view()),\n    path('insignias/', Insignias.as_view()),\n    path('medallas/', Medallas.as_view()),\n    path('medalla_update/<str:id>', Medallas.as_view()),",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = router.urls\nurlpatterns += [\n    path('tarjetaPaymentez/', CardsAuth.as_view()), #añade cvc de tarjeta #busca el cvc de la tarjeta segun el token #borra el cvc de la tarjeta segun el token\n    path('cardAuth_delete/<str:token>', CardsAuth.as_view()),\n    path('categorias/', Categorias.as_view()),\n    path('insignias/', Insignias.as_view()),\n    path('medallas/', Medallas.as_view()),\n    path('medalla_update/<str:id>', Medallas.as_view()),\n    path('insigniaspersonales/<str:id>', InsigniasPersonales.as_view()),\n    path('medallaspersonales/<str:id>', MedallasPersonales.as_view()),",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "#urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "#urlpatterns = format_suffix_patterns(urlpatterns)",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "CardsAuth",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class CardsAuth(APIView):\n    # aqui es donde se busca una credencial por token mediane mysql\n    def get(self, request, format=None):\n        resp = {}\n        if request.method == 'GET':\n            valor = request.GET.get(\"token\")\n            if valor != None:\n                cards = Cardauth.objects.get(token=valor)\n                return JsonResponse(cards.auth, safe=False)\n            else:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "InsigniasPersonales",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class InsigniasPersonales(APIView):\n    def get(self, request, id,  format=None):\n        print(\"AAAAAAAAAAAAAAAAAAAAAA\")\n        print(id)\n        print(\"EEEEEEEEEEE\")\n        insignias = Insignia.objects.all().filter()\n        serializer = InsigniaSerializer(insignias, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "MedallasPersonales",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class MedallasPersonales(APIView):\n    def get(self, request, id,  format=None):\n        utc=pytz.UTC\n        print(\"AAAAAAAAAAAAAAAAAAAAAA\")\n        print(id)\n        print(\"EEEEEEEEEEE\")\n        medallasTot = Medalla.objects.all().filter()\n        print(medallasTot)\n        dato = Datos.objects.get(id=id)\n        print(dato)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Insignias",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Insignias(APIView):\n    def get(self, request, format=None):\n        insignias = Insignia.objects.all().filter()\n        serializer = InsigniaSerializer(insignias, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}\n        name = request.POST.get('nombre')\n        # picture = request.POST.get('imagen')\n        picture = request.FILES.get('imagen')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Medallas",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Medallas(APIView):\n    def get(self, request, format=None):\n        medallas = Medalla.objects.filter(estado=True)\n        medallas\n        serializer = MedallaSerializer(medallas, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}\n        nombre = request.POST.get('nombre')\n        imagen = request.FILES.get('imagen')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Insignia_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Insignia_Details(APIView):\n    def get(self, request, pk, format=None):\n        insignia = Insignia.objects.get(id=pk)\n        serializer = InsigniaSerializer(insignia)\n        return Response(serializer.data)\n    def put(self, request):\n        ident = request.GET.get('id')\n        insig = Insignia.objects.get(id=ident)\n        insig.estado = request.data.get('estado')\n        insig.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Medalla_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Medalla_Details(APIView):\n    def get(self, request, pk, format=None):\n        insignia = Insignia.objects.get(id=pk)\n        serializer = InsigniaSerializer(insignia)\n        return Response(serializer.data)\n    def put(self, request):\n        ident = request.GET.get('id')\n        medalla = Medalla.objects.get(id=ident)\n        print( \"medalla.estado\")\n        print( medalla.estado)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "InsigniasProveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class InsigniasProveedor(APIView):\n    def get(self, request, formt=None):\n        insignias = Insignia.objects.all().filter(tipo_usuario=\"Proveedor\")\n        serializer = InsigniaSerializer(insignias, many=True)\n        return Response(serializer.data)\nclass InsigniaSolicitantes(APIView):\n    def get(self, request, formt=None):\n        insignias = Insignia.objects.all().filter(tipo_usuario=\"Solicitante\")\n        serializer = InsigniaSerializer(insignias, many=True)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "InsigniaSolicitantes",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class InsigniaSolicitantes(APIView):\n    def get(self, request, formt=None):\n        insignias = Insignia.objects.all().filter(tipo_usuario=\"Solicitante\")\n        serializer = InsigniaSerializer(insignias, many=True)\n        return Response(serializer.data)\nclass DeviceNotification(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "DeviceNotification",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class DeviceNotification(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, format=None):\n        data = {}\n        correo = request.data.get('correo')\n        devices = FCMDevice.objects.filter(user=correo)\n        serializer = FCMDeviceSerializer(devices, many=True)\n        if len(devices) != 0:\n            for device in devices:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "FormatEmail",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class FormatEmail(APIView):\n    def create_email(self, email, subject, template_path, context):\n        template = get_template(template_path)\n        content = template.render(context)\n        email = EmailMultiAlternatives(\n            subject=subject,\n            body='',\n            from_email=settings.EMAIL_HOST_USER,\n            to=email,\n            cc=[]  # Con Copia -- correo del Administrador.",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Email",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Email(APIView):\n    def post(self, request, format=None):\n        data = {}\n        emails = []\n        email_user = request.data.get('email')\n        formatEmail = FormatEmail()\n        user = Datos.objects.get(user__email=email_user)\n        if user is not None:\n            user.security_access = uuid.uuid4()\n            user.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "EmailFactura",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class EmailFactura(APIView):\n    def post(self, request, format=None):\n        data = {}\n        emails = []\n        email_user = request.data.get('email')\n        formatEmail = FormatEmail()\n        user = Datos.objects.get(user__username=email_user)\n        if user is not None:\n            user.security_access = uuid.uuid4()\n            user.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "RecuperarPassword",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class RecuperarPassword(APIView):\n    def get(selt, request, user_email, format=None):\n        data = {'success': False}\n        # dato= Dato.objects.all().filter(id=id)\n        usuario = User.objects.filter(email=user_email)\n        if usuario.count() > 0:\n            # se envia correo con codigo y se retorna true para dar pase a la pantalla donde se ingresa codigo\n            user_dato = Datos.objects.get(user=usuario.first())\n            if (user_dato is not None):\n                data['success'] = True",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "EnviarAlerta",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class EnviarAlerta(APIView):\n    def get(selt, request, user_email, asunto, texto, format=None):\n        data = {'success': False}\n        # dato= Dato.objects.all().filter(id=id)\n        usuario = User.objects.filter(email=user_email)\n        if usuario.count() > 0:\n            # se envia correo con codigo y se retorna true para dar pase a la pantalla donde se ingresa codigo\n            user_dato = Datos.objects.get(user=usuario.first())\n            if (user_dato is not None):\n                formatEmail = FormatEmail()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValidarCodigo",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValidarCodigo(APIView):\n    def get(selt, request, email, codigo, format=None):\n        data = {'success': False}\n        usuario = User.objects.filter(email=email)\n        if usuario.count() > 0:\n            user_dato = Datos.objects.get(user=usuario.first())\n            if (user_dato is not None):\n                codigos = Codigos.objects.filter(\n                    user_datos=user_dato, codigo=codigo, estado=True)\n                if (codigos.count() > 0):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "CambioPasswordCodigo",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class CambioPasswordCodigo(APIView):\n    def get(selt, request, email, password, codigo, format=None):\n        data = {'success': False}\n        usuario = User.objects.filter(email=email)\n        if usuario.count() > 0:\n            user_dato = Datos.objects.get(user=usuario.first())\n            if (user_dato is not None):\n                codigos = Codigos.objects.filter(\n                    user_datos=user_dato, codigo=codigo, estado=True)\n                if (codigos.count() > 0):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "CambioContrasenia",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class CambioContrasenia(APIView):\n    def get(selt, request, email, password, format=None):\n        data = {'success': False}\n        try:\n            usuario = User.objects.get(email=email)\n        except Exception as e:\n            data['success'] = False\n            data['message'] = \"El usuario con ese correo no fue encontrado en la base de datos: \" + \\\n                str(e)\n        try:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Categorias",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Categorias(APIView):\n    def get(self, request, format=None):\n        categorias = Categoria.objects.all().filter()\n        serializer = CategoriaSerializer(categorias, many=True)\n        return Response(serializer.data)\n    def put(self, request, id, format=None):\n        dataMensaje = {}\n        categoria = Categoria.objects.get(id=id)\n        serializer = CategoriaSerializer(\n            categoria, data=request.data, partial=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Servicios",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Servicios(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, format=None):\n        servicios = Servicio.objects.all().filter(estado = True)\n        serializer = ServicioSerializer(servicios, many=True)\n        return Response(serializer.data)\n    def put(self, request, id, format=None):\n        servicios = Servicio.objects.get(id=id)\n        profesion = Profesion.objects.get_or_create(nombre=servicios.nombre)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Logout",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Logout(APIView):\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, *args, **kwargs):\n        token = Token.objects.get(key=self.kwargs[\"token\"])\n        token.delete()\n        logout(request)\n        return Response(status=status.HTTP_200_OK)\nclass RegistroFromRedes(APIView):\n    def post(self, request, user, formato=None):\n        usuario = User.objects.get(email=user)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "RegistroFromRedes",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class RegistroFromRedes(APIView):\n    def post(self, request, user, formato=None):\n        usuario = User.objects.get(email=user)\n        email = FormatEmail()\n        if usuario:\n            nombre_user = request.data.get('nombres')\n            apellido_user = request.data.get('apellidos')\n            telefono_user = request.data.get('telefono')\n            ciudad_user = request.data.get('ciudad')\n            cedula_user = request.data.get('cedula')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Registro",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Registro(viewsets.ModelViewSet):\n    serializer_class = DatosSerializer\n    queryset = Datos.objects.all()\n    def create(self, request, *args, **kwargs):\n        print(\"Hora de crear un nuevo usuario\")\n        user_email = request.POST.get('email')\n        user_password = request.POST.get('password')\n        users = User.objects.filter(username=user_email).count()\n        data = {}\n        email = FormatEmail()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "FacebookLogin",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\nclass GoogleLogin(SocialLoginView):\n    adapter_class = GoogleOAuth2Adapter\nclass Register_Proveedor(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def post(self, request, format=None):\n        data = {}\n        serializer_class = DatosSerializer",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "GoogleLogin",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class GoogleLogin(SocialLoginView):\n    adapter_class = GoogleOAuth2Adapter\nclass Register_Proveedor(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def post(self, request, format=None):\n        data = {}\n        serializer_class = DatosSerializer\n        queryset = Datos.objects.all()\n        user_email = request.POST.get('email')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Register_Proveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Register_Proveedor(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def post(self, request, format=None):\n        data = {}\n        serializer_class = DatosSerializer\n        queryset = Datos.objects.all()\n        user_email = request.POST.get('email')\n        password_user = User.objects.make_random_password()\n        usuario = User.objects.filter(username=user_email).count()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Update_Proveedor_Pendiente",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Update_Proveedor_Pendiente(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def post(self, request, format=None):\n        data = {}\n        if request.data.get('tipo_user') != 'Proveedor_Pendiente':\n            data['error'] = \"El usuario no corresponde a Proveedor\"\n            data['success'] = False\n            return Response(data)\n        # id de user_datos en proveedor",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Cupones_Aplicados",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Cupones_Aplicados(APIView):\n    def post(self, request, format=None):\n        data = {}\n        cupon_dat = request.data.get('cupon')\n        user_dat = request.data.get('user')\n        estado_dat = request.data.get('estado')\n        cup_id = request.data.get('cupon_id')\n        try:\n            cupon_apl = Cupon_Aplicado.objects.filter(\n                user=user_dat, cupon__id=cup_id)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Get_Cupon_Aplicado",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Get_Cupon_Aplicado(APIView):\n    def get(self, request, user, format=None):\n        cupon_aplicado = Cupon_Aplicado.objects.all().filter(user=user)\n        serializer = Cupon_AplicadoSerializer(cupon_aplicado, many=True)\n        return Response(serializer.data)\nclass Data_Proveedor_Pendiente(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def post(self, request, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Data_Proveedor_Pendiente",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Data_Proveedor_Pendiente(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def post(self, request, format=None):\n        data = {}\n        print(\"ESTE\")\n        if request.data.get('tipo') != 'Proveedor_Pendiente':\n            data['error'] = \"El tipo de usuario no es un Proveedor Pendiente\"\n            return Response(data)\n        usuario = User.objects.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Data_Proveedor_Proveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Data_Proveedor_Proveedor(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def post(self, request, format=None):\n        data = {}\n        '''if request.data.get('tipo')!='Proveedor_Pendiente':\n            data['error']=\"El tipo de usuario no es un Proveedor Pendiente\"\n            return Response(data)'''\n        usuario = User.objects.filter(\n            username=request.data.get('email')).count()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedor_Pendiente_Admin",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedor_Pendiente_Admin(APIView, MyPaginationMixin):\n    queryset = Proveedor_Pendiente.objects.all().order_by('-id')\n    serializer_class = Proveedor_PendienteSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)\n    # def get(self, request, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Pendientes_Email",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Pendientes_Email(APIView):\n    def get(self, request, mail, format=None):\n        try:\n            administrador = Proveedor_Pendiente.objects.get(email=mail)\n            serializer = Proveedor_PendienteSerializer(administrador)\n            return Response(serializer.data)\n        except:\n            return Response(\"nuevo\")\nclass Proveedores_Pendientes_Details(APIView):\n    def get(self, request, pk, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Pendientes_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Pendientes_Details(APIView):\n    def get(self, request, pk, format=None):\n        administrador = Proveedor_Pendiente.objects.get(id=pk)\n        serializer = Proveedor_PendienteSerializer(administrador)\n        return Response(serializer.data)\n    def put(self, request, pk, format=None):\n        pendiente = Proveedor_Pendiente.objects.get(id=pk)\n        copiaCedula = request.data.get('copiaCedula')\n        copiaLicencia = request.data.get('copiaLicencia')\n        filesDocuments = request.data.get('filesDocuments')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Pendientes_Estado",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Pendientes_Estado(APIView):\n    def put(self, request):\n        ident = request.GET.get('id')\n        prov = Proveedor_Pendiente.objects.get(id=ident)\n        prov.estado = 1\n        prov.save()\n        return Response(status=status.HTTP_200_OK)\nclass Proveedores_Pendientes_Details2(APIView):\n    def put(self, request, pk, format=None):\n        pendiente = Proveedor_Pendiente.objects.get(id=pk)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Pendientes_Details2",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Pendientes_Details2(APIView):\n    def put(self, request, pk, format=None):\n        pendiente = Proveedor_Pendiente.objects.get(id=pk)\n        razon = request.data.get('razon')\n        pendiente.estado = 1\n        pendiente.rechazo = razon\n        pendiente.save()\n        asunto = \"Solicitud Rechazada\"\n        formatEmail = FormatEmail()\n        thread = threading.Thread(target=formatEmail.send_email([pendiente.email], asunto, 'emails/formularioRechazado.html', {",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Rechazado_Estado",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Rechazado_Estado(APIView):\n    def put(self, request):\n        ident = request.GET.get('id')\n        prov = Proveedor_Pendiente.objects.get(id=ident)\n        prov.estado = 1\n        prov.save()\n        return Response(status=status.HTTP_200_OK)\nclass Proveedores_Proveedores_Details(APIView):\n    def get(self, request, pk, format=None):\n        administrador = Proveedor_Pendiente.objects.get(id=pk)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Proveedores_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Proveedores_Details(APIView):\n    def get(self, request, pk, format=None):\n        administrador = Proveedor_Pendiente.objects.get(id=pk)\n        serializer = Proveedor_PendienteSerializer(administrador)\n        return Response(serializer.data)\n    def put(self, request, pk, format=None):\n        print(\"dime si entra\")\n        pendiente = Proveedor.objects.get(id=pk)\n        copiaCedula = request.data.get('copiaCedula')\n        copiaLicencia = request.data.get('copiaLicencia')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProveedorDeleteView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProveedorDeleteView(APIView):\n    def delete(self, request, proveedor_id):\n        # Obtener el proveedor\n        proveedor = get_object_or_404(Proveedor, id=proveedor_id)\n        # Usar una transacción para asegurar que las eliminaciones se realicen de manera atómica\n        with transaction.atomic():\n            # Eliminar los Envio_Interesados asociados\n            Envio_Interesados.objects.filter(solicitud__proveedor=proveedor).delete()\n            # Eliminar las solicitudes asociadas al proveedor\n            solicitudes_eliminadas = Solicitud.objects.filter(proveedor=proveedor).delete()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Rechazados_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Rechazados_Details(APIView):\n    def get(self, request, pk, format=None):\n        administrador = Proveedor_Pendiente.objects.get(id=pk)\n        serializer = Proveedor_PendienteSerializer2(administrador)\n        return Response(serializer.data)\n    def put(self, request, pk, format=None):\n        pendiente = Proveedor_Pendiente.objects.get(id=pk)\n        copiaCedula = request.data.get('copiaCedula')\n        copiaLicencia = request.data.get('copiaLicencia')\n        documents = request.FILES.getlist('filesDocuments')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Pendientes_Search_Name",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Pendientes_Search_Name(APIView, MyPaginationMixin):\n    queryset = Proveedor_Pendiente.objects.all()\n    serializer_class = Proveedor_PendienteSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, user, format=None):\n        page = self.paginate_queryset(self.queryset.filter(\n            Q(nombres__icontains=user) | Q(apellidos__icontains=user)))\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Pendientes_FilterDate",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Pendientes_FilterDate(APIView, MyPaginationMixin):\n    queryset = Proveedor_Pendiente.objects.all()\n    serializer_class = Proveedor_PendienteSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudAdjudicada",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudAdjudicada(APIView):\n    def get(self, request, solicitud_ID, format=None):\n        solicitud = Solicitud.objects.get(id=solicitud_ID)\n        adjudicada = Envio_Interesados.objects.all().filter(\n            solicitud=solicitud, proveedor=solicitud.proveedor)\n        serializer = Envio_InteresadosSerializer(adjudicada, many=True)\n        return Response(serializer.data)\nclass AdjudicarSolicitud(APIView):\n    def put(self, request, solicitud_ID, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AdjudicarSolicitud",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AdjudicarSolicitud(APIView):\n    def put(self, request, solicitud_ID, format=None):\n        data = {}\n        try:\n            id_user = request.data.get('proveedor')\n            print(\"is\",id_user)\n            print(type(id_user))\n            print(\"hola\")\n            proveedor = Proveedor.objects.get(user_datos__user__id=int(id_user))\n            print(\"soli\",solicitud_ID)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudID",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudID(APIView):\n    def get(self, request, solicitud_ID, format=None):\n        solicitud = Solicitud.objects.get(id=solicitud_ID)\n        serializer = SolicitudSerializer(solicitud)\n        return Response(serializer.data)\n# Pagintation SolicitudesPending\nclass SolicitudesPendingPag(APIView, MyPaginationMixin):\n    queryset = Solicitud.objects.all()\n    serializer_class = SolicitudSerializer\n    pagination_class = MyCustomPagination",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesPendingPag",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesPendingPag(APIView, MyPaginationMixin):\n    queryset = Solicitud.objects.all()\n    serializer_class = SolicitudSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, correo, format=None):\n        try:\n            page = self.paginate_queryset(self.queryset.filter(solicitante__user_datos__user__email=correo, adjudicar=False,\n                                          proveedor__isnull=True, termino__isnull=True, fecha_expiracion__gt=timezone.now()).order_by('-id'))\n            if page is not None:\n                serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesPending",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesPending(APIView, MyPaginationMixin):\n    pagination_class = MyCustomPagination\n    def get(self, request, correo, format=None):\n        data = {}\n        current_date = timezone.now()\n        try:\n            solicitudes = Solicitud.objects.all().filter(solicitante__user_datos__user__email=correo, adjudicar=False,\n                                                         proveedor__isnull=True, termino__isnull=True, fecha_expiracion__gt=current_date).order_by('-id')\n            serializer = SolicitudSerializer(solicitudes, many=True)\n            data['success'] = True",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesPastPag",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesPastPag(APIView, MyPaginationMixin):\n    queryset = Solicitud.objects.all()\n    serializer_class = SolicitudSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, correo, format=None):\n        try:\n            page = self.paginate_queryset(self.queryset.filter(Q(solicitante__user_datos__user__email=correo) & (\n                Q(termino='finalizado') | Q(termino='cancelado') | Q(fecha_expiracion__lt=timezone.now(), adjudicar=False))).order_by('-id'))\n            if page is not None:\n                serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesPast",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesPast(APIView):\n    def get(self, request, correo, format=None):\n        data = {}\n        current_date = timezone.now()\n        try:\n            solicitudes = Solicitud.objects.filter(Q(solicitante__user_datos__user__email=correo) & (Q(termino='finalizado') | Q(\n                termino='cancelado') | Q(fecha_expiracion__lt=timezone.now(), adjudicar=False))).order_by('-id')\n            serializer = SolicitudSerializer(solicitudes, many=True)\n            data['success'] = True\n            data['num_solicitudes'] = len(solicitudes)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesPaidPag",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesPaidPag(APIView, MyPaginationMixin):\n    queryset = Solicitud.objects.all()\n    serializer_class = SolicitudSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, correo, format=None):\n        try:\n            page = self.paginate_queryset(self.queryset.filter(\n                solicitante__user_datos__user__email=correo, adjudicar=True, pagada=True, termino='pagado').order_by('-id'))\n            if page is not None:\n                serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesPaid",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesPaid(APIView):\n    def get(self, request, correo, format=None):\n        data = {}\n        current_date = timezone.now()\n        try:\n            solicitudes = Solicitud.objects.filter(\n                solicitante__user_datos__user__email=correo, adjudicar=True, pagada=True, termino='pagado').order_by('-id')\n            serializer = SolicitudSerializer(solicitudes, many=True)\n            data['success'] = True\n            data['num_solicitudes'] = len(solicitudes)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesNoPaidPag",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesNoPaidPag(APIView, MyPaginationMixin):\n    queryset = Solicitud.objects.all()\n    serializer_class = SolicitudSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, correo, format=None):\n        try:\n            page = self.paginate_queryset(self.queryset.filter(\n                solicitante__user_datos__user__email=correo, adjudicar=True, pagada=False, proveedor__isnull=False).order_by('-id'))\n            if page is not None:\n                serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesNoPaid",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesNoPaid(APIView):\n    def get(self, request, correo, format=None):\n        data = {}\n        current_date = timezone.now()\n        try:\n            solicitudes = Solicitud.objects.filter(\n                solicitante__user_datos__user__email=correo, adjudicar=True, pagada=False, proveedor__isnull=False).order_by('-id')\n            serializer = SolicitudSerializer(solicitudes, many=True)\n            data['success'] = True\n            data['num_solicitudes'] = len(solicitudes)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Solicituds",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Solicituds(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, format=None):\n        solicitud = Solicitud.objects.all().filter()\n        serializer = SolicitudSerializer(solicitud, many=True)\n        # print(JSONRenderer().render(serializer.data))\n        return Response(serializer.data)\n    def put(self, request, solicitud_ID, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AddSolicitud",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AddSolicitud(APIView):\n    def post(self, request, format=None):\n        # Data de respuesta\n        data = {}\n        # solicitud\n        desc = request.data.get('descripcion')\n        foto_desc = request.FILES.get('foto_descripcion')\n        fecha_exp = request.data.get('fecha')\n        fecha_creacion = request.data.get('fecha_creacion')\n        user = request.data.get('solicitante')  # id solicitante",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Solicitudes",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Solicitudes(APIView):\n   # permission_classes = (IsAuthenticated,)\n   # authentication_class = (TokenAuthentication)\n    def get(self, request, user, format=None):\n        solicitud = Solicitud.objects.all().filter(\n            solicitante__user_datos__user__email=user)\n        serializer = SolicitudSerializer(solicitud, many=True)\n        # print(JSONRenderer().render(serializer.data))\n        return Response(serializer.data)\nclass Profesiones(APIView):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Profesiones",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Profesiones(APIView):\n   # permission_classes = (IsAuthenticated,)\n   # authentication_class = (TokenAuthentication)\n    def get(self, request, format=None):\n        profesion = Profesion.objects.all().filter(estado=1)\n        serializer = ProfesionSerializer(profesion, many=True)\n        # print(JSONRenderer().render(serializer.data))\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "CrearProfesionesFaltantesView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class CrearProfesionesFaltantesView(APIView):\n    def post(self, request, format=None):\n        # Diccionario para almacenar los resultados\n        data = {\n            \"profesiones_creadas\": [],\n            \"errores\": []\n        }\n        # Obtener todos los servicios\n        servicios = Servicio.objects.all()\n        # Recorrer los servicios",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProfesionDetails",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProfesionDetails(APIView):\n    def get(self, request, pk, format=None):\n        profesion = Profesion.objects.get(id=pk)\n        serializer = ProfesionSerializer(profesion)\n        return Response(serializer.data)\nclass ProfesionProveedor(APIView):\n    def get(self, request, proveedor_id, format=None):\n        profesiones = Profesion_Proveedor.objects.all().filter(proveedor__id=proveedor_id)\n        serializer = Profesion_ProveedorSerializer(profesiones, many=True)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProfesionProveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProfesionProveedor(APIView):\n    def get(self, request, proveedor_id, format=None):\n        profesiones = Profesion_Proveedor.objects.all().filter(proveedor__id=proveedor_id)\n        serializer = Profesion_ProveedorSerializer(profesiones, many=True)\n        return Response(serializer.data)\nclass ProveedoresByProfesion(APIView):\n    def get(self, request, servicio_id, format=None):\n        servicio= Servicio.objects.get(id=servicio_id)\n        profesion= Profesion.objects.get(nombre=servicio.nombre)\n        prov_prof = Profesion_Proveedor.objects.all().filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProveedoresByProfesion",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProveedoresByProfesion(APIView):\n    def get(self, request, servicio_id, format=None):\n        servicio= Servicio.objects.get(id=servicio_id)\n        profesion= Profesion.objects.get(nombre=servicio.nombre)\n        prov_prof = Profesion_Proveedor.objects.all().filter(\n            profesion=profesion)\n        print(\"servicio\")\n        print(servicio)\n        print(\"prov_prof\")\n        print(prov_prof)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SincronizarProfesionProveedorView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SincronizarProfesionProveedorView(APIView):\n   def post(self, request, format=None):\n    # Diccionario para almacenar resultados\n    data = {\n        \"creados\": [],\n        \"actualizados\": [],\n        \"errores\": []\n    }\n    # Obtener todos los servicios\n    servicios = Servicio.objects.all()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotalProveedores",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotalProveedores(APIView):\n    def get(self, request, format=None):\n        contenido = {}\n        contenido[\"totalPendientes\"] = Proveedor.objects.count()\n        contenido[\"totalProveedores\"] = PagoEfectivo.objects.count()\n        return Response(contenido)\nclass ValorTotalSolicitantes(APIView):\n    def get(self, request, format=None):\n        contenido = Solicitantes.objects.count()\n        return Response(contenido)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotalSolicitantes",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotalSolicitantes(APIView):\n    def get(self, request, format=None):\n        contenido = Solicitantes.objects.count()\n        return Response(contenido)\nclass Proveedores(APIView, MyPaginationMixin):\n   # permission_classes = (IsAuthenticated,)\n   # authentication_class = (TokenAuthentication)\n    queryset = Proveedor.objects.all().exclude(user_datos__tipo=4).order_by('-id')\n    serializer_class = ProveedorSerializer\n    pagination_class = MyCustomPagination",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores(APIView, MyPaginationMixin):\n   # permission_classes = (IsAuthenticated,)\n   # authentication_class = (TokenAuthentication)\n    queryset = Proveedor.objects.all().exclude(user_datos__tipo=4).order_by('-id')\n    serializer_class = ProveedorSerializer\n    pagination_class = MyCustomPagination\n    # def get(self, request, format=None):\n    #     proveedor = Proveedor.objects.all()\n    #     # proveedor = Proveedor.objects.all().exclude(user_datos__tipo=4)\n    #     serializer = ProveedorSerializer(proveedor, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Get_Proveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Get_Proveedor(APIView):\n    def get(self, request, pk, format=None):\n        proveedor = Proveedor.objects.get(user_datos__id=pk)\n        serializer = ProveedorSerializer(proveedor)\n        return Response(serializer.data)\nclass Get_ProveedorByUser(APIView):\n    def get(self, request, user, format=None):\n        proveedor = Proveedor.objects.get(user_datos__user__username=user)\n        serializer = ProveedorSerializer(proveedor)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Get_ProveedorByUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Get_ProveedorByUser(APIView):\n    def get(self, request, user, format=None):\n        proveedor = Proveedor.objects.get(user_datos__user__username=user)\n        serializer = ProveedorSerializer(proveedor)\n        return Response(serializer.data)\nclass Get_AdminByUser(APIView):\n    def get(self, request, user, format=None):\n        proveedor = Proveedor.objects.get(user_datos__user__username=user)\n        serializer = ProveedorSerializer(proveedor)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Get_AdminByUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Get_AdminByUser(APIView):\n    def get(self, request, user, format=None):\n        proveedor = Proveedor.objects.get(user_datos__user__username=user)\n        serializer = ProveedorSerializer(proveedor)\n        return Response(serializer.data)\nclass Proveedores_Details(APIView):\n    def get(self, request, pk, format=None):\n        proveedor = Proveedor.objects.get(id=pk)\n        serializer = ProveedorSerializer(proveedor)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Details(APIView):\n    def get(self, request, pk, format=None):\n        proveedor = Proveedor.objects.get(id=pk)\n        serializer = ProveedorSerializer(proveedor)\n        return Response(serializer.data)\n    def put(self, request, pk, format=None):\n        data = {}\n        dataMensaje = {}\n        proveedorActual = Proveedor.objects.get(id=pk)\n        # info para correo",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudProfesionProveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudProfesionProveedor(APIView, MyPaginationMixin):\n    queryset = SolicitudProfesion.objects.all()\n    serializer_class = SolicitudProfesionSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)\nclass ManejoSolicitud(APIView):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ManejoSolicitud",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ManejoSolicitud(APIView):\n    def get(self, request, format=None):\n        solicitudes_profesion = SolicitudProfesion.objects.all().filter()\n        serializer = SolicitudProfesionSerializer(\n            solicitudes_profesion, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}\n        correo_proveedor = request.data.get(\"proveedor\")\n        nombre_profesion = request.data.get(\"profesion\")",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "CorreoSolicitud",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class CorreoSolicitud(APIView):\n    def post(self, request, format=None):\n        data = {}\n        correo = request.data.get('email')\n        profesion = request.data.get('profesion')\n        emails = []\n        formatEmail = FormatEmail()\n        user = Datos.objects.get(user__email=correo)\n        if user is not None:\n            asunto = \"Respuesta Solicitud\"",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudByName",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudByName(APIView):\n    def get(self, request, user, format=None):\n        solicitudes = SolicitudProfesion.objects.filter(\n            proveedor__user_datos__user__username=user)\n        serializer = SolicitudProfesionSerializer(solicitudes, many=True)\n        return Response(serializer.data)\nclass SolicitudDetails(APIView):\n    def get(self, request, pk, format=None):\n        solicitud = SolicitudProfesion.objects.get(id=pk)\n        serializer = SolicitudProfesionSerializer(solicitud)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudDetails",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudDetails(APIView):\n    def get(self, request, pk, format=None):\n        solicitud = SolicitudProfesion.objects.get(id=pk)\n        serializer = SolicitudProfesionSerializer(solicitud)\n        return Response(serializer.data)\nclass Solicitudes_Search_Name(APIView, MyPaginationMixin):\n    queryset = SolicitudProfesion.objects.all()\n    serializer_class = SolicitudProfesionSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, user, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Solicitudes_Search_Name",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Solicitudes_Search_Name(APIView, MyPaginationMixin):\n    queryset = SolicitudProfesion.objects.all()\n    serializer_class = SolicitudProfesionSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, user, format=None):\n        page = self.paginate_queryset(self.queryset.filter(\n            Q(proveedor__user_datos__nombres__icontains=user) | Q(proveedor__user_datos__apellidos__icontains=user)))\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Solicitudes_Filter_Date",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Solicitudes_Filter_Date(APIView, MyPaginationMixin):\n    queryset = SolicitudProfesion.objects.all()\n    serializer_class = SolicitudProfesionSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Search_Name",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Search_Name(APIView, MyPaginationMixin):\n    queryset = Proveedor.objects.all()\n    serializer_class = ProveedorSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, user, format=None):\n        page = self.paginate_queryset(self.queryset.filter(\n            Q(user_datos__nombres__icontains=user) | Q(user_datos__apellidos__icontains=user)))\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Filter_Date",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Filter_Date(APIView, MyPaginationMixin):\n    queryset = Proveedor.objects.all()\n    serializer_class = ProveedorSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PlanProveedores_Filter_Date",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PlanProveedores_Filter_Date(APIView, MyPaginationMixin):\n    queryset = Proveedor.objects.all()\n    serializer_class = ProveedorSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Documentos_proveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Documentos_proveedor(APIView):\n    def put(self, request, format=None):\n        descripcion = request.data.get('descripcion')\n        documento = Document.objects.get(descripcion=descripcion)\n        serializer = DocumentSerializer(\n            documento, data=request.data, partial=True)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProveedoresDocumentsView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProveedoresDocumentsView(APIView):\n    def get(self, request, format=None):\n        queryset = Document.objects.all()\n        serializer = DocumentSerializer(queryset, many=True)\n        parser_classes = (MultiPartParser, FormParser)\n        return Response(serializer.data)\n    def delete(self, request, format=None):\n        documento_proveedor = Document.objects.get(id=request.GET.get(\"id\"))\n        documento_proveedor.delete()\n        return Response(status=status.HTTP_204_NO_CONTENT)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Pendientes_exitente",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Pendientes_exitente(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, username, name_profesion, format=None):\n        data = {}\n        try:\n            proveedor_pendiente = Proveedor_Pendiente.objects.get(\n                proveedor__user_datos__user__username=username, profesion=name_profesion)\n            if proveedor_pendiente is not None:\n                data['success'] = True",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Pendientes",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Pendientes(APIView, MyPaginationMixin):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    # def get(self, request, format=None):\n    #     proveedor_pendiente = Proveedor_Pendiente.objects.all().filter()\n    #     serializer = Proveedor_PendienteSerializer(proveedor_pendiente,many= True)\n    #     return Response(serializer.data)\n    queryset = Proveedor_Pendiente.objects.all().order_by('-id').filter(estado=0)\n    serializer_class = Proveedor_PendienteSerializer\n    pagination_class = MyCustomPagination",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Rechazados",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Rechazados(APIView, MyPaginationMixin):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    # def get(self, request, format=None):\n    #     proveedor_pendiente = Proveedor_Pendiente.objects.all().filter()\n    #     serializer = Proveedor_PendienteSerializer(proveedor_pendiente,many= True)\n    #     return Response(serializer.data)\n    queryset = Proveedor_Pendiente.objects.filter(estado=1).filter(Q(rechazo__isnull=False) & ~Q(rechazo='')).order_by('-id')\n    serializer_class = Proveedor_PendienteSerializer\n    pagination_class = MyCustomPagination",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Proveedores",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Proveedores(APIView, MyPaginationMixin):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    # def get(self, request, format=None):\n    #     proveedor_pendiente = Proveedor_Pendiente.objects.all().filter()\n    #     serializer = Proveedor_PendienteSerializer(proveedor_pendiente,many= True)\n    #     return Response(serializer.data)\n    print(\"querysetBan\")\n    formatEmail = FormatEmail()\n    today = timezone.now().date()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "CuentaProveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class CuentaProveedor(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(selt, request, proveedorID, format=None):\n        cuentas = Cuenta.objects.all().filter(proveedor=proveedorID)\n        serializer = CuentaSerializer(cuentas, many=True)\n        return Response(serializer.data)\nclass DatosUsers(APIView):\n    def get(self, request, format=None):\n        queryset = Datos.objects.all().order_by('-id')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "DatosUsers",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class DatosUsers(APIView):\n    def get(self, request, format=None):\n        queryset = Datos.objects.all().order_by('-id')\n        serializer = DatosSerializer(queryset, many=True)\n        parser_classes = (MultiPartParser, FormParser)\n        return Response(serializer.data)\n    def delete(self, request, format=None):\n        data = {}\n        try:\n            dato = Datos.objects.get(id=request.GET.get(\"id\"))",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Usuarios",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Usuarios(APIView):\n    def get(self, request, format=None):\n        queryset = User.objects.all().order_by('-id')\n        serializer = UserSerializer(queryset, many=True)\n        parser_classes = (MultiPartParser, FormParser)\n        return Response(serializer.data)\n    def delete(self, request, format=None):\n        data = {}\n        try:\n            dato = User.objects.get(id=request.GET.get(\"id\"))",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Dato",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Dato(APIView):\n   # permission_classes = (IsAuthenticated,)\n   # authentication_class = (TokenAuthentication)\n    def get(self, request, user, format=None):\n        data = {}\n        proveedor = Datos.objects.all().filter(\n            user__email=user) | Datos.objects.all().filter(user__username=user)\n        serializer = DatosSerializer(proveedor, many=True)\n        # print(JSONRenderer().render(serializer.data))\n        data['dato'] = serializer.data",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitanteUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitanteUser(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, user, format=None):\n        solicitante = Solicitante.objects.filter(user_datos__user__email=user)\n        serializer = SolicitanteSerializer(solicitante, many=True)\n        return Response(serializer.data)\nclass SolicitanteByUserDatos(APIView):  #  Endopint Add\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitanteByUserDatos",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitanteByUserDatos(APIView):  #  Endopint Add\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, UserDatosId, format=None):\n        solicitante = Solicitante.objects.filter(user_datos__id=UserDatosId)\n        serializer = SolicitanteSerializer(solicitante, many=True)\n        return Response(serializer.data)\nclass Solicitantes(APIView, MyPaginationMixin):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Solicitantes",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Solicitantes(APIView, MyPaginationMixin):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    queryset = Solicitante.objects.all().order_by('-id')\n    serializer_class = SolicitanteSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, formt=None):\n        print(request.GET.get(\"filtro\"))\n        if request.GET.get(\"filtro\") == \"activos\":\n            print(request.GET.get(\"filtro\"))",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitantesFilter",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitantesFilter(APIView, MyPaginationMixin):\n    queryset = Solicitante.objects.all()\n    serializer_class = SolicitanteSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "FiltroNombres",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class FiltroNombres(APIView, MyPaginationMixin):\n    queryset = Solicitante.objects.all()\n    serializer_class = SolicitanteSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, user, format=None):\n        page = self.paginate_queryset(self.queryset.filter(\n            Q(user_datos__nombres__icontains=user) | Q(user_datos__apellidos__icontains=user)))\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Administradores",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Administradores(APIView, MyPaginationMixin):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    queryset = Administrador.objects.all().order_by('-id')\n    serializer_class = AdministradorSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Admin_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Admin_Details(APIView):\n    def get(self, request, pk, format=None):\n        administrador = Administrador.objects.get(id=pk)\n        serializer = AdministradorSerializer(administrador)\n        return Response(serializer.data)\n    def put(self, request, pk, format=None):\n        data = {}\n        admin = Administrador.objects.get(id=request.data.get('id'))\n        persona = Datos.objects.get(user__email=request.data.get('email'))\n        user = User.objects.get(email=request.data.get('email'))",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AdministradoresFilter",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AdministradoresFilter(APIView, MyPaginationMixin):\n    queryset = Administrador.objects.all()\n    serializer_class = AdministradorSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AdministradoresUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AdministradoresUser(APIView, MyPaginationMixin):\n    queryset = Administrador.objects.all()\n    serializer_class = AdministradorSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, user, format=None):\n        page = self.paginate_queryset(self.queryset.filter(\n            Q(user_datos__nombres__icontains=user) | Q(user_datos__apellidos__icontains=user)))\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedor_Profesiones",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedor_Profesiones(APIView):\n   # permission_classes = (IsAuthenticated,)\n   # authentication_class = (TokenAuthentication)\n    def get(self, request, user, format=None):\n        proveedor_profesiones = Profesion_Proveedor.objects.filter(\n            proveedor__user_datos__user__username=user) | Profesion_Proveedor.objects.filter(proveedor__user_datos__user__email=user)\n        serializer = Profesion_ProveedorSerializer(\n            proveedor_profesiones, many=True)\n        c=0\n        for prof in proveedor_profesiones:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Solicitud_Servicio_User",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Solicitud_Servicio_User(APIView):\n # permission_classes = (IsAuthenticated,)\n   # authentication_class = (TokenAuthentication)\n    def get(self, request, ID_servicio, user, format=None):\n        solicitud_servicio = Envio_Interesados.objects.filter(\n            solicitud__servicio=ID_servicio, solicitud__estado=True, proveedor__user_datos__user__username=user, interesado=False).order_by('-fecha_creacion')\n        solicitudes = []\n        for solicitud in solicitud_servicio:\n            solicitudes.append(solicitud.solicitud)\n        serializer = SolicitudSerializer(solicitudes, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Service",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Service(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, category_ID,  format=None):\n        servicios = Servicio.objects.all().filter(categoria=category_ID)\n        serializer = ServicioSerializer(servicios, many=True)\n        return Response(serializer.data)\nclass Envio(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Envio",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Envio(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, solicitud_ID, format=None):\n        envio_interesado = Envio_Interesados.objects.all().filter(\n            solicitud=solicitud_ID, interesado=False)\n        serializer = Envio_InteresadosSerializer(envio_interesado, many=True)\n        return Response(serializer.data)\n    def put(self, request, user, solicitud_ID, format=None):\n        solicitud = Solicitud.objects.get(id=solicitud_ID)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Notificacion_Chat",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Notificacion_Chat(APIView):\n    def post(self, request, format=None):\n        remitente = request.data.get(\"remitente\")\n        titles = 'Nuevo Mensaje de ' + str(remitente)\n        isSolicitante = request.data.get(\"isSolicitante\")\n        bodys = request.data.get(\"message\")\n        user = request.data.get(\"user\")\n        url = request.data.get(\"url\")\n        ruta = \"\"\n        if isSolicitante:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Notificacion_Chat_Proveedor",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Notificacion_Chat_Proveedor(APIView):\n    def post(self, request, format=None):\n        remitente = request.data.get(\"remitente\")\n        getUsuario = request.data.get(\"user\")\n        # usuario = Datos.objects.get(user_#id=getUsuario)\n        solicitante = Solicitante.objects.get(user_datos__id=getUsuario)\n        titles = 'Nuevo Mensaje de ' + str(remitente)\n        bodys = request.data.get(\"message\")\n        devices = FCMDevice.objects.filter(\n            active=True, user__username=solicitante.user_datos.user.email)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Notificacion_General",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Notificacion_General(APIView):\n    def post(self, request, format=None):\n        bodys = request.data.get(\"message\")\n        user = request.data.get(\"user\")\n        titles = request.data.get(\"title\")\n        devices = FCMDevice.objects.filter(user__username=user)\n        tokend = devices.values_list('registration_id', flat=True)\n        data={\"ruta\": \"Historial\", \"descripcion\": \"Proveedor Interesado\"}\n        tokens=list(tokend)\n        send_notificationF(tokens,titles,bodys,data) ",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Interesados",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Interesados(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, id_proveedor_user_datos, format=None):\n        envio_interesado = Envio_Interesados.objects.all().filter(\n            proveedor__user_datos_id=id_proveedor_user_datos, interesado=True).order_by('-fecha_creacion')\n        serializer = Envio_InteresadosSerializer(envio_interesado, many=True)\n        return Response(serializer.data)\nclass Proveedores_InteresadosFecha(APIView):\n    def post(self, request, id_proveedor_user_datos, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_InteresadosFecha",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_InteresadosFecha(APIView):\n    def post(self, request, id_proveedor_user_datos, format=None):\n        envio_interesado = Envio_Interesados.objects.all().filter(\n            proveedor__user_datos_id=id_proveedor_user_datos, fecha_creacion__gte=request.data.get('dateInicio'), fecha_creacion__lte=request.data.get('dateFinal'), interesado=True).order_by('-fecha_creacion')\n        serializer = Envio_InteresadosSerializer(envio_interesado, many=True)\n        return Response(serializer.data)\n# Paginados\nclass Proveedores_Interesados_Pag(APIView, MyPaginationMixin):\n    queryset = Envio_Interesados.objects.all()\n    serializer_class = Envio_InteresadosSerializer",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Interesados_Pag",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Interesados_Pag(APIView, MyPaginationMixin):\n    queryset = Envio_Interesados.objects.all()\n    serializer_class = Envio_InteresadosSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, id_proveedor_user_datos, format=None):\n        try:\n            page = self.paginate_queryset(self.queryset.filter(\n                proveedor__user_datos_id=id_proveedor_user_datos, interesado=True).order_by('-fecha_creacion'))\n            if page is not None:\n                serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Interesados_Efectivo_Pag",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Interesados_Efectivo_Pag(APIView, MyPaginationMixin):\n    queryset = Envio_Interesados.objects.all()\n    serializer_class = Envio_InteresadosSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, id_proveedor_user_datos, format=None):\n        try:\n            page = self.paginate_queryset(self.queryset.filter(\n                proveedor__user_datos_id=id_proveedor_user_datos, interesado=True, solicitud__tipo_pago__nombre='Efectivo').order_by('-fecha_creacion'))\n            if page is not None:\n                serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Proveedores_Interesados_Tarjeta_Pag",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Proveedores_Interesados_Tarjeta_Pag(APIView, MyPaginationMixin):\n    queryset = Envio_Interesados.objects.all()\n    serializer_class = Envio_InteresadosSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, id_proveedor_user_datos, format=None):\n        try:\n            page = self.paginate_queryset(self.queryset.filter(\n                proveedor__user_datos_id=id_proveedor_user_datos, interesado=True, solicitud__tipo_pago__nombre='Tarjeta').order_by('-fecha_creacion'))\n            if page is not None:\n                serializer = self.serializer_class(page, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SolicitudesPagadas",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SolicitudesPagadas(APIView):\n    def get(self, request, id, format=None):\n        envio_interesado = Envio_Interesados.objects.all().filter(proveedor__user_datos_id=id,\n                                                                  interesado=True, solicitud__pagada=True).order_by('-fecha_creacion')\n        serializer = Envio_InteresadosSerializer(envio_interesado, many=True)\n        return Response(serializer.data)\nclass Envio_Interesado(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, solicitud_ID, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Envio_Interesado",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Envio_Interesado(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, solicitud_ID, format=None):\n        datos = []\n        envio_interesado = Envio_Interesados.objects.all().filter(\n            solicitud=solicitud_ID, interesado=True)\n        serializer = Envio_InteresadosSerializer(envio_interesado, many=True)\n        for solicitud in serializer.data:\n            data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ChangePassword",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ChangePassword(APIView):\n    def get(self, request, *args, **kwargs):\n        access_security = self.kwargs[\"access_security\"]\n        if Datos.objects.filter(security_access=access_security).exists():\n            return super.get(request, *args, **kwargs)\n        return Response(status=status.HTTP_400_BAD_REQUEST)\n    def post(self, request, *args, **kwargs):\n        data = {}\n        try:\n            persona = Datos.objects.get(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Login",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Login(APIView):\n    def post(self, request, format=None):\n        res_tipo = request.data.get('tipo')\n        data = {}\n        form = AuthenticationForm(data=request.data)\n        if form.is_valid():\n            username = form.cleaned_data['username']\n            password = form.cleaned_data['password']\n            user = authenticate(username=username, password=password)\n            if user is not None:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "LoginAdmin",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class LoginAdmin(APIView):\n    def post(self, request, format=None):\n        print(\"entra aca\")\n        res_tipo = request.data.get('tipo')\n        data = {}\n        form = AuthenticationForm(data=request.data)\n        print(form)\n        username = form.cleaned_data['username']\n        password = form.cleaned_data['password']\n        print(username)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Paymentez",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Paymentez:\n    def getDELETEtokenPaymentez(self):\n        try:\n            server_application_code = 'INNOVA-EC-SERVER'\n            server_app_key = 'Y5FnbpWYtULtj1Muvw3cl8LJ7FVQfM'\n            unix_timestamp = str(int(time.time()))\n            uniq_token_string = server_app_key + unix_timestamp\n            uniq_token_string = uniq_token_string.encode('utf-8')\n            uniq_token_hash = hashlib.sha256(uniq_token_string).hexdigest()\n            to_encode = '%s;%s;%s' % (",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "TarjetaUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class TarjetaUser(APIView):\n    def get(self, request, identifier, format=None):\n        # id -> username\n        tarjetas = Tarjeta.objects.all().filter(\n            solicitante__user_datos__user__username=identifier)\n        serializer = TarjetaSerializer(tarjetas, many=True)\n        return Response(serializer.data)\n    def delete(self, request, identifier, format=None):\n        # Aqui el id es el de la tarjeta\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Tarjetas",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Tarjetas(APIView):\n    def get(self, request, format=None):\n        data = {}\n        tarjetas = Tarjeta.objects.all()\n        serializer = TarjetaSerializer(tarjetas, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}\n        data['success'] = False\n        user_titular = request.data.get('titular')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Datos_Users",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Datos_Users(APIView):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    def get(self, request, id, format=None):\n        dato = Datos.objects.all().filter(user__id=id)\n        serializer = DatosSerializer(dato, many=True)\n        return Response(serializer.data)\nclass Complete_Data_User(APIView):\n    def put(self, request, username, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Complete_Data_User",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Complete_Data_User(APIView):\n    def put(self, request, username, format=None):\n        data = {}\n        data['success'] = False\n        try:\n            dato = Datos.objects.get(user__username=username)\n        except:\n            data['error'] = \"No se encontró el usuario\"\n            return Response(data)\n        else:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Notificaciones",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Notificaciones(APIView, MyPaginationMixin):\n    # permission_classes = (IsAuthenticated,)\n    # authentication_class = (TokenAuthentication)\n    # def get(self, request, format=None):\n    #     notificacion = Notificacion.objects.all().filter()\n    #     serializer = NotificacionSerializer(notificacion, many=True)\n    #     return Response(serializer.data)\n    queryset = Notificacion.objects.all()\n    serializer_class = NotificacionSerializer\n    pagination_class = MyCustomPagination",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Notificaciones_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Notificaciones_Details(APIView):\n    def get(self, request, pk, format=None):\n        noti= Notificacion.objects.get(id=pk)\n        serializer = NotificacionSerializer(noti)\n        return Response(serializer.data)\n    def put(self, request):\n        ident = request.GET.get('id')\n        noti = Notificacion.objects.get(id=ident)\n        noti.estado = request.data.get('estado')\n        noti.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Grupos",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Grupos(APIView):\n    def get(self, request, format=None):\n        grupos = Group.objects.all()\n        serializer = GroupSerializer(grupos, many=True)\n        return Response(serializer.data)\nclass Promociones(APIView):\n    def get(self, request, format=None):\n        today = date.today()\n        enddate = today + timedelta(days=30)\n        promociones = Promocion.objects.all().filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Promociones",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Promociones(APIView):\n    def get(self, request, format=None):\n        today = date.today()\n        enddate = today + timedelta(days=30)\n        promociones = Promocion.objects.all().filter(\n            fecha_expiracion__range=[today, enddate])\n        serializer = PromocionSerializer(promociones, many=True)\n        return Response(serializer.data)\n    def delete(self, request, id, format=None):\n        promocion = Promocion.objects.get(id=id)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Promocion_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Promocion_Details(APIView):\n    def get(self, request, pk, format=None):\n        promocion = Promocion.objects.get(id=pk)\n        serializer = PromocionSerializer(promocion)\n        return Response(serializer.data)\n    def put(self, request):\n        ident = request.GET.get('id')\n        promo = Promocion.objects.get(id=ident)\n        promo.estado = request.data.get('estado')\n        promo.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Cupones",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Cupones(APIView):\n    def get(self, request, format=None):\n        today = date.today()\n        enddate = today + timedelta(days=30)\n        cupones = Cupon.objects.all().filter(\n            fecha_expiracion__range=[today, enddate])\n        serializer = CuponSerializer(cupones, many=True)\n        return Response(serializer.data)\n    def delete(self, request, id, format=None):\n        cupon = Cupon.objects.get(id=id)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Cupon_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Cupon_Details(APIView):\n    def get(self, request, pk, format=None):\n        cupon = Cupon.objects.get(id=pk)\n        serializer = CuponSerializer(cupon)\n        return Response(serializer.data)\n    def put(self, request):\n        ident = request.GET.get('id')\n        cupo = Cupon.objects.get(id=ident)\n        cupo.estado = request.data.get('estado')\n        cupo.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Cupon_Cant",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Cupon_Cant(APIView):\n    def put(self, request, pk):\n        cupo = Cupon.objects.get(id=pk)\n        cupo.cantidad = request.data.get('cantidad')\n        cupo.save()\n        return Response(status=status.HTTP_200_OK)\nclass PromocionesCategoria(APIView):\n    def get(self, request, promCode, format=None):\n        promociones = PromocionCategoria.objects.all().filter(promocion__codigo=promCode)\n        serializer = PromocionCategoriaSerializer(promociones, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PromocionesCategoria",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PromocionesCategoria(APIView):\n    def get(self, request, promCode, format=None):\n        promociones = PromocionCategoria.objects.all().filter(promocion__codigo=promCode)\n        serializer = PromocionCategoriaSerializer(promociones, many=True)\n        return Response(serializer.data)\nclass AllPromocionesCategoria(APIView):\n    def get(self, request, format=None):\n        promociones = PromocionCategoria.objects.all()\n        serializer = PromocionCategoriaSerializer(promociones, many=True)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AllPromocionesCategoria",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AllPromocionesCategoria(APIView):\n    def get(self, request, format=None):\n        promociones = PromocionCategoria.objects.all()\n        serializer = PromocionCategoriaSerializer(promociones, many=True)\n        return Response(serializer.data)\nclass CuponesCategoria(APIView):\n    def get(self, request, cupCode, format=None):\n        # Cambio CuponesCategoria por CuponCategoria\n        cupones = CuponCategoria.objects.all().filter(cupon__codigo=cupCode)\n        serializer = CuponCategoriaSerializer(cupones, many=True)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "CuponesCategoria",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class CuponesCategoria(APIView):\n    def get(self, request, cupCode, format=None):\n        # Cambio CuponesCategoria por CuponCategoria\n        cupones = CuponCategoria.objects.all().filter(cupon__codigo=cupCode)\n        serializer = CuponCategoriaSerializer(cupones, many=True)\n        return Response(serializer.data)\nclass AllCuponesCategoria(APIView):\n    def get(self, request, format=None):\n        cupones = CuponCategoria.objects.all()\n        cupones = CuponCategoria.objects.all().filter(cupon__fecha_expiracion__gte = datetime.datetime.today())",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AllCuponesCategoria",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AllCuponesCategoria(APIView):\n    def get(self, request, format=None):\n        cupones = CuponCategoria.objects.all()\n        cupones = CuponCategoria.objects.all().filter(cupon__fecha_expiracion__gte = datetime.datetime.today())\n        cupones = cupones.filter(cupon__fecha_iniciacion__lte = datetime.datetime.today())\n        serializer = CuponCategoriaSerializer(cupones, many=True)\n        return Response(serializer.data)\nclass PagosTarjeta(APIView):\n    def post(self, request, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosTarjeta",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosTarjeta(APIView):\n    def post(self, request, format=None):\n        data = {}\n        data['success'] = False\n        user = request.data.get('username')\n        tarjeta_user = request.data.get('tarjeta')  # numero de la tarjeta\n        promotion = request.data.get('promocion')  # codigo de la promocion\n        amount = request.data.get('valor')\n        desc = request.data.get('descripcion')\n        descuento = request.data.get('descuento')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosEfectivo",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosEfectivo(APIView):\n    def post(self, request, format=None):\n        data = {}\n        data['success'] = False\n        user = request.data.get('username')\n        promotion = request.data.get('promocion')  # codigo de la promocion\n        amount = request.data.get('valor')\n        descuento = request.data.get('descuento')\n        desc = request.data.get('descripcion')\n        referencia = request.data.get('referencia')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosTarjetaUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosTarjetaUser(APIView):\n    def get(self, request, format=None):\n        pagost = PagoTarjeta.objects.all().filter()\n        serializer = PagoTarjetaSerializer(pagost, many=True)\n        return Response(serializer.data)\n    def put(self, request):\n        ident = request.GET.get('id')\n        pago = PagoTarjeta.objects.get(id=ident)\n        pago.pago_proveedor = request.data.get('estado')\n        pago.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosEfectivoUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosEfectivoUser(APIView):\n    def get(self, request, format=None):\n        pagose = PagoEfectivo.objects.all().filter()\n        serializer = PagoEfectivoSerializer(pagose, many=True)\n        return Response(serializer.data)\nclass PagosEfectivoUserP(APIView, MyPaginationMixin):\n    queryset = PagoEfectivo.objects.all().order_by('-id')\n    serializer_class = PagoEfectivoSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosEfectivoUserP",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosEfectivoUserP(APIView, MyPaginationMixin):\n    queryset = PagoEfectivo.objects.all().order_by('-id')\n    serializer_class = PagoEfectivoSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)\nclass EfectivosFilter(APIView, MyPaginationMixin):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "EfectivosFilter",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class EfectivosFilter(APIView, MyPaginationMixin):\n    queryset = PagoEfectivo.objects.all()\n    serializer_class = PagoEfectivoSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotalEfectivo",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotalEfectivo(APIView):\n    def get(self, request, format=None):\n        total = PagoEfectivo.objects.aggregate(Sum('valor'))\n        return Response(total)\nclass ValorTotalTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('valor'))\n        return Response(total)\nclass ValorTotalPayTarjeta(APIView):\n    def get(self, request, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotalTarjeta",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotalTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('valor'))\n        return Response(total)\nclass ValorTotalPayTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('cargo_paymentez'))\n        return Response(total)\nclass ValorTotalBancTarjeta(APIView):\n    def get(self, request, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotalPayTarjeta",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotalPayTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('cargo_paymentez'))\n        return Response(total)\nclass ValorTotalBancTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('cargo_banco'))\n        return Response(total)\nclass ValorTotalSisTarjeta(APIView):\n    def get(self, request, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotalBancTarjeta",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotalBancTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('cargo_banco'))\n        return Response(total)\nclass ValorTotalSisTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('cargo_sistema'))\n        return Response(total)\nclass ValorTotal(APIView):\n     def get(self, request, format=None):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotalSisTarjeta",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotalSisTarjeta(APIView):\n    def get(self, request, format=None):\n        total = PagoTarjeta.objects.aggregate(Sum('cargo_sistema'))\n        return Response(total)\nclass ValorTotal(APIView):\n     def get(self, request, format=None):\n        totalE = PagoEfectivo.objects.aggregate(total=Sum('valor'))['total'] or 0\n        totalT = PagoTarjeta.objects.aggregate(total=Sum('valor'))['total'] or 0\n        total = totalE + totalT\n        return Response({'total': total})",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ValorTotal",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ValorTotal(APIView):\n     def get(self, request, format=None):\n        totalE = PagoEfectivo.objects.aggregate(total=Sum('valor'))['total'] or 0\n        totalT = PagoTarjeta.objects.aggregate(total=Sum('valor'))['total'] or 0\n        total = totalE + totalT\n        return Response({'total': total})\nclass TarjetasFilter(APIView, MyPaginationMixin):\n    queryset = PagoTarjeta.objects.all()\n    serializer_class = PagoTarjetaSerializer\n    pagination_class = MyCustomPagination",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "TarjetasFilter",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class TarjetasFilter(APIView, MyPaginationMixin):\n    queryset = PagoTarjeta.objects.all()\n    serializer_class = PagoTarjetaSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        page = self.paginate_queryset(self.queryset.filter(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosTarjetaUserP",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosTarjetaUserP(APIView, MyPaginationMixin):\n    queryset = PagoTarjeta.objects.all().order_by('-id')\n    serializer_class = PagoTarjetaSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)\nclass PagosSolicitudesEfectivo(APIView):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosSolicitudesEfectivo",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosSolicitudesEfectivo(APIView):\n    def get(self, request, pago_ID, format=None):\n        pagos = PagoSolicitud.objects.all().filter(pago_efectivo=pago_ID)\n        serializer = PagoSolicitudSerializer(pagos, many=True)\n        return Response(serializer.data)\nclass PagosSolicitudesTarjeta(APIView):\n    def get(self, request, pago_ID, format=None):\n        pagos = PagoSolicitud.objects.all().filter(pago_tarjeta=pago_ID)\n        serializer = PagoSolicitudSerializer(pagos, many=True)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PagosSolicitudesTarjeta",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PagosSolicitudesTarjeta(APIView):\n    def get(self, request, pago_ID, format=None):\n        pagos = PagoSolicitud.objects.all().filter(pago_tarjeta=pago_ID)\n        serializer = PagoSolicitudSerializer(pagos, many=True)\n        return Response(serializer.data)\nclass Suggestions(APIView):\n    def get(self, request, format=None):\n        sugerencia = Suggestion.objects.all().filter()\n        serializer = SuggestionSerializer(sugerencia, many=True)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Suggestions",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Suggestions(APIView):\n    def get(self, request, format=None):\n        sugerencia = Suggestion.objects.all().filter()\n        serializer = SuggestionSerializer(sugerencia, many=True)\n        return Response(serializer.data)\n    '''def delete(self,request,id, format=None):\n        categoria = Categoria.objects.get(id=id)\n        servicios = Servicio.objects.filter(categoria=categoria)\n        servicios.delete()\n        categoria.delete()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Suggestions_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Suggestions_Details(APIView):\n    def get(self, request, pk, format=None):\n        sugerencia = Suggestion.objects.get(id=pk)\n        serializer = SuggestionSerializer(sugerencia)\n        return Response(serializer.data)\n    def put(self, request, pk, format=None):\n        sugerencia = Suggestion.objects.get(id=pk)\n        estado = request.data.get(\"estado\")\n        if estado:\n            sugerencia.estado = estado",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ReadSuggestions",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ReadSuggestions(APIView, MyPaginationMixin):\n    queryset = Suggestion.objects.all().filter(estado=True)\n    serializer_class = SuggestionSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)\nclass UnreadSuggestions(APIView, MyPaginationMixin):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "UnreadSuggestions",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class UnreadSuggestions(APIView, MyPaginationMixin):\n    queryset = Suggestion.objects.all().filter(estado=False)\n    serializer_class = SuggestionSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)\nclass Politics(APIView):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Politics",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Politics(APIView):\n    def get(self, request, format=None):\n        politics = Politicas.objects.all().filter()\n        serializer = PoliticasSerializer(politics, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}\n        ident = request.data.get('identifier')\n        term = request.data.get('terminos')\n        pol = Politicas.objects.update_or_create(",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Planes",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Planes(APIView):\n    def get(self, request, format=None):\n        planes = Plan.objects.all().filter()\n        serializer = PlanSerializer(planes, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = PlanSerializer(data=request.data)\n        if serializer.is_valid():\n            plan = serializer.save()\n            return Response(PlanSerializer(plan).data, status=status.HTTP_201_CREATED)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Publicidades",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Publicidades(APIView, MyPaginationMixin):\n    queryset = Publicidad.objects.all()\n    serializer_class = PublicidadSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset)\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)\n    def post(self, request):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "FiltroPublicidadesNombres",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class FiltroPublicidadesNombres(APIView, MyPaginationMixin):\n    queryset = Publicidad.objects.all()\n    serializer_class = PublicidadSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        page = self.paginate_queryset(self.queryset.filter(Q(titulo__icontains=request.GET.get(\n            'buscar')) | Q(descripcion__icontains=request.GET.get('buscar'))))\n        if page is not None:\n            serializer = self.serializer_class(page, many=True)\n            return self.get_paginated_response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AdminUser",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AdminUser(APIView):\n    def get(self, request, user):\n        user = User.objects.get(email=user)\n        user_datos = Datos.objects.get(user=user)\n        admin = Administrador.objects.get(user_datos=user_datos)\n        serializer = AdministradorSerializer(admin)\n        return Response(serializer.data)\nclass AdminUserPass(APIView):\n    def post(self, request, format=None):\n        data = {}",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AdminUserPass",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AdminUserPass(APIView):\n    def post(self, request, format=None):\n        data = {}\n        username = request.data.get(\"username\")\n        password = request.data.get(\"password\")\n        inf = {}\n        inf['username'] = username\n        inf['password'] = password\n        form = AuthenticationForm(data=inf)\n        if form.is_valid():",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Ciudades(APIView):\n    # queryset = Ciudad.objects.all()\n    # serializer_class = CiudadSerializer\n    # pagination_class = MyCustomPagination\n    def get(self, request, formt=None):\n        # page = self.paginate_queryset(self.queryset)\n        # if page is not None:\n        #     serializer = self.serializer_class(page, many=True)\n        # return self.get_paginated_response(serializer.data)\n        ciudades = Ciudad.objects.all().filter()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PlanProveedorView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PlanProveedorView(APIView):\n    def get(self, request, format=None):\n        planProveedor = PlanProveedor.objects.all().filter()\n        serializer = PlanProveedorSerializer(planProveedor, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = PlanProveedorSerializer(data=request.data)\n        if serializer.is_valid():\n            planProveedor = serializer.save()\n            return Response(PlanProveedorSerializer(planProveedor).data, status=status.HTTP_201_CREATED)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PlanesEstado",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PlanesEstado(APIView):\n    def get(self, request, format=None):\n        planes = Plan.objects.all().filter(estado=True)\n        serializer = PlanSerializer(planes, many=True)\n        return Response(serializer.data)\n# class PlanillasView(ModelViewSet):\n#     queryset = Planilla_Servicios.objects.all()\n#     serializer_class = PlanillasServiciosSerializer\n#     parser_classes = (MultiPartParser, FormParser)\nclass PendientesDocumentsView(APIView):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PendientesDocumentsView",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PendientesDocumentsView(APIView):\n    def get(self, request, format=None):\n        queryset = PendienteDocuments.objects.all()\n        serializer = PendientesDocumentsSerializer(queryset, many=True)\n        parser_classes = (MultiPartParser, FormParser)\n        return Response(serializer.data)\n    def delete(self, request, format=None):\n        pendiente = PendienteDocuments.objects.get(id=request.GET.get(\"id\"))\n        pendiente.delete()\n        return Response(status=status.HTTP_204_NO_CONTENT)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProveedoresDate_Search_Name",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProveedoresDate_Search_Name(APIView, MyPaginationMixin):\n    queryset = Proveedor.objects.all()\n    serializer_class = ProveedorSerializer\n    pagination_class = MyCustomPagination\n    def get(self, request, format=None):\n        fechaIn = datetime.datetime.strptime(\n            request.GET.get(\"fechaInicio\"), \"%Y-%m-%d\")\n        fechaFi = datetime.datetime.strptime(\n            request.GET.get(\"fechaFin\"), \"%Y-%m-%d\")\n        user = request.GET.get(\"user\")",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProveedorRegistro",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProveedorRegistro(APIView):\n    def post(self, request, format=None):\n        passw = User.objects.make_random_password()\n        grupoProveedor = Group.objects.get(name='Proveedor')\n        data = {}\n        try:\n            usuario = User.objects.create_user(email=request.data.get(\n                'email'), username=request.data.get('email'), password=passw)\n            grupoProveedor.user_set.add(usuario)\n        except:",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ProveedorEdicion",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ProveedorEdicion(APIView):\n    def put(self, request, format=None):\n        data = {}\n        # try:\n        proveedor = Proveedor.objects.get(id=request.data.get('id'))\n        datos_prov = Datos.objects.get(id=proveedor.user_datos.id)\n        # user = User.objects.get(email= request.data.get('email'))\n        user = User.objects.get(id=datos_prov.user.id)\n        if datos_prov:\n            if User.objects.filter(email=request.data.get('emailNuevo')).exists():",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SendNotificacion",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SendNotificacion(APIView):\n    def get(self, request, format=None):\n        notificaciones = NotificacionMasiva.objects.all()\n        serializer = NotificacionMasivaSerializer(notificaciones, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}\n        nombre = request.data.get('nombre')\n        titles = request.data.get('titulo')\n        descripcion = request.data.get('descripcion')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "SendNotificacion_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class SendNotificacion_Details(APIView):\n    def get(self, request, pk, format=None):\n        noti= NotificacionMasiva.objects.get(id=pk)\n        serializer = NotificacionMasivaSerializer(noti)\n        return Response(serializer.data)\n    def put(self, request):\n        ident = request.GET.get('id')\n        noti = NotificacionMasiva.objects.get(id=ident)\n        noti.estado = request.data.get('estado')\n        noti.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "RolesPermisos",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class RolesPermisos(APIView):\n    def get(self, request, id):\n        grupo = Group.objects.get(name=id)\n        serializer = GroupSerializer(grupo)\n        return Response(serializer.data)\n    def post(self, request):\n        grupoNuevo = Group.objects.create(name=request.data.get(\"nombre\"))\n        for permiso in request.POST.getlist('permisos'):\n            objPermiso = Permission.objects.get(name=permiso)\n            grupoNuevo.permissions.add(objPermiso)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Permisos",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Permisos(APIView):\n    def get(self, request):\n        permisos = Permission.objects.all()\n        serializer = PermissionSerializer(permisos, many=True)\n        return Response(serializer.data)\nclass Cargos(APIView):\n    def get(self, request, formt=None):\n        cargos = Cargo.objects.all().filter()\n        serializer = CargoSerializer(cargos, many=True)\n        return Response(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Cargos",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Cargos(APIView):\n    def get(self, request, formt=None):\n        cargos = Cargo.objects.all().filter()\n        serializer = CargoSerializer(cargos, many=True)\n        return Response(serializer.data)\n    def post(self, request, format=None):\n        data = {}\n        name = request.POST.get('nombre')\n        title = request.POST.get('titulo')\n        porcen = request.POST.get('porcentaje')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Cargo_Details",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Cargo_Details(APIView):\n    def get(self, request, pk, format=None):\n        cargo = Cargo.objects.get(id=pk)\n        serializer = CargoSerializer(cargo)\n        return Response(serializer.data)\n    # def put(self, request):\n        # ident = request.GET.get('id')\n        # insig = Insignia.objects.get(id = ident)\n        # insig.estado = request.data.get('estado')\n        # insig.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Puntos",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Puntos(APIView):\n    def get(self, request, email):\n        data = {}\n        try:\n            usuario = Datos.objects.get(user__email=email)\n            data['valid'] = \"OK\"\n            data['puntos'] = usuario.puntos\n            return Response(data)\n        except:\n            data['valid'] = \"error\"",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Politica",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Politica(APIView):\n    def get(self, request):\n        return HttpResponse('TÉRMINOS Y CONDICIONES PARA USO DE LA APLICACIÓN “VIVEFÁCIL” Reglamento de Uso de la Aplicación Móvil El presente documento establece las condiciones mediante las cuales se regirá el uso de la aplicación móvil “VIVEFÁCIL”, la cual es operada por DIANA ALEJANDRA PEÑA HERRERA domiciliada en Ecuador, Provincia del Guayas Cantón Daule, con RUC No. 0932562812001 La aplicación funcionará como un nuevo canal para la realización de diversas actividades descritas más adelante con el objeto de facilitar el acceso a los usuarios. El usuario se compromete a leer los términos y condiciones aquí establecidos, previamente a la descarga de la aplicación, por tanto, en caso de realizar la instalación se entiende que cuenta con el conocimiento integral de este documento y la consecuente aceptación de la totalidad de sus estipulaciones. El usuario reconoce que el ingreso de su información personal, y los datos que contiene la aplicación a su disposición respecto a los productos y/o servicios activos registrados dentro de la aplicación, la realizan de manera voluntaria, quienes optan por acceder a esta aplicación en Ecuador o desde fuera del territorio nacional, lo hacen por iniciativa propia y son responsables del cumplimiento de las leyes locales, en la medida en que dichas leyes sean aplicables en su correspondiente país. En caso de que se acceda por parte de menores de edad, deben contar con la supervisión de un adulto en todo momento desde la descarga y durante el uso de la aplicación, en el evento en que no se cumpla esta condición, le agradecemos no hacer uso de la aplicación. Alcance y Uso El usuario de la aplicación entiende y acepta que la información contenida en la misma es operada por DIANA ALEJANDRA PEÑA HERRERA, la misma que será la referente a su vínculo comercial o contractual con cada usuario, por tanto, las funcionalidades ofrecidas por la aplicación serán entregadas con el objetivo vinculado a las necesidades del beneficiario. En la aplicación se pondrá a disposición del CLIENTE información y/o permitirá la realización de las transacciones determinadas o habilitadas por VIVEFÁCIL para cada producto y/o servicio en particular. VIVEFÁCIL podrá adicionar, modificar o eliminar las funcionalidades en cualquier momento, lo cual acepta el usuario mediante la instalación de la aplicación. En todo caso, al momento de realizar dichas modificaciones se notificarán al usuario a través de la misma aplicación móvil una vez inicie sesión. Los tiempos de respuesta, trámites y demás solicitudes efectuadas por el usuario mediante la aplicación serán procesadas de conformidad con las especificaciones de cada producto y/o servicio activo con VIVEFÁCIL. El usuario acepta y autoriza que los registros electrónicos de las actividades mencionadas, que realice en la aplicación constituyen plena prueba de los mismos. Requisitos para uso El usuario deberá contar con un dispositivo móvil inteligente (Smartphone) o Tableta con sistema operativo Android o IOS, cualquiera de estos con acceso a internet, ambos seguros y confiables. VIVEFÁCIL no será responsable por la seguridad de los equipos Smartphone propiedad de los usuarios utilizados para el acceso al canal, ni por la disponibilidad del servicio en los dispositivos en los cuales se descargue la aplicación. En la forma permitida por la ley, los materiales de la aplicación se suministran sin garantía de ningún género, expresa o implícita, incluyendo sin limitación las garantías de calidad satisfactoria, comerciabilidad, adecuación para un fin particular o no infracción, por tanto, VIVEFÁCIL no garantiza el funcionamiento adecuado en los distintos sistemas operativos o dispositivos en los cuales se haga uso de la aplicación. Para acceder al portal, EL CLIENTE contará con Usuario y Clave, que lo identifica en su relación con VIVEFÁCIL. Obligaciones de los usuarios El usuario se obliga a usar la aplicación y los contenidos encontrados en ella de una manera diligente, correcta, lícita y en especial, se compromete a NO realizar las conductas descritas a continuación: • Utilizar los contenidos de forma, con fines o efectos contrarios a la ley, a la moral y a las buenas costumbres generalmente aceptadas o al orden público; • Reproducir, copiar, representar, utilizar, distribuir, transformar o modificar los contenidos de la aplicación, por cualquier procedimiento o sobre cualquier soporte, total o parcial, o permitir el acceso del público a través de cualquier modalidad de comunicación pública; • Utilizar los contenidos de cualquier manera que entrañen un riesgo de daño o inutilización de la aplicación o de los contenidos o de terceros; • Suprimir, eludir o manipular el derecho de autor y demás datos identificativos de los derechos de autor incorporados a los contenidos, así como los dispositivos técnicos de protección, o cualesquiera mecanismos de información que pudieren tener los contenidos; • Emplear los contenidos y, en particular, la información de cualquier clase obtenida a través de la aplicación para distribuir, transmitir, remitir, modificar, rehusar o reportar la publicidad o los contenidos de esta con fines de venta directa o con cualquier otra clase de finalidad comercial, mensajes no solicitados dirigidos a una pluralidad de personas con independencia de su finalidad, así como comercializar o divulgar de cualquier modo dicha información; • No permitir que terceros ajenos a usted usen la aplicación móvil con su clave; • Utilizar la aplicación y los contenidos con fines lícitos y/o ilícitos, contrarios a lo establecido en estos Términos y Condiciones, o al uso mismo de la aplicación, que sean lesivos de los derechos e intereses de terceros, o que de cualquier forma puedan dañar, inutilizar, sobrecargar o deteriorar la aplicación y los contenidos o impedir la normal utilización o disfrute de esta y de los contenidos por parte de los usuarios. Condiciones de Pago y Facturación Las tarifas aplicables al Servicio serán recaudadas por VIVEFÁCIL de forma automática, a través de los datos de la tarjeta de crédito / débito facilitado por el usuario, o efectivo u otros métodos acordados con el proveedor. Tras la petición del Servicio, VIVEFÁCIL se reserva el derecho a solicitar la pre-autorización del cobro a la entidad de crédito vinculada a la tarjeta de crédito/débito que el usuario hubiera introducido en la Aplicación. Tras la petición del Servicio, VIVEFÁCIL realizará el cobro efectivo del total del Servicio que vaya a requerirse. Las tarifas cobradas podrán, previo análisis, ser reembolsables en los siguientes casos: a) VIVEFÁCIL hará por medio de acreditación bancaria al no darse el servicio en un plazo de 72 horas hábiles después de haber recibido y verificado la queja y que sea válido el reclamo; b) En caso de requerir el servicio y pago con tarjeta de crédito y se desiste al día siguiente por 4 horas antes del servicio se cobrará una penalidad del 25%, si es pasado de las 24 horas antes del servicio se reintegra el valor total del mismo descontada la tarifa bancaria; c) En caso de que el usuario no reciba el servicio por no encontrarse en el lugar indicado por casos de eventualidad o fuerza mayor y se pasó de la fecha y hora del servicio se realizará la devolución con una penalidad del 50%; d) En caso de cobros duplicados se devolverá en plazo máximo de 72 horas hábiles toda vez que se verifique la duplicidad. Las tarifas y los gastos de cancelación y compensación, así como sus actualizaciones, están disponibles en todo momento en la y están sujetas a modificaciones. Se recomienda al Usuario y al Proveedor de los servicios que acceda periódicamente a la Aplicación para conocer las tarifas aplicables en cada momento. Los valores recaudados serán acreditados a los Proveedores de los Servicios, descontando el porcentaje establecido por el uso de los botones de pago y de la plataforma en caso de que aplique. El Proveedor de los servicios entregará a los clientes, una vez cumplido el servicio, la nota de venta o factura física o electrónica correspondiente, dependiendo de si el Proveedor tiene RISE o RUC. Los recibos de las transacciones realizadas estarán a disposición de los usuarios en el respectivo correo electrónico, sin perjuicio de que puedan consultarlas a través de la Aplicación. Los cargos realizados en tarjetas de crédito o débito se realizarán en todos los casos en dólares americanos (USD) o en la moneda de curso legal dentro de la República del Ecuador. VIVEFÁCIL no es responsable frente al usuario por cargos adicionales provenientes de bancos, emisores de tarjetas de crédito/débito, impuestos o en general cualquier cargo que no esté directamente realizado por VIVEFÁCIL y que se relacione con el uso del servicio. VIVEFÁCIL en ningún momento será responsable por cargos realizados en una tarjeta de crédito o débito que no cuenten con la autorización expresa del titular de la tarjeta. Para efectos del uso de la presente aplicación, VIVEFÁCIL presume que todos los cargos son realizados únicamente por los titulares y/o tarjetahabientes autorizados. El usuario declara conocer que los pagos realizados por objeto del servicio se realizan en el Ecuador pero podrían realizarse en el extranjero, en tal virtud los pagos realizados desde el Ecuador, con tarjetas de crédito/débito emitidas por bancos locales estarán sujetas al pago de cualquier valor adicional que la legislación vigente establezca. En ningún momento VIVEFÁCIL será responsable de asumir estos costos o será responsable por los tributos que correspondan a cada usuario. Licencia para copiar para uso personal Usted podrá leer, visualizar, imprimir y descargar el material de sus productos y/o servicios. Ninguna parte de la aplicación podrá ser reproducida o transmitida o almacenada en otro sitio web o en otra forma de sistema de recuperación electrónico. Ya sea que se reconozca específicamente o no, las marcas comerciales, las marcas de servicio y los logos visualizados en esta aplicación pertenecen a DIANA ALEJANDRA PEÑA HERRERA, sus socios promocionales u otros terceros. VIVEFÁCIL no interfiere, no toma decisiones, ni garantiza las relaciones que los usuarios lleguen a sostener o las vinculaciones con terceros que pauten y/o promocionen sus productos y servicios. Estas marcas de terceros se utilizan solamente para identificar los productos y servicios de sus respectivos propietarios y el patrocinio o el aval por parte de VIVEFÁCIL no se deben inferir con el uso de estas marcas comerciales. Integración con otras aplicaciones Los links de Facebook®, Instagram®, Twitter® en esta aplicación pueden mostrar contenido que no están bajo el control de VIVEFÁCIL. Aunque esta aplicación de VIVEFÁCIL trata de suministrar links solamente a sitios y aplicaciones de terceros que cumplan con las leyes y regulaciones aplicables y las normas de VIVEFÁCIL, el usuario debe entender que VIVEFÁCIL no tiene control sobre la naturaleza y el contenido de esos sitios y no está recomendando estos sitios, la información que contienen ni los productos o servicios de terceros. VIVEFÁCIL no acepta responsabilidad por el contenido del sitio de un tercero con el cual existe un link de hipertexto y no ofrece garantía (explícita o implícita) en cuanto al contenido de la información en esos sitios, ya que no recomienda estos sitios. Usted debe verificar las secciones de términos y condiciones, política legal y de privacidad de algunos otros sitios de VIVEFÁCIL o de un tercero con los cuales se enlaza. VIVEFÁCIL no asume ninguna responsabilidad por pérdida directa, indirecta o consecuencial por el uso de un sitio de un tercero. Uso de información y privacidad Con la descarga de la APP usted acepta y autoriza que DIANA ALEJANDRA PEÑA HERRERA, utilice sus datos en calidad de responsable del tratamiento para fines derivados de la ejecución de la APP. DIANA ALEJANDRA PEÑA HERRERA informa que podrá ejercer sus derechos a conocer, actualizar, rectificar y suprimir su información personal; así como el derecho a revocar el consentimiento otorgado para el tratamiento de datos personales previstos en la Ley Orgánica De Protección De Datos Personales, siendo voluntario responder preguntas sobre información sensible o de menores de edad. DIANA ALEJANDRA PEÑA HERRERA podrá dar a conocer, transferir y/o trasmitir sus datos personales dentro y fuera del país a cualquier empresa vinculada con DIANA ALEJANDRA PEÑA HERRERA, así como a terceros a consecuencia de un contrato, ley o vínculo lícito que así lo requiera, para todo lo anterior otorgo mi autorización expresa e inequívoca. De conformidad a lo anterior autoriza el tratamiento de su información en los términos señalados, y transfiere a VIVEFÁCIL de manera total, y sin limitación mis derechos de imagen y patrimoniales de autor, de manera voluntaria, previa, explícita, informada e inequívoca. Responsabilidad de VIVEFÁCIL VIVEFÁCIL procurará garantizar disponibilidad, continuidad o buen funcionamiento de la aplicación. VIVEFÁCIL podrá bloquear, interrumpir o restringir el acceso a esta cuando lo considere necesario para el mejoramiento de la aplicación o por dada de baja de la misma. Se recomienda al usuario tomar medidas adecuadas y actuar diligentemente al momento de acceder a la aplicación, como por ejemplo, contar con programas de protección, antivirus, para manejo de malware, spyware y herramientas similares. VIVEFÁCIL no será responsable por: a) Fuerza mayor o caso fortuito; b) Por la pérdida, extravío o hurto de su dispositivo móvil que implique el acceso de terceros a la aplicación móvil; c) Por errores en la digitación o accesos por parte del cliente; d) Por los perjuicios, lucro cesante, daño emergente, morales, y en general sumas a cargo de VIVEFÁCIL, por los retrasos, no procesamiento de información o suspensión del servicio del operador móvil o daños en los dispositivos móviles. e) no será vinculada a ningún proceso legal tanto civil como penal ya que la obligación recae en quien ofrece el servicio o proveedor ya que la aplicación es solo un medio de contacto con el proveedor. Denegación y Retirada del Acceso a la Aplicación En el evento en que un usuario incumpla estos Términos y Condiciones, o cualesquiera otras disposiciones que resulten de aplicación, VIVEFÁCIL podrá suspender su acceso a la aplicación. Términos y Condiciones El usuario acepta expresamente los Términos y Condiciones, siendo condición esencial para la utilización de la aplicación. En el evento en que se encuentre en desacuerdo con estos Términos y Condiciones, solicitamos abandonar la aplicación inmediatamente. VIVEFÁCIL podrá modificar los presentes términos y condiciones, avisando a los usuarios de la aplicación mediante la difusión de las modificaciones por algún medio electrónico, redes sociales, SMS y/o correo electrónico, lo cual se entenderá aceptado por el usuario si éste continua con el uso de la aplicación. Jurisdicción Estos términos y condiciones y todo lo que tenga que ver con esta aplicación, se rigen por las leyes ecuatorianas. Uso de información no personal VIVEFÁCIL también recolecta información no personal en forma agregada para seguimiento de datos como el número total de descargas de la aplicación. Utilizamos esta información, que permanece en forma agregada, para entender el comportamiento de la aplicación. Uso de Direcciones IP Una dirección de Protocolo de Internet (IP) es un conjunto de números que se asigna automáticamente a su o dispositivo móvil cuando usted accede a su proveedor de servicios de internet, o a través de la red de área local (LAN) de su organización o la red de área amplia (WAN). Los servidores web automáticamente identifican su dispositivo móvil por la dirección IP asignada a él durante su sesión en línea. VIVEFÁCIL podrá recolectar direcciones IP para propósitos de administración de sistemas y para auditar el uso de nuestro sitio, todo lo anterior de acuerdo con la autorización de protección de datos que se suscribe para tal efecto. Normalmente no vinculamos la dirección IP de un usuario con la información personal de ese usuario, lo que significa que cada sesión de usuario se registra, pero el usuario sigue siendo anónimo para nosotros. Sin embargo, podemos usar las direcciones IP para identificar a los usuarios de nuestro sitio cuando sea necesario con el objeto de exigir el cumplimiento de los términos de uso del sitio, o para proteger nuestro servicio, sitio u otros usuarios. Seguridad VIVEFÁCIL está comprometido en la protección de la seguridad de su información personal. VIVEFÁCIL tiene implementados mecanismos de seguridad que aseguran la protección de la información personal, así como los accesos únicamente al personal y sistemas autorizados, también contra la pérdida, uso indebido y alteración de sus datos de usuario bajo nuestro control. Excepto como se indica a continuación, sólo personal autorizado tiene acceso a la información que nos proporciona. Además, hemos impuesto reglas estrictas a los colaboradores de VIVEFÁCIL con acceso a las bases de datos que almacenan información del usuario o a los servidores que hospedan nuestros servicios')\nclass ConfirmarDescuento(APIView):\n    def get(self, request, mail):\n        try:\n            usuario = Datos.objects.get(user__email=mail)\n            if usuario.descuento == 0:\n                usuario.descuento = 1\n                usuario.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ConfirmarDescuento",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ConfirmarDescuento(APIView):\n    def get(self, request, mail):\n        try:\n            usuario = Datos.objects.get(user__email=mail)\n            if usuario.descuento == 0:\n                usuario.descuento = 1\n                usuario.save()\n                return Response(\"descuento\")\n            elif usuario.descuento == 1:\n                return Response(\"reclamado\")",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "RevisarDescuentoUnico",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class RevisarDescuentoUnico(APIView):\n    def get(self, request, mail):\n        try:\n            usuario = Datos.objects.get(user__email=mail)\n            if usuario.descuento == 1:\n                return Response(\"descuento\")\n            else:\n                return Response(\"no\")\n        except:\n            return Response(\"error\")",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "UsarDescuentoUnico",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class UsarDescuentoUnico(APIView):\n    def get(self, request, mail):\n        try:\n            usuario = Datos.objects.get(user__email=mail)\n            if usuario.descuento == 1:\n                usuario.descuento = 2\n                usuario.save()\n                return Response(\"usado\")\n            else:\n                return Response(\"error\")",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "AdminPage",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class AdminPage(APIView):\n    def get (self, request):\n        return redirect(to=\"/static/index.html\")\nclass ActualizarCaducidad (APIView):\n    print(\"Cosa Ver Aca0\")\n    def put(self, request, pk):\n        try:\n            consola=request.data.get('id')\n            proveedor = Proveedor.objects.get(id=request.data.get('id'))\n            numero=request.data.get('input')",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "ActualizarCaducida",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class ActualizarCaducidad (APIView):\n    print(\"Cosa Ver Aca0\")\n    def put(self, request, pk):\n        try:\n            consola=request.data.get('id')\n            proveedor = Proveedor.objects.get(id=request.data.get('id'))\n            numero=request.data.get('input')\n            novafecha=datetime.datetime.strptime(numero, '%Y-%m-%d').date()\n            proveedor.fecha_caducidad= novafecha\n            proveedor.estado = True",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "RevisarCaducida",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class RevisarCaducidad (APIView):\n    print(\"Cosa Ver Aca0\")\n    def put(self, request, pk):\n        try:\n            formatEmail = FormatEmail()\n            for e in Proveedor.objects.all().order_by('-id').filter(fecha_caducidad__lt=date.today()):\n                if e.estado != False:\n                    thread = threading.Thread(target=formatEmail.send_email([e.user_datos.user.username], \"Cuenta caducada\", 'emails/enviarAlerta.html', {\"username\":e.user_datos.user.username, \"contenido\": \"Tu cuenta ha caducado, si deseas extender tu contrato contactanos por nuestros canales oficiales.\"}))\n                e.estado = False\n                e.save()",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Bancos",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class Bancos(APIView):\n    def get(self, request):\n        try:\n            bancos = Banco.objects.all()\n            print(bancos)\n            serializer = BancoSerializer(bancos, many=True)\n            return Response(serializer.data, status=status.HTTP_200_OK)\n        except Exception as e:\n            return Response({'error': str(e)}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)\n    def delete(self, request, id):",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "send_notificationF",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def send_notificationF(tokend, title,body,data):\n    try:\n        # Verifica si el token está disponible\n        if not settings.FIREBASE_ACCESS_TOKEN:\n            return JsonResponse({\"error\": \"No se pudo obtener el token de Firebase\"}, status=500)\n        # Recorrer cada token en la lista\n        responses = []  # Almacena las respuestas de Firebase\n        for token in tokend:\n            # Cuerpo de la notificación\n            message = {",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "planesProveedor",
        "kind": 5,
        "importPath": "TomeSoft_1.actualizar",
        "description": "TomeSoft_1.actualizar",
        "peekOfCode": "planesProveedor = PlanProveedor.objects.filter(fecha_expiracion__lt = timezone.now(), estado=True)\nrequest = {\"estado\": False}\nfor i in planesProveedor:\n    serializer = PlanProveedorSerializer(i, data=request, partial=True)\n    if serializer.is_valid():\n        serializer.save()\n        print(serializer.data, flush=True)",
        "detail": "TomeSoft_1.actualizar",
        "documentation": {}
    },
    {
        "label": "request",
        "kind": 5,
        "importPath": "TomeSoft_1.actualizar",
        "description": "TomeSoft_1.actualizar",
        "peekOfCode": "request = {\"estado\": False}\nfor i in planesProveedor:\n    serializer = PlanProveedorSerializer(i, data=request, partial=True)\n    if serializer.is_valid():\n        serializer.save()\n        print(serializer.data, flush=True)",
        "detail": "TomeSoft_1.actualizar",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nFIREBASE_ACCESS_TOKEN = None\nACCESS_URL = None\ntry:\n    ACCESS_URL = \"https://fcm.googleapis.com/v1/projects/vive-facil-66ae4/messages:send\"\n    # Ruta al archivo de credenciales\n    cred = credentials.Certificate(\"C:/Users/user/Desktop/vivefacil/Nueva carpeta/BACK/ViveFacilBack2024/TomeSoft_1/vive-facil-66ae4-firebase-adminsdk-fo42r-94d590fc9a.json\")\n    # Inicializa Firebase Admin SDK\n    firebase_admin.initialize_app(cred)\n    print(\"Firebase Admin SDK inicializado correctamente.\")",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_ACCESS_TOKEN",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "FIREBASE_ACCESS_TOKEN = None\nACCESS_URL = None\ntry:\n    ACCESS_URL = \"https://fcm.googleapis.com/v1/projects/vive-facil-66ae4/messages:send\"\n    # Ruta al archivo de credenciales\n    cred = credentials.Certificate(\"C:/Users/user/Desktop/vivefacil/Nueva carpeta/BACK/ViveFacilBack2024/TomeSoft_1/vive-facil-66ae4-firebase-adminsdk-fo42r-94d590fc9a.json\")\n    # Inicializa Firebase Admin SDK\n    firebase_admin.initialize_app(cred)\n    print(\"Firebase Admin SDK inicializado correctamente.\")\n    # Generar el token de acceso utilizando google-auth",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "ACCESS_URL",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "ACCESS_URL = None\ntry:\n    ACCESS_URL = \"https://fcm.googleapis.com/v1/projects/vive-facil-66ae4/messages:send\"\n    # Ruta al archivo de credenciales\n    cred = credentials.Certificate(\"C:/Users/user/Desktop/vivefacil/Nueva carpeta/BACK/ViveFacilBack2024/TomeSoft_1/vive-facil-66ae4-firebase-adminsdk-fo42r-94d590fc9a.json\")\n    # Inicializa Firebase Admin SDK\n    firebase_admin.initialize_app(cred)\n    print(\"Firebase Admin SDK inicializado correctamente.\")\n    # Generar el token de acceso utilizando google-auth\n    credentials = service_account.Credentials.from_service_account_file(",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "SECRET_KEY = 'i@!=q4ky)pxe0sg&uz%qk&u!2rf2hga6qwh6^3!iopf4nldezq'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['tomesoft1.pythonanywhere.com', '127.0.0.1', 'http://localhost:3000/','ccapi-stg.paymentez.com','*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['tomesoft1.pythonanywhere.com', '127.0.0.1', 'http://localhost:3000/','ccapi-stg.paymentez.com','*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['tomesoft1.pythonanywhere.com', '127.0.0.1', 'http://localhost:3000/','ccapi-stg.paymentez.com','*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.sites',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.sites',\n    'django_inlinecss',\n    'rest_auth',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n]\nFCM_DJANGO_SETTINGS = {\n     # an instance of firebase_admin.App to be used as default for all fcm-django requests\n     # default: None (the default Firebase app)\n    \"DEFAULT_FIREBASE_APP\": None,\n     # default: _('FCM Django')\n    \"APP_VERBOSE_NAME\": \"ToMe\",\n     # true if you want to have only one active device per registered user at a time",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "FCM_DJANGO_SETTINGS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "FCM_DJANGO_SETTINGS = {\n     # an instance of firebase_admin.App to be used as default for all fcm-django requests\n     # default: None (the default Firebase app)\n    \"DEFAULT_FIREBASE_APP\": None,\n     # default: _('FCM Django')\n    \"APP_VERBOSE_NAME\": \"ToMe\",\n     # true if you want to have only one active device per registered user at a time\n     # default: False\n    \"ONE_DEVICE_PER_USER\": True,\n     # devices to which notifications cannot be sent,",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.BrokenLinkEmailsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "SITE_ID = 1\nROOT_URLCONF = 'TomeSoft_1.urls'\nCORS_ORIGIN_ALLOW_ALL = True\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "ROOT_URLCONF = 'TomeSoft_1.urls'\nCORS_ORIGIN_ALLOW_ALL = True\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "WSGI_APPLICATION = 'TomeSoft_1.wsgi.application'\nAUTHENTICATION_BACKENDS = {\n    'django.contrib.auth.backends.ModelBackend',\n    'allauth.account.auth_backends.AuthenticationBackend'\n    }\n# Database\n# https://docs.djangoproject.com/en/2.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = {\n    'django.contrib.auth.backends.ModelBackend',\n    'allauth.account.auth_backends.AuthenticationBackend'\n    }\n# Database\n# https://docs.djangoproject.com/en/2.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        #'NAME': 'tomesoft1$tome-db',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        #'NAME': 'tomesoft1$tome-db',\n        #'NAME': 'tomeSoft',\n        'NAME': 'tomesoft_prueba1',\n        #'USER': 'tomesoft1',\n        'USER': 'root',\n        #'PASSWORD': 'Software1',\n        'PASSWORD': 'root',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "SOCIALACCOUNT_PROVIDERS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "SOCIALACCOUNT_PROVIDERS = \\\n    {'facebook':\n       {'METHOD': 'oauth2',\n        'SCOPE': ['email','public_profile', 'user_friends'],\n        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},\n        'FIELDS': [\n            'id',\n            'email',\n            'name',\n            'first_name',",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "LANGUAGE_CODE = 'es'\nTIME_ZONE = 'America/Guayaquil'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n#EMAIL_HOST= 'smtp.vivefacil.app'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "TIME_ZONE = 'America/Guayaquil'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n#EMAIL_HOST= 'smtp.vivefacil.app'\nEMAIL_HOST='smtp.gmail.com'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n#EMAIL_HOST= 'smtp.vivefacil.app'\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_USE_TLS = True",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n#EMAIL_HOST= 'smtp.vivefacil.app'\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT= 587",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n#EMAIL_HOST= 'smtp.vivefacil.app'\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT= 587\nEMAIL_HOST_USER='info.vivefacile@gmail.com'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n#EMAIL_HOST= 'smtp.vivefacil.app'\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT= 587\nEMAIL_HOST_USER='info.vivefacile@gmail.com'\n#EMAIL_HOST_USER= 'administrador@vivefacil.app'\nEMAIL_HOST_PASSWORD='iddp xwsc auby xjwk'\n#EMAIL_HOST_PASSWORD= 'Ecuador*2023@!'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n#EMAIL_HOST= 'smtp.vivefacil.app'\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT= 587\nEMAIL_HOST_USER='info.vivefacile@gmail.com'\n#EMAIL_HOST_USER= 'administrador@vivefacil.app'\nEMAIL_HOST_PASSWORD='iddp xwsc auby xjwk'\n#EMAIL_HOST_PASSWORD= 'Ecuador*2023@!'\n# default static files settings for PythonAnywhere.",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_PORT= 587\nEMAIL_HOST_USER='info.vivefacile@gmail.com'\n#EMAIL_HOST_USER= 'administrador@vivefacil.app'\nEMAIL_HOST_PASSWORD='iddp xwsc auby xjwk'\n#EMAIL_HOST_PASSWORD= 'Ecuador*2023@!'\n# default static files settings for PythonAnywhere.\n# see https://help.pythonanywhere.com/pages/DjangoStaticFiles for more info\nMEDIA_ROOT = os.path.join(BASE_DIR,'media')\nMEDIA_URL = '/media/'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR,'media')\nMEDIA_URL = '/media/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static') # Ruta absoluta donde se recopilarán los archivos estáticos\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]\nACCOUNT_EMAIL_VERIFICATION='none'\nACCOUNT_EMAIL_REQUIRED=True\nACCOUNT_AUTHENTICATION_METHOD='username'\nSERVER_APP_CODE= 'INNOVA-EC-SERVER'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static') # Ruta absoluta donde se recopilarán los archivos estáticos\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]\nACCOUNT_EMAIL_VERIFICATION='none'\nACCOUNT_EMAIL_REQUIRED=True\nACCOUNT_AUTHENTICATION_METHOD='username'\nSERVER_APP_CODE= 'INNOVA-EC-SERVER'\nSERVER_APP_KEY= 'Y5FnbpWYtULtj1Muvw3cl8LJ7FVQfM'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "TomeSoft_1.settings",
        "description": "TomeSoft_1.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static') # Ruta absoluta donde se recopilarán los archivos estáticos\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"static\"),\n# ]\nACCOUNT_EMAIL_VERIFICATION='none'\nACCOUNT_EMAIL_REQUIRED=True\nACCOUNT_AUTHENTICATION_METHOD='username'\nSERVER_APP_CODE= 'INNOVA-EC-SERVER'\nSERVER_APP_KEY= 'Y5FnbpWYtULtj1Muvw3cl8LJ7FVQfM'\nCLIENT_APP_CODE=  'INNOVA-EC-CLIENT'",
        "detail": "TomeSoft_1.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "TomeSoft_1.urls",
        "description": "TomeSoft_1.urls",
        "peekOfCode": "urlpatterns = [\n    # path('admin/', admin.site.urls),\n    path('', include('api.urls')),\n    path('admin/', TemplateView.as_view(template_name='index.html'), name='index'),\n    path('adminDefault/', admin.site.urls),\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root= settings.MEDIA_ROOT)\n    urlpatterns += static(settings.STATIC_URL, document_root= settings.STATIC_ROOT)",
        "detail": "TomeSoft_1.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "kind": 5,
        "importPath": "TomeSoft_1.wsgi",
        "description": "TomeSoft_1.wsgi",
        "peekOfCode": "path = '/home/tomesoft1/TomeSoft_1/static'\napplication = get_wsgi_application()",
        "detail": "TomeSoft_1.wsgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "TomeSoft_1.wsgi",
        "description": "TomeSoft_1.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "TomeSoft_1.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'TomeSoft_1.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc",
        "detail": "manage",
        "documentation": {}
    }
]